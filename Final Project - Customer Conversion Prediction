{"cells":[{"cell_type":"markdown","metadata":{"id":"Jrifcs7EfiIZ"},"source":["#Customer Conversion Prediction"]},{"cell_type":"markdown","source":["Problem Statement\n","You are working for a new-age insurance company and employ mutiple outreach plans to sell term insurance to your customers. Telephonic marketing campaigns still remain one of the most effective way to reach out to people however they incur a lot of cost. Hence, it is important to identify the customers that are most likely to convert beforehand so that they can be specifically targeted via call. We are given the historical marketing data of the insurance company and are required to build a ML model that will predict if a client will subscribe to the insurance. \n","\n","Data\n","The historical sales data is available as a compressed file here. \n","\n","Features: \n","•\tage (numeric)\n","•\tjob : type of job\n","•\tmarital : marital status\n","•\teducational_qual : education status\n","•\tcall_type : contact communication type\n","•\tday: last contact day of the month (numeric)\n","•\tmon: last contact month of year\n","•\tdur: last contact duration, in seconds (numeric)\n","•\tnum_calls: number of contacts performed during this campaign and for this client \n","•\tprev_outcome: outcome of the previous marketing campaign (categorical: \"unknown\",\"other\",\"failure\",\"success\")\n","Output variable (desired target):\n","•\ty - has the client subscribed to the insurance?\n","\n","Minimum Requirements\n","It is not sufficient to just fit a model - the model must be analysed to find the important factors that contribute towards the conversion rate. AUROC must be used as a metric to evaluate the performance of the models. \n"],"metadata":{"id":"3irelHnYEuYY"}},{"cell_type":"markdown","metadata":{"id":"_-rJrPqZ5uZU"},"source":["**IMPORTING THE REQUIRED LIABARIES**"]},{"cell_type":"code","execution_count":310,"metadata":{"executionInfo":{"elapsed":1320,"status":"ok","timestamp":1678881015970,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"P5KYJiAXffei"},"outputs":[],"source":["import pandas as pd # handle the data\n","import numpy as np #handle the arrays\n","from sklearn.model_selection import train_test_split # split the data\n","\n","from sklearn import metrics # evaluation metrics\n","import seaborn as sns # plotting the data\n","import matplotlib.pyplot as plt # plotting the data\n","import warnings \n","warnings.filterwarnings('ignore')"]},{"cell_type":"code","execution_count":311,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":179,"status":"ok","timestamp":1678881016643,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"hYuQaASxm82y","outputId":"ace14341-3ca8-4b7a-b0ee-8e8b5081d0a4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       age           job   marital education_qual  call_type  day  mon   dur  \\\n","0       58    management   married       tertiary    unknown    5  may   261   \n","1       44    technician    single      secondary    unknown    5  may   151   \n","2       33  entrepreneur   married      secondary    unknown    5  may    76   \n","3       47   blue-collar   married        unknown    unknown    5  may    92   \n","4       33       unknown    single        unknown    unknown    5  may   198   \n","...    ...           ...       ...            ...        ...  ...  ...   ...   \n","45206   51    technician   married       tertiary   cellular   17  nov   977   \n","45207   71       retired  divorced        primary   cellular   17  nov   456   \n","45208   72       retired   married      secondary   cellular   17  nov  1127   \n","45209   57   blue-collar   married      secondary  telephone   17  nov   508   \n","45210   37  entrepreneur   married      secondary   cellular   17  nov   361   \n","\n","       num_calls prev_outcome    y  \n","0              1      unknown   no  \n","1              1      unknown   no  \n","2              1      unknown   no  \n","3              1      unknown   no  \n","4              1      unknown   no  \n","...          ...          ...  ...  \n","45206          3      unknown  yes  \n","45207          2      unknown  yes  \n","45208          5      success  yes  \n","45209          4      unknown   no  \n","45210          2        other   no  \n","\n","[45211 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-07201708-1e0a-45cd-83c8-7a1a07470c40\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>job</th>\n","      <th>marital</th>\n","      <th>education_qual</th>\n","      <th>call_type</th>\n","      <th>day</th>\n","      <th>mon</th>\n","      <th>dur</th>\n","      <th>num_calls</th>\n","      <th>prev_outcome</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>58</td>\n","      <td>management</td>\n","      <td>married</td>\n","      <td>tertiary</td>\n","      <td>unknown</td>\n","      <td>5</td>\n","      <td>may</td>\n","      <td>261</td>\n","      <td>1</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>44</td>\n","      <td>technician</td>\n","      <td>single</td>\n","      <td>secondary</td>\n","      <td>unknown</td>\n","      <td>5</td>\n","      <td>may</td>\n","      <td>151</td>\n","      <td>1</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>33</td>\n","      <td>entrepreneur</td>\n","      <td>married</td>\n","      <td>secondary</td>\n","      <td>unknown</td>\n","      <td>5</td>\n","      <td>may</td>\n","      <td>76</td>\n","      <td>1</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>47</td>\n","      <td>blue-collar</td>\n","      <td>married</td>\n","      <td>unknown</td>\n","      <td>unknown</td>\n","      <td>5</td>\n","      <td>may</td>\n","      <td>92</td>\n","      <td>1</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>33</td>\n","      <td>unknown</td>\n","      <td>single</td>\n","      <td>unknown</td>\n","      <td>unknown</td>\n","      <td>5</td>\n","      <td>may</td>\n","      <td>198</td>\n","      <td>1</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>45206</th>\n","      <td>51</td>\n","      <td>technician</td>\n","      <td>married</td>\n","      <td>tertiary</td>\n","      <td>cellular</td>\n","      <td>17</td>\n","      <td>nov</td>\n","      <td>977</td>\n","      <td>3</td>\n","      <td>unknown</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>45207</th>\n","      <td>71</td>\n","      <td>retired</td>\n","      <td>divorced</td>\n","      <td>primary</td>\n","      <td>cellular</td>\n","      <td>17</td>\n","      <td>nov</td>\n","      <td>456</td>\n","      <td>2</td>\n","      <td>unknown</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>45208</th>\n","      <td>72</td>\n","      <td>retired</td>\n","      <td>married</td>\n","      <td>secondary</td>\n","      <td>cellular</td>\n","      <td>17</td>\n","      <td>nov</td>\n","      <td>1127</td>\n","      <td>5</td>\n","      <td>success</td>\n","      <td>yes</td>\n","    </tr>\n","    <tr>\n","      <th>45209</th>\n","      <td>57</td>\n","      <td>blue-collar</td>\n","      <td>married</td>\n","      <td>secondary</td>\n","      <td>telephone</td>\n","      <td>17</td>\n","      <td>nov</td>\n","      <td>508</td>\n","      <td>4</td>\n","      <td>unknown</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>45210</th>\n","      <td>37</td>\n","      <td>entrepreneur</td>\n","      <td>married</td>\n","      <td>secondary</td>\n","      <td>cellular</td>\n","      <td>17</td>\n","      <td>nov</td>\n","      <td>361</td>\n","      <td>2</td>\n","      <td>other</td>\n","      <td>no</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>45211 rows × 11 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-07201708-1e0a-45cd-83c8-7a1a07470c40')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-07201708-1e0a-45cd-83c8-7a1a07470c40 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-07201708-1e0a-45cd-83c8-7a1a07470c40');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":311}],"source":["dataset = pd.read_csv('/content/train.csv')\n","dataset"]},{"cell_type":"markdown","source":["The ten features we’ll be using are:\n","\n","1. age (numeric) \n","2. job : type of job \n","3. marital : marital status \n","4. educational_qual : education status \n","5. call_type : contact communication type \n","6. day: last contact day of the month (numeric) \n","7. mon: last contact month of year \n","8. dur: last contact duration, in seconds (numeric) \n","9. num_calls: number of contacts performed during this campaign and for this client \n","10. prev_outcome: outcome of the previous marketing campaign (categorical: \"unknown\",\"other\",\"failure\",\"success\") Output variable (desired target): \n","11. y - has the client subscribed to the insurance?"],"metadata":{"id":"3TkQ_J2YT9ae"}},{"cell_type":"markdown","source":["#DATA JAR\n","**CLEAN**"],"metadata":{"id":"agM-jbFoSZ9O"}},{"cell_type":"code","execution_count":312,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":173,"status":"ok","timestamp":1678881016645,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"wZ0t5ypxnFLg","outputId":"7c8649f6-0550-4228-b4b6-4f9a28ea3a56"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(45211, 11)"]},"metadata":{},"execution_count":312}],"source":["dataset.shape"]},{"cell_type":"code","source":["dataset.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4X8ZIbcbS5MF","executionInfo":{"status":"ok","timestamp":1678881016650,"user_tz":-330,"elapsed":166,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"4b7db668-1ee0-49da-d87c-497b43147278"},"execution_count":313,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age               0\n","job               0\n","marital           0\n","education_qual    0\n","call_type         0\n","day               0\n","mon               0\n","dur               0\n","num_calls         0\n","prev_outcome      0\n","y                 0\n","dtype: int64"]},"metadata":{},"execution_count":313}]},{"cell_type":"code","execution_count":314,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":158,"status":"ok","timestamp":1678881016651,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"NasezM-gygP6","outputId":"15b4428e-9c1c-452f-beeb-bd48407cd061"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(45205, 11)"]},"metadata":{},"execution_count":314}],"source":["dataset=dataset.drop_duplicates() #dropping duplicates if any\n","dataset.shape"]},{"cell_type":"code","source":["dataset.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"t5VrKKCYUKeI","executionInfo":{"status":"ok","timestamp":1678881016652,"user_tz":-330,"elapsed":149,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"288b7b7b-34e6-4d68-d32f-b824f0039423"},"execution_count":315,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                age          day           dur     num_calls\n","count  45205.000000  45205.00000  45205.000000  45205.000000\n","mean      40.937087     15.80688    258.183055      2.763898\n","std       10.619130      8.32234    257.538504      3.098189\n","min       18.000000      1.00000      0.000000      1.000000\n","25%       33.000000      8.00000    103.000000      1.000000\n","50%       39.000000     16.00000    180.000000      2.000000\n","75%       48.000000     21.00000    319.000000      3.000000\n","max       95.000000     31.00000   4918.000000     63.000000"],"text/html":["\n","  <div id=\"df-725856c1-a0bf-41df-a5fe-f66cfd4dfe9f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>day</th>\n","      <th>dur</th>\n","      <th>num_calls</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>45205.000000</td>\n","      <td>45205.00000</td>\n","      <td>45205.000000</td>\n","      <td>45205.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>40.937087</td>\n","      <td>15.80688</td>\n","      <td>258.183055</td>\n","      <td>2.763898</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>10.619130</td>\n","      <td>8.32234</td>\n","      <td>257.538504</td>\n","      <td>3.098189</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>18.000000</td>\n","      <td>1.00000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>33.000000</td>\n","      <td>8.00000</td>\n","      <td>103.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>39.000000</td>\n","      <td>16.00000</td>\n","      <td>180.000000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>48.000000</td>\n","      <td>21.00000</td>\n","      <td>319.000000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>95.000000</td>\n","      <td>31.00000</td>\n","      <td>4918.000000</td>\n","      <td>63.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-725856c1-a0bf-41df-a5fe-f66cfd4dfe9f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-725856c1-a0bf-41df-a5fe-f66cfd4dfe9f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-725856c1-a0bf-41df-a5fe-f66cfd4dfe9f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":315}]},{"cell_type":"code","source":["iqr = dataset['age'].quantile(0.75) - dataset['age'].quantile(0.25)\n","upper_threshold = dataset['age'].quantile(0.75) + (1.5 * iqr)\n","lower_threshold = dataset['age'].quantile(0.25) - (1.5 * iqr)\n","upper_threshold, lower_threshold\n","#Though there is an outlier in age, we will not treat the outlier as bad, as all the outliers are not bad."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y7jtN_zuUsY3","executionInfo":{"status":"ok","timestamp":1678881016653,"user_tz":-330,"elapsed":147,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"4cf29543-9477-4726-866f-7a252c8abc75"},"execution_count":316,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(70.5, 10.5)"]},"metadata":{},"execution_count":316}]},{"cell_type":"code","source":["iqr = dataset['day'].quantile(0.75) - dataset['day'].quantile(0.25)\n","upper_threshold = dataset['day'].quantile(0.75) + (1.5 * iqr)\n","lower_threshold = dataset['day'].quantile(0.25) - (1.5 * iqr)\n","upper_threshold, lower_threshold"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jw0hb5s3U2HC","executionInfo":{"status":"ok","timestamp":1678881016653,"user_tz":-330,"elapsed":137,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"fe1a8f68-52fe-4461-9695-87a89e649620"},"execution_count":317,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(40.5, -11.5)"]},"metadata":{},"execution_count":317}]},{"cell_type":"code","source":["iqr = dataset['dur'].quantile(0.75) - dataset['dur'].quantile(0.25)\n","upper_threshold = dataset['dur'].quantile(0.75) + (1.5 * iqr)\n","lower_threshold = dataset['dur'].quantile(0.25) - (1.5 * iqr)\n","upper_threshold, lower_threshold"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qMVt22MAVCJw","executionInfo":{"status":"ok","timestamp":1678881016654,"user_tz":-330,"elapsed":130,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"f58508a1-06dd-4ad8-cbd3-495a006c14c3"},"execution_count":318,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(643.0, -221.0)"]},"metadata":{},"execution_count":318}]},{"cell_type":"code","source":["dataset.dur=dataset.dur.clip(-221.0,643.0) \n","#Clipping the duration column as the upper threshold is high, which definitely affects the model."],"metadata":{"id":"KhbbPyLHae1V","executionInfo":{"status":"ok","timestamp":1678881016655,"user_tz":-330,"elapsed":120,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":319,"outputs":[]},{"cell_type":"code","source":["iqr = dataset['num_calls'].quantile(0.75) - dataset['num_calls'].quantile(0.25)\n","upper_threshold = dataset['num_calls'].quantile(0.75) + (1.5 * iqr)\n","lower_threshold = dataset['num_calls'].quantile(0.25) - (1.5 * iqr)\n","upper_threshold, lower_threshold"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3jEGHL7pVN_q","executionInfo":{"status":"ok","timestamp":1678881016657,"user_tz":-330,"elapsed":121,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"db6ec06d-9f0f-48e1-acdc-6a74ba11b6c3"},"execution_count":320,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(6.0, -2.0)"]},"metadata":{},"execution_count":320}]},{"cell_type":"code","source":["dataset.num_calls=dataset.num_calls.clip(-2.0,6.0) \n","#Clipping the num_calls column as the upper threshold is high, which definitely affects the model."],"metadata":{"id":"6y25Dei3bGqw","executionInfo":{"status":"ok","timestamp":1678881016660,"user_tz":-330,"elapsed":116,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":321,"outputs":[]},{"cell_type":"code","source":["dataset.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"0lM01uqNbhLQ","executionInfo":{"status":"ok","timestamp":1678881016661,"user_tz":-330,"elapsed":116,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"c3b3c245-6dff-411f-f2ce-7df350b63e78"},"execution_count":322,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                age          day          dur     num_calls\n","count  45205.000000  45205.00000  45205.00000  45205.000000\n","mean      40.937087     15.80688    234.95620      2.392235\n","std       10.619130      8.32234    176.75476      1.600152\n","min       18.000000      1.00000      0.00000      1.000000\n","25%       33.000000      8.00000    103.00000      1.000000\n","50%       39.000000     16.00000    180.00000      2.000000\n","75%       48.000000     21.00000    319.00000      3.000000\n","max       95.000000     31.00000    643.00000      6.000000"],"text/html":["\n","  <div id=\"df-36907c93-186b-4884-8f2d-227f14553d71\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>day</th>\n","      <th>dur</th>\n","      <th>num_calls</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>45205.000000</td>\n","      <td>45205.00000</td>\n","      <td>45205.00000</td>\n","      <td>45205.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>40.937087</td>\n","      <td>15.80688</td>\n","      <td>234.95620</td>\n","      <td>2.392235</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>10.619130</td>\n","      <td>8.32234</td>\n","      <td>176.75476</td>\n","      <td>1.600152</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>18.000000</td>\n","      <td>1.00000</td>\n","      <td>0.00000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>33.000000</td>\n","      <td>8.00000</td>\n","      <td>103.00000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>39.000000</td>\n","      <td>16.00000</td>\n","      <td>180.00000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>48.000000</td>\n","      <td>21.00000</td>\n","      <td>319.00000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>95.000000</td>\n","      <td>31.00000</td>\n","      <td>643.00000</td>\n","      <td>6.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-36907c93-186b-4884-8f2d-227f14553d71')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-36907c93-186b-4884-8f2d-227f14553d71 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-36907c93-186b-4884-8f2d-227f14553d71');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":322}]},{"cell_type":"code","source":["dataset.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Se49a8OYgVjL","executionInfo":{"status":"ok","timestamp":1678881016666,"user_tz":-330,"elapsed":116,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"4b6a7933-fc77-4db0-dfa7-ac4274a8513e"},"execution_count":323,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age                 int64\n","job                object\n","marital            object\n","education_qual     object\n","call_type          object\n","day                 int64\n","mon                object\n","dur               float64\n","num_calls         float64\n","prev_outcome       object\n","y                  object\n","dtype: object"]},"metadata":{},"execution_count":323}]},{"cell_type":"markdown","metadata":{"id":"n-Ni2JBGWymq"},"source":["#DATA ANALYSIS AND VISUALIZATION\n","Before we start analyzing the data, we will first code the output variable, and, which has information about whether a customer has purchased or subscribed to a term deposit, with numerical values. You can use the following code to make an encoding of the output variable, and, with zeros and ones:"]},{"cell_type":"code","execution_count":324,"metadata":{"executionInfo":{"elapsed":532,"status":"ok","timestamp":1678881017090,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"yhf4-75oP2tc"},"outputs":[],"source":["dataset['conversion'] = dataset['y'].apply(lambda x: 0 if x == 'no' else 1)"]},{"cell_type":"markdown","metadata":{"id":"iBHStckCYOK_"},"source":["#EDA (Conversion rate)\n","Let's first take a look at the aggregate conversion rate. The conversion rate is simply the percentage of customers who got converted"]},{"cell_type":"code","execution_count":325,"metadata":{"executionInfo":{"elapsed":58,"status":"ok","timestamp":1678881017099,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"tK9ltEf3Q8Tq","colab":{"base_uri":"https://localhost:8080/","height":81},"outputId":"37dd6171-d4e2-473a-e171-e3fbfa0cfc92"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["conversion          0          1\n","y           88.299967  11.700033"],"text/html":["\n","  <div id=\"df-98458572-c5f4-4a1d-a483-955de1d9e085\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>conversion</th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>y</th>\n","      <td>88.299967</td>\n","      <td>11.700033</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98458572-c5f4-4a1d-a483-955de1d9e085')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-98458572-c5f4-4a1d-a483-955de1d9e085 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-98458572-c5f4-4a1d-a483-955de1d9e085');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":325}],"source":["conversion_rate = pd.DataFrame(\n","    dataset.groupby('conversion').count()['y'] / dataset.shape[0] * 100.0)\n","conversion_rate.T"]},{"cell_type":"code","source":["dataset.conversion.value_counts().plot(kind='bar', title='Count (conversion)');"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":278},"id":"aLpLiHolkYxl","executionInfo":{"status":"ok","timestamp":1678881017104,"user_tz":-330,"elapsed":61,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"7a8e29e0-1c90-4eac-b941-c9234a6197da"},"execution_count":326,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"ry8Wld7SUrod"},"source":["As you can see, only about 11.7% were converted. From these results, we can see that there is a large imbalance between the conversion group and the non-conversion group, which is common and often seen between various marketing data sets."]},{"cell_type":"markdown","metadata":{"id":"DcXOMRtXedpe"},"source":["**CONVERSION RATE BY JOB**"]},{"cell_type":"code","execution_count":327,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":63,"status":"ok","timestamp":1678881017108,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"kNLCdzTHz1iS","outputId":"21bb9924-3174-492b-c9b8-3d039ce75484"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["blue-collar      9730\n","management       9457\n","technician       7596\n","admin.           5170\n","services         4153\n","retired          2264\n","self-employed    1579\n","entrepreneur     1487\n","unemployed       1303\n","housemaid        1240\n","student           938\n","unknown           288\n","Name: job, dtype: int64"]},"metadata":{},"execution_count":327}],"source":["dataset['job'].value_counts()"]},{"cell_type":"code","source":["dataset['job']=dataset['job'].replace('unknown',dataset['job'].mode()[0])"],"metadata":{"id":"1LL1laPQtF8-","executionInfo":{"status":"ok","timestamp":1678881017109,"user_tz":-330,"elapsed":58,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":328,"outputs":[]},{"cell_type":"code","source":["dataset['job'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qIgrirnJSUb6","executionInfo":{"status":"ok","timestamp":1678881017112,"user_tz":-330,"elapsed":61,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"0279f4a7-fc8e-49d7-dd07-76d464848d18"},"execution_count":329,"outputs":[{"output_type":"execute_result","data":{"text/plain":["blue-collar      10018\n","management        9457\n","technician        7596\n","admin.            5170\n","services          4153\n","retired           2264\n","self-employed     1579\n","entrepreneur      1487\n","unemployed        1303\n","housemaid         1240\n","student            938\n","Name: job, dtype: int64"]},"metadata":{},"execution_count":329}]},{"cell_type":"code","source":["dataset['job'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HxUO9ThreXOt","executionInfo":{"status":"ok","timestamp":1678881017116,"user_tz":-330,"elapsed":61,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"91817eb8-85a5-48a0-a6c4-3f09ea2c5d3c"},"execution_count":330,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['management', 'technician', 'entrepreneur', 'blue-collar',\n","       'retired', 'admin.', 'services', 'self-employed', 'unemployed',\n","       'housemaid', 'student'], dtype=object)"]},"metadata":{},"execution_count":330}]},{"cell_type":"code","execution_count":331,"metadata":{"executionInfo":{"elapsed":57,"status":"ok","timestamp":1678881017117,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"WWiAOkJhgFge","colab":{"base_uri":"https://localhost:8080/"},"outputId":"69155c30-44ab-4381-f25f-49bf520b6e55"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["job\n","admin.           12.205029\n","blue-collar       7.406668\n","entrepreneur      8.271688\n","housemaid         8.790323\n","management       13.757005\n","retired          22.791519\n","self-employed    11.842939\n","services          8.885143\n","student          28.678038\n","technician       11.058452\n","unemployed       15.502686\n","Name: conversion, dtype: float64"]},"metadata":{},"execution_count":331}],"source":["conversion_rate_by_job = dataset.groupby(\n","    by='job'\n",")['conversion'].sum() / dataset.groupby(\n","    by='job'\n",")['conversion'].count()*100.0\n","\n","conversion_rate_by_job #Because numbers are difficult to visualize, we will plot the data for better comprehension. "]},{"cell_type":"code","execution_count":332,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"executionInfo":{"elapsed":1239,"status":"ok","timestamp":1678881018303,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"kmhDyfbHhdwX","outputId":"c24221ca-109e-49fc-a75b-08956afe45b7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:ylabel='job'>"]},"metadata":{},"execution_count":332},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["(dataset.groupby('job')['conversion'].mean()*100).sort_values().plot(kind='barh')\n"]},{"cell_type":"markdown","metadata":{"id":"HPydmlA74bJj"},"source":["**OBSERVATIONS**: \n","- We can easily see that the student and retiree groups are the two groups with the highest conversion rates, while the worker and employer groups are the two groups with the lowest conversion rates. \n","- It is also observed that the unknown values are 288 out of 45205, so we imputed them with mode. \n","- By the count, it is clear that a salesperson is putting in a lot of effort in a blue-collar job with a low conversion rate. It might be due to the low wages, but they are the ones who need it the most. For greater conversion, the emphasis can be shifted to other groups, such as students and the retired.\n","- This can be label encoded, as the order based on rank is visible in the plot."]},{"cell_type":"markdown","metadata":{"id":"vm_GWHaQ6KOc"},"source":["**CONVERSION RATE BY MARITAL**\n","\n"]},{"cell_type":"code","execution_count":333,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":95,"status":"ok","timestamp":1678881018304,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"_CGASpLd6cMi","outputId":"7ccfbe89-ace7-41b7-aeea-a69797e204c8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["married     27210\n","single      12788\n","divorced     5207\n","Name: marital, dtype: int64"]},"metadata":{},"execution_count":333}],"source":["dataset['marital'].value_counts()"]},{"cell_type":"code","execution_count":334,"metadata":{"executionInfo":{"elapsed":90,"status":"ok","timestamp":1678881018306,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"iKI0dji1Utkp"},"outputs":[],"source":["conversion_rate_by_marital = dataset.groupby(\n","    by='marital'\n",")['conversion'].sum() / dataset.groupby(\n","    by='marital'\n",")['conversion'].count()*100.0"]},{"cell_type":"code","execution_count":335,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":92,"status":"ok","timestamp":1678881018308,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"3ByXtIYyVbe6","outputId":"1de6c490-b37e-4cbf-f8a7-c53a8db7eacf"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["marital\n","divorced    11.945458\n","married     10.124954\n","single      14.951517\n","Name: conversion, dtype: float64"]},"metadata":{},"execution_count":335}],"source":["conversion_rate_by_marital"]},{"cell_type":"code","execution_count":336,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":330},"executionInfo":{"elapsed":91,"status":"ok","timestamp":1678881018311,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"72NAcJ-FV7GU","outputId":"bb16cdc6-7e9d-4cac-8b00-e31c9926e598"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:xlabel='marital'>"]},"metadata":{},"execution_count":336},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["(dataset.groupby('marital')['conversion'].mean()*100).sort_values().plot(kind='bar')"]},{"cell_type":"markdown","metadata":{"id":"WOnd5x2X6v_6"},"source":["**OBSERVATIONS**:\n","- Singles are taking out more insurance compared to divorced and married people; this could be because the younger you are, the lower the premium.\n","- This can be label encoded, as the order based on rank is visible in the plot\n","\n"]},{"cell_type":"markdown","metadata":{"id":"uvvQFZSS7dsr"},"source":["**CONVERSION RATE BY EDUCATION QAULIFICATION**"]},{"cell_type":"code","execution_count":337,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":90,"status":"ok","timestamp":1678881018316,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"41hDhwWy71p1","outputId":"d0fe872d-da86-4e27-f34b-713a49c14762"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["secondary    23199\n","tertiary     13299\n","primary       6850\n","unknown       1857\n","Name: education_qual, dtype: int64"]},"metadata":{},"execution_count":337}],"source":["dataset['education_qual'].value_counts()"]},{"cell_type":"code","source":["dataset['education_qual']=dataset['education_qual'].replace('unknown',dataset['education_qual'].mode()[0])"],"metadata":{"id":"uR-xKSJu4MWy","executionInfo":{"status":"ok","timestamp":1678881018318,"user_tz":-330,"elapsed":88,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":338,"outputs":[]},{"cell_type":"code","source":["dataset['education_qual'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2BjLNw08SCMJ","executionInfo":{"status":"ok","timestamp":1678881018327,"user_tz":-330,"elapsed":96,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"daa770b2-c7b4-49df-c698-66db412fb815"},"execution_count":339,"outputs":[{"output_type":"execute_result","data":{"text/plain":["secondary    25056\n","tertiary     13299\n","primary       6850\n","Name: education_qual, dtype: int64"]},"metadata":{},"execution_count":339}]},{"cell_type":"code","execution_count":340,"metadata":{"executionInfo":{"elapsed":94,"status":"ok","timestamp":1678881018329,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"LKwbbPXsYai0"},"outputs":[],"source":["conversion_rate_by_education_qual= dataset.groupby(\n","    by='education_qual'\n",")['conversion'].sum()/ dataset.groupby(\n","    by='education_qual'\n",")['conversion'].count()*100.0"]},{"cell_type":"code","execution_count":341,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":95,"status":"ok","timestamp":1678881018330,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"Y4wbANH_aBpT","outputId":"39a1bbfd-7d21-4d74-9922-307623e873a7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["education_qual\n","primary       8.627737\n","secondary    10.783844\n","tertiary     15.008647\n","Name: conversion, dtype: float64"]},"metadata":{},"execution_count":341}],"source":["conversion_rate_by_education_qual"]},{"cell_type":"code","execution_count":342,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":340},"executionInfo":{"elapsed":90,"status":"ok","timestamp":1678881018331,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"LOqkdHpHaSVP","outputId":"4151c909-eba2-4667-fe8b-959aa3ea3799"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:xlabel='education_qual'>"]},"metadata":{},"execution_count":342},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["(dataset.groupby('education_qual')['conversion'].mean()*100).sort_values().plot(kind='bar')"]},{"cell_type":"markdown","metadata":{"id":"24uxg-028QaQ"},"source":["**OBSERVATIONS**: \n","- We can easily see that the conversion rate is proportional to education; as education increases, the conversion rate increases, and this is obvious.\n","- It is also observed that the unknown values are 1857 out of 45205, so we imputed them with mode.\n","- This can be label encoded, as the order based on rank is visible in the plot."]},{"cell_type":"markdown","metadata":{"id":"b4Rw8lLY-dbq"},"source":["**CONVERSION RATE BY CALL TYPE**"]},{"cell_type":"code","execution_count":343,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":84,"status":"ok","timestamp":1678881018333,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"FmIiTndN-qme","outputId":"25b0357a-5af8-42f7-ce20-5c2322a859e5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["cellular     29282\n","unknown      13017\n","telephone     2906\n","Name: call_type, dtype: int64"]},"metadata":{},"execution_count":343}],"source":["dataset['call_type'].value_counts()"]},{"cell_type":"code","execution_count":344,"metadata":{"executionInfo":{"elapsed":82,"status":"ok","timestamp":1678881018334,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"zc7XUNgQbT-0"},"outputs":[],"source":["conversion_rate_by_call_type= dataset.groupby(\n","    by='call_type'\n",")['conversion'].sum()/dataset.groupby(\n","    by='call_type'\n",")['conversion'].count()*100.0"]},{"cell_type":"code","execution_count":345,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":82,"status":"ok","timestamp":1678881018335,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"CJ75mtPJcM67","outputId":"62b385de-b21a-4de7-a01c-c3bad74e2afc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["call_type\n","cellular     14.920429\n","telephone    13.420509\n","unknown       4.071599\n","Name: conversion, dtype: float64"]},"metadata":{},"execution_count":345}],"source":["conversion_rate_by_call_type"]},{"cell_type":"code","execution_count":346,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":338},"executionInfo":{"elapsed":1122,"status":"ok","timestamp":1678881019379,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"7zvoHAMzcYWH","outputId":"9920ff09-d666-4bdd-99c7-ce4940cd54b2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:xlabel='call_type'>"]},"metadata":{},"execution_count":346},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXAAAAEvCAYAAABcwZodAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/NK7nSAAAACXBIWXMAAAsTAAALEwEAmpwYAAATZUlEQVR4nO3df7TtdV3n8ecLSIkfIxgnTdEuNoaZZsCZ/EFTBtJQkmTBJEn+yObOmlbCVI6DUysa17JolTqOls4tQEdZaJCkjqXiDwR/RJ17EfmVPwYQUJNDlPxolV19zx/7e8bD6d6z99nffc/3fNjPx1pnsb+f7/fu7/vew33dz/nsz/fzSVUhSWrPfkMXIEmajgEuSY0ywCWpUQa4JDXKAJekRh2wmTc74ogjatu2bZt5S0lq3s6dO++qqoW17Zsa4Nu2bWNpaWkzbylJzUvyhT21O4QiSY0ywCWpUQa4JDXKAJekRhngktQoA1ySGmWAS1KjDHBJapQBLkmN2tQnMSXNh23nvHfoEvapW8979tAlAPbAJalZBrgkNcoAl6RGGeCS1CgDXJIaZYBLUqMMcElqlAEuSY0aG+BJLkhyZ5Lr93DuV5NUkiP2TXmSpL2ZpAf+ZuDktY1JHgP8KHDbjGuSJE1gbIBX1ZXA3Xs49Vrg5UDNuihJ0nhTjYEnORX4YlVdO8G125MsJVlaXl6e5naSpD3YcIAnOQj4b8BvTHJ9Ve2oqsWqWlxYWNjo7SRJezFND/y7gKOAa5PcChwJ7EryyFkWJkla34aXk62q64BvXznuQnyxqu6aYV2SpDEmmUZ4MfBJ4OgkdyR5yb4vS5I0ztgeeFWdMeb8tplVI0mamE9iSlKjDHBJapQBLkmNclNjbUluiiuNZw9ckhplgEtSowxwSWqUAS5JjTLAJalRBrgkNcoAl6RGGeCS1CgDXJIaZYBLUqMMcElqlAEuSY0ywCWpUQa4JDXKAJekRk2yqfEFSe5Mcv2qtt9N8tdJPp3ksiSH7dMqJUn/wiQ98DcDJ69puxx4UlV9H/BZ4BUzrkuSNMbYAK+qK4G717R9oKp2d4d/ARy5D2qTJK1jFmPgPw/8+d5OJtmeZCnJ0vLy8gxuJ0mCngGe5NeA3cBFe7umqnZU1WJVLS4sLPS5nSRplak3NU7yIuAU4MSqqplVJEmayFQBnuRk4OXAD1fVP8y2JEnSJCaZRngx8Eng6CR3JHkJ8AbgUODyJJ9K8qZ9XKckaY2xPfCqOmMPzefvg1okSRvgk5iS1CgDXJIaZYBLUqMMcElqlAEuSY0ywCWpUQa4JDXKAJekRhngktQoA1ySGmWAS1KjDHBJapQBLkmNMsAlqVEGuCQ1ygCXpEYZ4JLUKANckhplgEtSoybZ1PiCJHcmuX5V28OTXJ7kc91/D9+3ZUqS1pqkB/5m4OQ1becAH6qqxwMf6o4lSZtobIBX1ZXA3WuaTwXe0r1+C/CTsy1LkjTOtGPgj6iqL3ev/wZ4xN4uTLI9yVKSpeXl5SlvJ0laq/eHmFVVQK1zfkdVLVbV4sLCQt/bSZI60wb4V5J8B0D33ztnV5IkaRLTBvi7gRd2r18IvGs25UiSJjXJNMKLgU8CRye5I8lLgPOAk5J8DnhWdyxJ2kQHjLugqs7Yy6kTZ1yLJGkDfBJTkhplgEtSowxwSWqUAS5JjTLAJalRBrgkNcoAl6RGGeCS1CgDXJIaZYBLUqMMcElqlAEuSY0ywCWpUQa4JDXKAJekRhngktQoA1ySGmWAS1KjDHBJalSvAE/yy0luSHJ9kouTHDirwiRJ65s6wJM8GjgLWKyqJwH7A8+bVWGSpPX1HUI5APjWJAcABwFf6l+SJGkSUwd4VX0R+D3gNuDLwFer6gNrr0uyPclSkqXl5eXpK5UkPUCfIZTDgVOBo4BHAQcnOXPtdVW1o6oWq2pxYWFh+kolSQ/QZwjlWcAtVbVcVf8MvBN4xmzKkiSN0yfAbwOeluSgJAFOBG6aTVmSpHH6jIFfDVwK7AKu695rx4zqkiSNcUCfX1xV5wLnzqgWSdIG+CSmJDXKAJekRhngktQoA1ySGmWAS1KjDHBJapQBLkmNMsAlqVEGuCQ1ygCXpEYZ4JLUKANckhplgEtSowxwSWqUAS5JjTLAJalRBrgkNcoAl6RG9QrwJIcluTTJXye5KcnTZ1WYJGl9vfbEBF4HvK+qTkvyEOCgGdQkSZrA1AGe5GHADwEvAqiqrwFfm01ZkqRx+gyhHAUsAxcmuSbJHyU5eO1FSbYnWUqytLy83ON2kqTV+gT4AcCxwBur6hjgfuCctRdV1Y6qWqyqxYWFhR63kySt1ifA7wDuqKqru+NLGQW6JGkTTB3gVfU3wO1Jju6aTgRunElVkqSx+s5CeSlwUTcD5Wbgxf1LkiRNoleAV9WngMXZlCJJ2gifxJSkRhngktQoA1ySGmWAS1KjDHBJapQBLkmNMsAlqVEGuCQ1ygCXpEYZ4JLUKANckhplgEtSowxwSWqUAS5JjTLAJalRBrgkNcoAl6RGGeCS1CgDXJIa1TvAk+yf5Jok/2cWBUmSJjOLHvjZwE0zeB9J0gb02pU+yZHAs4FXAb8yk4pmaNs57x26hH3q1vOePXQJkgbUtwf+P4CXA9/Y2wVJtidZSrK0vLzc83aSpBVTB3iSU4A7q2rnetdV1Y6qWqyqxYWFhWlvJ0lao08P/HjgOUluBd4OnJDkbTOpSpI01tQBXlWvqKojq2ob8Dzgw1V15swqkySty3ngktSoXrNQVlTVFcAVs3gvSdJk7IFLUqMMcElqlAEuSY0ywCWpUQa4JDXKAJekRhngktQoA1ySGmWAS1KjDHBJapQBLkmNMsAlqVEGuCQ1ygCXpEYZ4JLUKANckhplgEtSowxwSWqUAS5JjZo6wJM8JslHktyY5IYkZ8+yMEnS+vpsarwb+NWq2pXkUGBnksur6sYZ1SZJWsfUPfCq+nJV7epe3wvcBDx6VoVJktY3kzHwJNuAY4Cr93Bue5KlJEvLy8uzuJ0kiRkEeJJDgD8B/nNV3bP2fFXtqKrFqlpcWFjoeztJUqdXgCf5FkbhfVFVvXM2JUmSJtFnFkqA84Gbquo1sytJkjSJPj3w44GfA05I8qnu68dnVJckaYyppxFW1ceAzLAWSdIG+CSmJDXKAJekRhngktQoA1ySGmWAS1KjDHBJapQBLkmNMsAlqVEGuCQ1ygCXpEYZ4JLUKANckhplgEtSowxwSWqUAS5JjTLAJalRBrgkNcoAl6RGGeCS1KheAZ7k5CSfSfL5JOfMqihJ0nhTB3iS/YHfB34MeCJwRpInzqowSdL6+vTAfwD4fFXdXFVfA94OnDqbsiRJ4xzQ49c+Grh91fEdwFPXXpRkO7C9O7wvyWd63HOrOwK4a7Nult/ZrDvNBb93bXuwf/++c0+NfQJ8IlW1A9ixr++zFSRZqqrFoevQxvm9a9u8fv/6DKF8EXjMquMjuzZJ0iboE+B/BTw+yVFJHgI8D3j3bMqSJI0z9RBKVe1O8kvA+4H9gQuq6oaZVdamuRgqepDye9e2ufz+paqGrkGSNAWfxJSkRhngktQoA1ySGmWAS1Kj9vmDPA92SR4K/DSwjVV/nlX1yqFq0mSSBHg+8LiqemWSxwKPrKq/HLg0raNbh+mDVfUjQ9cyNHvg/b2L0Rowu4H7V31p6/sD4OnAGd3xvYwWaNMWVlVfB76R5GFD1zI0e+D9HVlVJw9dhKby1Ko6Nsk1AFX1d91Dadr67gOuS3I5qzpMVXXWcCVtPgO8v08keXJVXTd0Idqwf+5+HC+AJAvAN4YtSRN6Z/c113yQp6ckNwL/GrgF+CcgQFXV9w1amMZK8nzgZ4BjgbcApwG/XlWXDFqYNCEDvKcke1zmsaq+sNm1aOOSPAE4kdE/vB+qqpsGLkkTSPJ44LcZbSZz4Ep7VT1usKIG4BBKf78AXAl8oqr88LI9nwPuofu7kOSxVXXbsCVpAhcC5wKvBX4EeDFzOCnDHnhPSV4M/FtGsxnuBa4Crqyqdw1amMZK8lJGIfAV4Os4/NWMJDur6rgk11XVk1e3DV3bZjLAZyTJI4F/D7wMOLyqDh24JI2R5POMZqL87dC1aGOSfAL4QeBS4MOM9iI4r6qOHrSwTTZ3P3LMWpI/6v5neiOjH8NPAw4ftipN6Hbgq0MXoamcDRwEnAUcB/wc8MJBKxqAY+D9fRuj9dD/HrgbuKuqdg9akSZ1M3BFkvcymkEEQFW9ZriSNImq+qvu5X2Mxr/nkgHeU1U9FyDJ9wD/DvhIkv2r6shhK9MEbuu+HtJ9aYtL8h66eft7UlXP2cRyBucYeE9JTmH0IeYPAYcBfwFcVVUXDFmXJpfkEICqum/oWrS+JD+83vmq+uhm1bIVGOA9JXkDo5knV1XVl4auR5NL8iTgrcDDu6a7gBe4NaBaYYDPQJJHAP+mO/zLqrpzyHo0me7D51+rqo90x88EfquqnjFkXRovyS3sYSjFB3m0IUlOB34PuILRPOLXJ/kvVXXpoIVpEgevhDdAVV2R5OAhC9LEFle9PhA4nW/+JDU37IH3lORa4KSVXne3INIHq+opw1amcZJcBuxiNIwCcCZw3MoH02rLPD7IYw+8v/3WDJn8Lc6vb8XPA/+db65qd1XXpi0uybGrDvdj1COfuzybu9/wPvC+JO8HLu6Ofwb4swHr0YSq6u8YPQii9rx61evdwK2MnoSeKw6hzECSnwaO7w6vqqrLhqxHk0ny3YyWPtjGA7fDO2GomqSNMMA1t7rPL94E7GS0mBUAVbVzsKK0riS/st75eXuK1iGUnpL8FPA7wLczmoWysqLdvxq0ME1id1W9cegitCEuEreKPfCeuhXtfsKNANqRZGW62VnAncBlPHAtlLuHqEvaKAO8pyQfr6rjx1+prWLVQyDZw+mat4dBWpLkf6533k2NtVFLSd4B/CkP7MXN/YarW1VVHTV0DZqan0+sYg+8pyQX7qG5qsr5xFtckgOBX2S0MUAxmgf+pqr6x0EL08SSHFRV/zB0HUMxwHtK8vC1Y6ZJjqqqW4aqSZNJ8seMtsF7W9f0s8BhVXX6cFVpEkmeDpwPHFJVj03yFOA/VtUvDlzapjLAe0ryceDHquqe7vh7gEuq6knDVqZxktxYVU8c16atJ8nVjHa/endVHdO1XT9vf+985Lu/3wLek+SQJMcx2qPvzIFr0mR2JXnaykGSpwJLA9ajDaiq29c0fX2PFz6I+SFmT1X13iTfAnyA0RzV51bVZwcuS5M5DvhEktu648cCn0lyHe5Ov9XdnuQZQHV//84G5m4qr0MoU0ryeh64HvGJwP9ltCbD3E1nalGS71zvfFV9YbNq0cYkOQJ4HfAsRtNBPwCcNW9z+O2BT2/tj9pOb2pMVX0hyQ8Cj6+qC7tQONQPoJvwauCXugXJSHJ41zZXs7/sgWtuJTmX0TKkR1fVdyd5FKMPoH0wa4tLcs3Kh5frtT3Y+SFmT0mOT3J5ks8muTnJLUluHrouTeS5wHOA+wG6PU1da6MN+3W9buD/L48wdyMKc/cb3gfOB36ZNSvaqQlfq6pKUgBup9aUVwOfTHJJd3w68KoB6xmEAd7fV6vqz4cuQlP54yT/CzgsyX9gNH76hwPXpAlU1f9OsgSsrN3+U1V145A1DcEx8J6SnAfsz2hbrtVroewarChNLMlJwI8ymsnw/qq6fOCSpIkZ4D0lWdnVfOUPcmU9cHd1kbRPOYTS3xV7aPNfxS0syb3s+XvkZhxqigHe332rXh8InMIcPhHWkqpypokeFBxCmbEkD2U0lvrMoWvReD7Io5Y5D3z2DgKOHLoIjdc9yPNfgVd0TQ/hm0vLSlueQyg9rSx81B3uDywArxyuIm3Ac4FjgF0wepAnicMraoYB3t8pq17vBr5SVbuHKkYb4oM8apoB3pMr1jXNB3nUNANc82yB0QYc9wBHA7/BaHlSqQnOQtHcSrKrqo5d0/ZpN3JQK+yBa+4k+U+MdqN/XJJPrzp1KPDxYaqSNs4euOZOkocBhwO/DZyz6tS987aji9pmgEtSo3yQR5IaZYBLUqMMcElqlAGuB7UkL0ryhu71byZ52ZhrH7V51Un9GODSN70IMMDVDANcTUrygiSfTnJtkrcm+YkkVye5JskHkzxig+93GrAIXJTkU0meneRPV50/Kcll3ev7krw2yQ1JPpRkoWv/riTvS7IzyVVJnjDD37L0Lxjgak6S7wV+HTihqp4CnA18DHhaVR0DvB14+Ubes6ouBZaA51fV9wN/BjxhJZyBFwMXdK8PBpaq6nuBjwLndu07gJdW1XHAy4A/mO53KE3GJzHVohOAS6rqLoCqujvJk4F3JPkORut699qUoVul8K3AmUkuBJ4OvKA7/Q3gHd3rtwHvTHII8AzgkiQrb/PQPjVI4xjgerB4PfCaqnp3kmcCvzmD97wQeA/wj4z+wdjbMsHF6KfZv+9679KmcAhFLfowcHqSbwNI8nDgYcAXu/MvnPJ972W0Hgow2uAB+BKj4ZoLV123H3Ba9/pngY9V1T3ALUlO72pKkqdMWYc0EQNczamqG4BXAR9Nci3wGkY97kuS7ATumvKt3wy8qfsQ81u7touA26tq9UbV9wM/kOR6RsM5KzswPR94SVfTDcCpU9YhTcS1UKR1dHPIr6mq81e13VdVhwxYlgQY4NJedb35+4GTquqfVrUb4NoSDHDNnSS/Dxy/pvl1VXXhnq6XtioDXJIa5YeYktQoA1ySGmWAS1KjDHBJatT/A7pwMDSRMARgAAAAAElFTkSuQmCC\n"},"metadata":{"needs_background":"light"}}],"source":["(dataset.groupby('call_type')['conversion'].mean()*100).sort_values().plot(kind='bar')"]},{"cell_type":"markdown","metadata":{"id":"6_CLQPn_AapG"},"source":["**OBSERVATIONS**: \n","- Cell 65% is clearly the most frequently used tool here. It could be because people decline the call made by telephone due to a pattern of thinking of it as a sales call.\n","- There are 13017 unknown values observed, which are huge in quantity, so rather than imputing them, we will treat them as a category.\n","- This can be label encoded, as the order based on rank is visible in the plot."]},{"cell_type":"markdown","metadata":{"id":"R6Q7jMTCqXnR"},"source":["**CONVERSION RATE BY MONTH**"]},{"cell_type":"code","execution_count":347,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":192,"status":"ok","timestamp":1678881019379,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"GxztCuTjq6Xd","outputId":"c8688822-cdeb-4b47-d32b-574862c7cd47"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["may    13765\n","jul     6894\n","aug     6245\n","jun     5339\n","nov     3970\n","apr     2932\n","feb     2649\n","jan     1403\n","oct      738\n","sep      579\n","mar      477\n","dec      214\n","Name: mon, dtype: int64"]},"metadata":{},"execution_count":347}],"source":["dataset['mon'].value_counts()"]},{"cell_type":"code","execution_count":348,"metadata":{"executionInfo":{"elapsed":182,"status":"ok","timestamp":1678881019380,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"cHY0CGXVfzp7"},"outputs":[],"source":["conversion_rate_by_mon= dataset.groupby(\n","    by='mon'\n",")['conversion'].sum() / dataset.groupby(\n","    by='mon'\n",")['conversion'].count()*100.0"]},{"cell_type":"code","execution_count":349,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":182,"status":"ok","timestamp":1678881019381,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"Ot_bKuipgcUs","outputId":"bfc49069-7139-478f-d69a-c79405f408f6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["mon\n","apr    19.679400\n","aug    11.016813\n","dec    46.728972\n","feb    16.647792\n","jan    10.121169\n","jul     9.094865\n","jun    10.226634\n","mar    51.991614\n","may     6.719942\n","nov    10.151134\n","oct    43.766938\n","sep    46.459413\n","Name: conversion, dtype: float64"]},"metadata":{},"execution_count":349}],"source":["conversion_rate_by_mon"]},{"cell_type":"code","execution_count":350,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"executionInfo":{"elapsed":175,"status":"ok","timestamp":1678881019381,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"v5lSD6uHgrfS","outputId":"fc2060bd-8e66-4b3a-dc02-acdcb5f212ac"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:ylabel='mon'>"]},"metadata":{},"execution_count":350},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["(dataset.groupby('mon')['conversion'].mean()*100).sort_values().plot(kind='barh')"]},{"cell_type":"markdown","metadata":{"id":"osnOC7IurOnP"},"source":["**OBSERVATIONS**: \n","- The conversion rate is clearly higher in March; this could be due to the end of the fiscal year. \n","- Although fewer people are contacted in December, September, and October than in March, the conversion rate remains high. \n","- This can be label encoded, as the order based on rank is visible in the plot."]},{"cell_type":"markdown","metadata":{"id":"cfrHVtC61iat"},"source":["**CONVERSION RATE BY PREVIOUS OUTCOME**"]},{"cell_type":"code","execution_count":351,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":166,"status":"ok","timestamp":1678881019382,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"qzU5xRL512mJ","outputId":"e2c6eed5-568a-4bbf-966b-300a40908c14"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["unknown    36953\n","failure     4901\n","other       1840\n","success     1511\n","Name: prev_outcome, dtype: int64"]},"metadata":{},"execution_count":351}],"source":["dataset['prev_outcome'].value_counts()"]},{"cell_type":"code","execution_count":352,"metadata":{"executionInfo":{"elapsed":161,"status":"ok","timestamp":1678881019382,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"vIaNoJD1kDZ-"},"outputs":[],"source":["conversion_rate_by_prev_outcome= dataset.groupby(\n","    by='prev_outcome'\n",")['conversion'].sum()/dataset.groupby(\n","    by='prev_outcome'\n",")['conversion'].count()*100.0"]},{"cell_type":"code","execution_count":353,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":161,"status":"ok","timestamp":1678881019383,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"ZlTszpslkaRv","outputId":"3a33c509-5224-40eb-fb3b-a4f6130d12cd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["prev_outcome\n","failure    12.609671\n","other      16.684783\n","success    64.725347\n","unknown     9.162991\n","Name: conversion, dtype: float64"]},"metadata":{},"execution_count":353}],"source":["conversion_rate_by_prev_outcome"]},{"cell_type":"code","execution_count":354,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"executionInfo":{"elapsed":155,"status":"ok","timestamp":1678881019383,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"LobJ4ay-krwD","outputId":"ed19c881-924e-437d-f89d-0adcaf81d670"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:ylabel='prev_outcome'>"]},"metadata":{},"execution_count":354},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["(dataset.groupby('prev_outcome')['conversion'].mean()*100).sort_values().plot(kind='barh')"]},{"cell_type":"markdown","source":[],"metadata":{"id":"M912-Olqk8yF"}},{"cell_type":"markdown","metadata":{"id":"Yr0NWApn2Ps0"},"source":["**OBSERVATIONS**: \n","- The graph shows that previous outcomes have a relationship with the result; if the previous outcome was success, the client is more likely to buy insurance.\n","- Almost 70% of the data is unknown, so imputing makes no sense. \n","Instead of removing the feature, treat unknown values as categories.\n","- This can be label encoded, as the order based on rank is visible in the plot."]},{"cell_type":"markdown","source":["**CONVERSION RATE BY AGE**"],"metadata":{"id":"pNJaDRDNw-vm"}},{"cell_type":"code","source":["conversion_rate_by_age= dataset.groupby(\n","    by='age'\n",")['conversion'].sum()/dataset.groupby(\n","    by='age'\n",")['conversion'].count()*100.0"],"metadata":{"id":"WarVe4Jzvq4r","executionInfo":{"status":"ok","timestamp":1678881019384,"user_tz":-330,"elapsed":145,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":355,"outputs":[]},{"cell_type":"code","source":["conversion_rate_by_age"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ryLjJO3Cxf5U","executionInfo":{"status":"ok","timestamp":1678881019384,"user_tz":-330,"elapsed":145,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"554a860b-9e95-4f22-f2eb-057ae285e04a"},"execution_count":356,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age\n","18     58.333333\n","19     31.428571\n","20     30.000000\n","21     27.848101\n","22     31.007752\n","         ...    \n","90    100.000000\n","92    100.000000\n","93    100.000000\n","94      0.000000\n","95     50.000000\n","Name: conversion, Length: 77, dtype: float64"]},"metadata":{},"execution_count":356}]},{"cell_type":"code","source":["sns.boxplot(data=dataset, x=\"y\", y=\"age\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"WygGiCKb3Asb","executionInfo":{"status":"ok","timestamp":1678881019385,"user_tz":-330,"elapsed":138,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"545b2510-3283-4eda-fa82-571995c27501"},"execution_count":357,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:xlabel='y', ylabel='age'>"]},"metadata":{},"execution_count":357},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["**OBSERVATIONS**: \n","- In this plot, we can clearly see that people with higher ages are more likely to buy insurance."],"metadata":{"id":"5VPE6ySlK9Xm"}},{"cell_type":"markdown","source":["**CONVERSION RATE BY DAY**"],"metadata":{"id":"sHBoSs9FMCaR"}},{"cell_type":"code","source":["conversion_rate_by_day= dataset.groupby(\n","    by='day'\n",")['conversion'].sum()/dataset.groupby(\n","    by='day'\n",")['conversion'].count()*100.0"],"metadata":{"id":"asEVmluIMFOw","executionInfo":{"status":"ok","timestamp":1678881019386,"user_tz":-330,"elapsed":129,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":358,"outputs":[]},{"cell_type":"code","source":["conversion_rate_by_day"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HRycr8NKMRkk","executionInfo":{"status":"ok","timestamp":1678881019386,"user_tz":-330,"elapsed":129,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"1ad04f60-48e3-4eed-d886-a33e7a19b185"},"execution_count":359,"outputs":[{"output_type":"execute_result","data":{"text/plain":["day\n","1     27.950311\n","2     14.086687\n","3     16.496756\n","4     15.916955\n","5     11.256545\n","6      9.368530\n","7      8.640616\n","8     10.923913\n","9     11.474359\n","10    23.091603\n","11    12.237999\n","12    15.221460\n","13    15.205047\n","14    11.363636\n","15    13.975338\n","16    13.568905\n","17     9.076844\n","18     9.878683\n","19     6.947608\n","20     6.976744\n","21     9.921027\n","22    17.016575\n","23    13.418530\n","24    13.870246\n","25    15.833333\n","26    11.207729\n","27    13.380910\n","28     7.818480\n","29     7.392550\n","30    17.305236\n","31     7.153966\n","Name: conversion, dtype: float64"]},"metadata":{},"execution_count":359}]},{"cell_type":"code","source":["(dataset.groupby('day')['conversion'].mean()*100).sort_values().plot(kind='barh', color='orange')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":284},"id":"6ao0xwbqN2qy","executionInfo":{"status":"ok","timestamp":1678881020511,"user_tz":-330,"elapsed":1247,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"5c0d228a-d3b7-4137-ccf4-8f75d780deee"},"execution_count":360,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:ylabel='day'>"]},"metadata":{},"execution_count":360},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["**OBSERVATIONS**: \n","- In this plot, we can clearly see that engagement is high, with people purchasing more insurance in the beginning, middle, and end of the month."],"metadata":{"id":"vExFUV7IVrxG"}},{"cell_type":"markdown","source":["**CONVERSION RATE BY DURATION**"],"metadata":{"id":"bFG_221fWxq2"}},{"cell_type":"code","source":["conversion_rate_by_dur= dataset.groupby(\n","    by='dur'\n",")['conversion'].sum()/dataset.groupby(\n","    by='dur'\n",")['conversion'].count()*100.0"],"metadata":{"id":"OeWFa1aHW7jC","executionInfo":{"status":"ok","timestamp":1678881020513,"user_tz":-330,"elapsed":112,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":361,"outputs":[]},{"cell_type":"code","source":["conversion_rate_by_dur"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yqz6N4VuXG4X","executionInfo":{"status":"ok","timestamp":1678881020518,"user_tz":-330,"elapsed":116,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"20d4b11b-de80-45e9-dec9-a35f09f5bcd2"},"execution_count":362,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dur\n","0.0       0.000000\n","1.0       0.000000\n","2.0       0.000000\n","3.0       0.000000\n","4.0       0.000000\n","           ...    \n","639.0    40.000000\n","640.0    50.000000\n","641.0    46.666667\n","642.0    50.000000\n","643.0    50.908531\n","Name: conversion, Length: 644, dtype: float64"]},"metadata":{},"execution_count":362}]},{"cell_type":"code","source":["sns.boxplot(data=dataset, x=\"y\", y=\"dur\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"G2WrfG3fXWft","executionInfo":{"status":"ok","timestamp":1678881020521,"user_tz":-330,"elapsed":114,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"96bf9bc9-78f1-43ff-bbff-8c328d4a5127"},"execution_count":363,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:xlabel='y', ylabel='dur'>"]},"metadata":{},"execution_count":363},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["**OBSERVATIONS**: \n","- It is self-evident that the length of the call increases the likelihood of the client purchasing insurance. "],"metadata":{"id":"fIYRP2lpYbEB"}},{"cell_type":"markdown","source":["**CONVERSION RATE BY NO.OF CALLS**"],"metadata":{"id":"wdAOa1A_ZVvP"}},{"cell_type":"code","source":["conversion_rate_by_num_calls= dataset.groupby(\n","    by='num_calls'\n",")['conversion'].sum()/dataset.groupby(\n","    by='num_calls'\n",")['conversion'].count()*100.0"],"metadata":{"id":"kNYMxI4FZhJ5","executionInfo":{"status":"ok","timestamp":1678881020523,"user_tz":-330,"elapsed":106,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":364,"outputs":[]},{"cell_type":"code","source":["conversion_rate_by_num_calls"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jzlAv821ZtYP","executionInfo":{"status":"ok","timestamp":1678881020528,"user_tz":-330,"elapsed":110,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"72ea3284-7254-4a6b-db37-4782f6f17bca"},"execution_count":365,"outputs":[{"output_type":"execute_result","data":{"text/plain":["num_calls\n","1.0    14.599248\n","2.0    11.205311\n","3.0    11.193624\n","4.0     9.005682\n","5.0     7.879819\n","6.0     5.809414\n","Name: conversion, dtype: float64"]},"metadata":{},"execution_count":365}]},{"cell_type":"code","source":["sns.boxplot(data=dataset, x=\"y\", y=\"num_calls\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"9wpoEbewZ4Ui","executionInfo":{"status":"ok","timestamp":1678881020530,"user_tz":-330,"elapsed":108,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"4b961e28-bf28-4d58-b7bf-f8719b8ab100"},"execution_count":366,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:xlabel='y', ylabel='num_calls'>"]},"metadata":{},"execution_count":366},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["**OBSERVATIONS**: \n","- The distribution is similar for both"],"metadata":{"id":"eiMlZnIhd93w"}},{"cell_type":"markdown","source":["#ENCODING\n","There are six categorical variables in this data set: job, marital, education_qual,call type, month, and previous outcome. Before we start building ML models, we need to code these categorical variables with numerical values. As decided in EDA, there is an order to the data, so all will be label encoded.\n","\n"],"metadata":{"id":"aDdsVi_RgR6m"}},{"cell_type":"markdown","source":["Checking for the labels in the categorical parameters"],"metadata":{"id":"aQFNRLXrgghW"}},{"cell_type":"code","source":["print(dataset['job'].unique()) \n","print(dataset['marital'].unique())\n","print(dataset['education_qual'].unique())\n","print(dataset['call_type'].unique()) \n","print(dataset['mon'].unique()) \n","print(dataset['prev_outcome'].unique()) \n","print(dataset['y'].unique())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sJcsNnxKhY1K","executionInfo":{"status":"ok","timestamp":1678881020531,"user_tz":-330,"elapsed":101,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"fc37ade0-36a6-4c47-b771-d33949f2cb63"},"execution_count":367,"outputs":[{"output_type":"stream","name":"stdout","text":["['management' 'technician' 'entrepreneur' 'blue-collar' 'retired' 'admin.'\n"," 'services' 'self-employed' 'unemployed' 'housemaid' 'student']\n","['married' 'single' 'divorced']\n","['tertiary' 'secondary' 'primary']\n","['unknown' 'cellular' 'telephone']\n","['may' 'jun' 'jul' 'aug' 'oct' 'nov' 'dec' 'jan' 'feb' 'mar' 'apr' 'sep']\n","['unknown' 'failure' 'other' 'success']\n","['no' 'yes']\n"]}]},{"cell_type":"code","source":["dataset['job'] = dataset['job'].map({'blue-collar':0, 'entrepreneur':1, 'housemaid':2, 'services':3, 'technician':4, \n","                                     'self-employed':5, 'admin.':6, 'management':7, 'unemployed':8, 'retired':9, 'student':10})"],"metadata":{"id":"mu60_h20o9J3","executionInfo":{"status":"ok","timestamp":1678881020532,"user_tz":-330,"elapsed":96,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":368,"outputs":[]},{"cell_type":"code","source":["dataset['marital'] = dataset['marital'].map({\"married\" : 0 , \"divorced\" : 1 , \"single\" : 2})"],"metadata":{"id":"Hzain8w-o_kf","executionInfo":{"status":"ok","timestamp":1678881020533,"user_tz":-330,"elapsed":97,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":369,"outputs":[]},{"cell_type":"code","source":["dataset['education_qual'] = dataset['education_qual'].map({\"primary\" : 0 , \"secondary\" : 1 , \"tertiary\" : 2})"],"metadata":{"id":"iMuNpe50pg6t","executionInfo":{"status":"ok","timestamp":1678881020534,"user_tz":-330,"elapsed":97,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":370,"outputs":[]},{"cell_type":"code","source":["dataset['call_type'] = dataset['call_type'].map({\"unknown\" : 0 , \"telephone\" : 1 , \"cellular\" : 2})"],"metadata":{"id":"Zq5amJ3xqriL","executionInfo":{"status":"ok","timestamp":1678881020535,"user_tz":-330,"elapsed":98,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":371,"outputs":[]},{"cell_type":"code","source":["dataset['mon'] = dataset['mon'].map({\"may\" : 0 , \"jul\" : 1 , \"jan\" : 2 , \"nov\" : 3 , \n","                           \"jun\" : 4 , \"aug\" : 5 , \"feb\" : 6 , \"apr\" : 7 , \"oct\" : 8 , \n","                           \"sep\" : 9 , \"dec\" : 10, \"mar\":11})"],"metadata":{"id":"jIteY5uqrGH5","executionInfo":{"status":"ok","timestamp":1678881020536,"user_tz":-330,"elapsed":99,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":372,"outputs":[]},{"cell_type":"code","source":["dataset['prev_outcome'] = dataset['prev_outcome'].map({\"unknown\" : 0 , \"failure\" : 1 , \"other\" : 2, \"success\": 3})"],"metadata":{"id":"Tybg4OOVr8xu","executionInfo":{"status":"ok","timestamp":1678881020537,"user_tz":-330,"elapsed":99,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":373,"outputs":[]},{"cell_type":"code","execution_count":374,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":785,"status":"ok","timestamp":1678881021223,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"nps-DQRZ3er8","outputId":"100337b0-ebd6-466b-ad2c-7bff48aff0b5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age  job  marital  education_qual  call_type  day  mon    dur  num_calls  \\\n","0   58    7        0               2          0    5    0  261.0        1.0   \n","1   44    4        2               1          0    5    0  151.0        1.0   \n","2   33    1        0               1          0    5    0   76.0        1.0   \n","3   47    0        0               1          0    5    0   92.0        1.0   \n","4   33    0        2               1          0    5    0  198.0        1.0   \n","\n","   prev_outcome   y  conversion  \n","0             0  no           0  \n","1             0  no           0  \n","2             0  no           0  \n","3             0  no           0  \n","4             0  no           0  "],"text/html":["\n","  <div id=\"df-8d1275f6-a24c-4c0c-8af3-177d1c93db46\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>job</th>\n","      <th>marital</th>\n","      <th>education_qual</th>\n","      <th>call_type</th>\n","      <th>day</th>\n","      <th>mon</th>\n","      <th>dur</th>\n","      <th>num_calls</th>\n","      <th>prev_outcome</th>\n","      <th>y</th>\n","      <th>conversion</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>58</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>261.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>44</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>151.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>33</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>76.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>47</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>92.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>33</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>198.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d1275f6-a24c-4c0c-8af3-177d1c93db46')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8d1275f6-a24c-4c0c-8af3-177d1c93db46 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8d1275f6-a24c-4c0c-8af3-177d1c93db46');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":374}],"source":["dataset.head()"]},{"cell_type":"code","source":["dataset.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-GqGBPeybF7B","executionInfo":{"status":"ok","timestamp":1678881021225,"user_tz":-330,"elapsed":82,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"99c53a0f-4e56-4d63-c960-d18fd2c71af3"},"execution_count":375,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age               0\n","job               0\n","marital           0\n","education_qual    0\n","call_type         0\n","day               0\n","mon               0\n","dur               0\n","num_calls         0\n","prev_outcome      0\n","y                 0\n","conversion        0\n","dtype: int64"]},"metadata":{},"execution_count":375}]},{"cell_type":"markdown","metadata":{"id":"5f8RVQMDb0Hw"},"source":["#SPLIT"]},{"cell_type":"code","source":["dataset.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bgyJx_Z6YlcY","executionInfo":{"status":"ok","timestamp":1678881021225,"user_tz":-330,"elapsed":76,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"53455f75-d8e7-436b-e30f-4970e2c6a69d"},"execution_count":376,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['age', 'job', 'marital', 'education_qual', 'call_type', 'day', 'mon',\n","       'dur', 'num_calls', 'prev_outcome', 'y', 'conversion'],\n","      dtype='object')"]},"metadata":{},"execution_count":376}]},{"cell_type":"code","execution_count":377,"metadata":{"executionInfo":{"elapsed":73,"status":"ok","timestamp":1678881021227,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"cmm5tL-kSUuV"},"outputs":[],"source":["X = dataset[['age', 'job', 'marital', 'education_qual', 'call_type', 'day', 'mon',\n","       'dur', 'num_calls', 'prev_outcome']].values #array of features\n","y = dataset['conversion'].values #array of targets"]},{"cell_type":"code","execution_count":378,"metadata":{"executionInfo":{"elapsed":73,"status":"ok","timestamp":1678881021228,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"YihRuPz2kpYj"},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25,random_state=0) # train- test split"]},{"cell_type":"code","execution_count":379,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":73,"status":"ok","timestamp":1678881021229,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"VUNevjEJSrpF","outputId":"6e927a06-1f67-4360-b989-730b748da72f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["((33903, 10), (11302, 10))"]},"metadata":{},"execution_count":379}],"source":["X_train.shape, X_test.shape"]},{"cell_type":"markdown","metadata":{"id":"RquNQeSrawln"},"source":["#Data Balancing"]},{"cell_type":"code","execution_count":380,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4529,"status":"ok","timestamp":1678881025690,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"9N9v7I8jijuV","outputId":"ef5fe49b-9f5f-4418-f55a-3f4b4199f2a9"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: imblearn in /usr/local/lib/python3.9/dist-packages (0.0)\n","Requirement already satisfied: imbalanced-learn in /usr/local/lib/python3.9/dist-packages (from imblearn) (0.8.1)\n","Requirement already satisfied: scikit-learn>=0.24 in /usr/local/lib/python3.9/dist-packages (from imbalanced-learn->imblearn) (1.2.2)\n","Requirement already satisfied: scipy>=0.19.1 in /usr/local/lib/python3.9/dist-packages (from imbalanced-learn->imblearn) (1.10.1)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.9/dist-packages (from imbalanced-learn->imblearn) (1.1.1)\n","Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.9/dist-packages (from imbalanced-learn->imblearn) (1.22.4)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.9/dist-packages (from scikit-learn>=0.24->imbalanced-learn->imblearn) (3.1.0)\n"]}],"source":["!pip install imblearn"]},{"cell_type":"code","execution_count":381,"metadata":{"executionInfo":{"elapsed":50,"status":"ok","timestamp":1678881025692,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"CI9BLakuqKZE"},"outputs":[],"source":["import imblearn"]},{"cell_type":"code","source":["dataset['job'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1tjk1UWXfH_7","executionInfo":{"status":"ok","timestamp":1678881025694,"user_tz":-330,"elapsed":50,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"6f90b0a9-3a99-4939-9df2-addba5e247c0"},"execution_count":382,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 7,  4,  1,  0,  9,  6,  3,  5,  8,  2, 10])"]},"metadata":{},"execution_count":382}]},{"cell_type":"code","source":["dataset.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6pyrugqNi7EB","executionInfo":{"status":"ok","timestamp":1678881025695,"user_tz":-330,"elapsed":40,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"4000ca47-4555-404c-d6f6-1d71d3a2fcbe"},"execution_count":383,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(45205, 12)"]},"metadata":{},"execution_count":383}]},{"cell_type":"code","execution_count":384,"metadata":{"id":"pUqn_sqRrItG","executionInfo":{"status":"ok","timestamp":1678881027001,"user_tz":-330,"elapsed":1341,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"outputs":[],"source":["from imblearn.combine import SMOTEENN\n","smt = SMOTEENN(sampling_strategy='all')\n","X_smt, y_smt = smt.fit_resample(X_train, y_train)"]},{"cell_type":"code","source":["X_smt.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FPEIa4RJei5f","executionInfo":{"status":"ok","timestamp":1678881027003,"user_tz":-330,"elapsed":147,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"50280b73-1807-4644-aac1-bf313dd7e635"},"execution_count":385,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(51536, 10)"]},"metadata":{},"execution_count":385}]},{"cell_type":"code","source":["y_smt.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J_tiD75IldXi","executionInfo":{"status":"ok","timestamp":1678881027006,"user_tz":-330,"elapsed":137,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"e2a53198-8d0c-42c2-9cb7-15144755b4b0"},"execution_count":386,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(51536,)"]},"metadata":{},"execution_count":386}]},{"cell_type":"markdown","metadata":{"id":"ArLzRkABcA4W"},"source":["#SCALING"]},{"cell_type":"code","execution_count":387,"metadata":{"executionInfo":{"elapsed":122,"status":"ok","timestamp":1678881027008,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"},"user_tz":-330},"id":"5ZDu5UFicLFF"},"outputs":[],"source":["from sklearn.preprocessing import StandardScaler ## standrard scalig  \n","scaler = StandardScaler() #initialise to a variable\n","scaler.fit(X_smt) # we are finding the values of mean and sd from the td\n","X_train_scaled = scaler.transform(X_smt) # fit (mean, sd) and then transform the training data\n","X_test_scaled = scaler.transform(X_test) # transform the test data "]},{"cell_type":"markdown","source":["#MODEL TRAINING"],"metadata":{"id":"wxyyUBFuNY0W"}},{"cell_type":"markdown","source":["**LOGISTIC REGRESSION**"],"metadata":{"id":"uaYIrXiu8NJV"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression #main code that build the LR model \n","from sklearn.metrics import roc_auc_score #for evaluation\n","lr= LogisticRegression() #initialise the required package\n","lr.fit(X_train_scaled, y_smt) #magic happens - best values of betas - training/learning happens here\n","y_pred=lr.predict(X_test_scaled)\n","\n","#logistic_regression.coef_\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JKaNTndgNXlg","executionInfo":{"status":"ok","timestamp":1678881027009,"user_tz":-330,"elapsed":122,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"b571fda5-5bff-4fb4-a34d-04ca0d0d9899"},"execution_count":388,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 0, 1, ..., 0, 0, 1])"]},"metadata":{},"execution_count":388}]},{"cell_type":"code","source":["lr.predict_proba(X_test_scaled)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vR0F6rZozXkG","executionInfo":{"status":"ok","timestamp":1678881027010,"user_tz":-330,"elapsed":110,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"2a7cf31c-f0f8-4ce5-d143-7fb35ab56701"},"execution_count":389,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[2.06781563e-01, 7.93218437e-01],\n","       [8.13755716e-01, 1.86244284e-01],\n","       [2.54129379e-01, 7.45870621e-01],\n","       ...,\n","       [9.66425449e-01, 3.35745509e-02],\n","       [9.94733503e-01, 5.26649705e-03],\n","       [4.27880872e-04, 9.99572119e-01]])"]},"metadata":{},"execution_count":389}]},{"cell_type":"code","source":["from sklearn.metrics import roc_auc_score\n","log = roc_auc_score(y_test, lr.predict_proba(X_test_scaled)[:, 1]) \n","log"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cUK8LY_dzVKA","executionInfo":{"status":"ok","timestamp":1678881027011,"user_tz":-330,"elapsed":90,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"b1bf5979-26ae-4336-e885-022b3d3c44b4"},"execution_count":390,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8937518154479069"]},"metadata":{},"execution_count":390}]},{"cell_type":"markdown","source":["**KNN**"],"metadata":{"id":"xwibaHBz8j-x"}},{"cell_type":"code","source":["from sklearn.model_selection import cross_val_score\n","from sklearn.neighbors import KNeighborsClassifier\n","knn = KNeighborsClassifier()\n","knn.fit(X_train_scaled,y_smt)\n","knn.score(X_test_scaled,y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1WPp_ko8QlDQ","executionInfo":{"status":"ok","timestamp":1678881029317,"user_tz":-330,"elapsed":2379,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"fc627a97-19af-4e17-c2e8-c3e336457505"},"execution_count":391,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8123341001592639"]},"metadata":{},"execution_count":391}]},{"cell_type":"code","source":["for i in [1,2,3,4,5,6,7,8,9,10,20,30,40,50]:\n","  knn = KNeighborsClassifier(i) #initialising the model\n","  knn.fit(X_train_scaled,y_smt) # training the model\n","  print(\"K value  : \" , i, \" train score : \", knn.score(X_train_scaled,y_smt) , \n","        \" cv score : \", np.mean(cross_val_score(knn, X_train_scaled, y_smt, cv=10, scoring = \"roc_auc\"))) #predicting using the model"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J8JxXkAVTMes","executionInfo":{"status":"ok","timestamp":1678881370509,"user_tz":-330,"elapsed":341267,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"59bde6ff-e72a-4bb8-edb8-f464b65c6595"},"execution_count":392,"outputs":[{"output_type":"stream","name":"stdout","text":["K value  :  1  train score :  1.0  cv score :  0.9628834906710692\n","K value  :  2  train score :  0.9946639242471282  cv score :  0.9715792416394754\n","K value  :  3  train score :  0.9768317292766222  cv score :  0.975597374928696\n","K value  :  4  train score :  0.9764436510400497  cv score :  0.9781120968317012\n","K value  :  5  train score :  0.9664118286246507  cv score :  0.9793654973006751\n","K value  :  6  train score :  0.966295405153679  cv score :  0.9800255575054779\n","K value  :  7  train score :  0.9594458242781745  cv score :  0.980474500747361\n","K value  :  8  train score :  0.9591741695125737  cv score :  0.9804653992840604\n","K value  :  9  train score :  0.9544202111145607  cv score :  0.9803950147972211\n","K value  :  10  train score :  0.9536634585532443  cv score :  0.9801514217305449\n","K value  :  20  train score :  0.936879074821484  cv score :  0.978361621444923\n","K value  :  30  train score :  0.9302235330642658  cv score :  0.9765832371827428\n","K value  :  40  train score :  0.9262651350512263  cv score :  0.9756076473722854\n","K value  :  50  train score :  0.9228112387457311  cv score :  0.9746697453543673\n"]}]},{"cell_type":"code","source":["knn = KNeighborsClassifier(n_neighbors=7)\n","knn.fit(X_train_scaled,y_smt)\n","knn.score(X_test_scaled,y_test)\n","K = roc_auc_score(y_test, knn.predict_proba(X_test_scaled)[:,1])\n","K"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-WN8DFdUarnh","executionInfo":{"status":"ok","timestamp":1678881375114,"user_tz":-330,"elapsed":4682,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"a230bb88-c7f5-416b-dc3f-9b7da6941b09"},"execution_count":393,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8787978606555189"]},"metadata":{},"execution_count":393}]},{"cell_type":"markdown","source":["**DECISION TREE**"],"metadata":{"id":"WVA9JGFCZajG"}},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier \n","dt = DecisionTreeClassifier()\n","dt.fit(X_train_scaled, y_smt)\n","dt.score(X_test_scaled, y_test) "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z-5X_MPCfq1c","executionInfo":{"status":"ok","timestamp":1678877403597,"user_tz":-330,"elapsed":103,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"78770955-cd0d-40f9-99e8-44c92cca9ee2"},"execution_count":289,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8506459033799327"]},"metadata":{},"execution_count":289}]},{"cell_type":"code","source":["for i in [1,2,3,4,5,6,7,8,9,10,11,12,20,30,40,50]:\n","  dt = KNeighborsClassifier(i) #initialising the model\n","  dt.fit(X_train_scaled,y_smt) # training the model\n","  print(\"depth  : \" , i, \" train score : \", dt.score(X_train_scaled,y_smt) , \n","        \" cv score : \", np.mean(cross_val_score(dt, X_train_scaled, y_smt, cv=10, scoring = \"roc_auc\"))) #predicting using the model"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"djseDcrV2Wuh","executionInfo":{"status":"ok","timestamp":1678877779759,"user_tz":-330,"elapsed":376252,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"31df8a97-3a1b-4001-f3d7-2370d178369c"},"execution_count":290,"outputs":[{"output_type":"stream","name":"stdout","text":["depth  :  1  train score :  1.0  cv score :  0.9616464103088088\n","depth  :  2  train score :  0.9942342412300286  cv score :  0.9707393816391645\n","depth  :  3  train score :  0.9762186717400166  cv score :  0.9749720849329642\n","depth  :  4  train score :  0.9757139251810293  cv score :  0.9780213415228388\n","depth  :  5  train score :  0.9662402205354196  cv score :  0.9794090160979074\n","depth  :  6  train score :  0.9665896604608725  cv score :  0.9802931406150265\n","depth  :  7  train score :  0.9592125953679796  cv score :  0.980888169346213\n","depth  :  8  train score :  0.9587660887965678  cv score :  0.9806241764951444\n","depth  :  9  train score :  0.9539904098153792  cv score :  0.9806348545399294\n","depth  :  10  train score :  0.9534080099396246  cv score :  0.9804423339702486\n","depth  :  11  train score :  0.9500495039894391  cv score :  0.9803317569632288\n","depth  :  12  train score :  0.9489429442255052  cv score :  0.9800590224651742\n","depth  :  20  train score :  0.9376249733066724  cv score :  0.9782433982655248\n","depth  :  30  train score :  0.9304614548348896  cv score :  0.9767097571233881\n","depth  :  40  train score :  0.9265982023257169  cv score :  0.9754967147376833\n","depth  :  50  train score :  0.9240356428723961  cv score :  0.9744042656041865\n"]}]},{"cell_type":"code","source":["dt = DecisionTreeClassifier(max_depth=10)\n","dt.fit(X_train_scaled, y_smt)\n","dt.score(X_test_scaled, y_test) \n","d = roc_auc_score(y_test, dt.predict_proba(X_test_scaled)[:,1])\n","d"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iHXCf2m9hd65","executionInfo":{"status":"ok","timestamp":1678877779760,"user_tz":-330,"elapsed":86,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"4542296a-bd5e-4566-9c22-d698da45ba89"},"execution_count":291,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8673691346236588"]},"metadata":{},"execution_count":291}]},{"cell_type":"code","source":["from sklearn import tree\n","tree.plot_tree(dt) # dt is the decison tree that I have learnt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"n1Y_fgcklg7W","executionInfo":{"status":"ok","timestamp":1678877831115,"user_tz":-330,"elapsed":51412,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"5b920044-d300-4d8e-f34b-3e558d814fc6"},"execution_count":292,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Text(0.39449284585674155, 0.9545454545454546, 'x[7] <= -0.507\\ngini = 0.493\\nsamples = 51511\\nvalue = [22660, 28851]'),\n"," Text(0.17676878511235955, 0.8636363636363636, 'x[6] <= 0.523\\ngini = 0.36\\nsamples = 21289\\nvalue = [16278, 5011]'),\n"," Text(0.11172313904494383, 0.7727272727272727, 'x[9] <= 0.534\\ngini = 0.205\\nsamples = 16515\\nvalue = [14597, 1918]'),\n"," Text(0.06890800561797752, 0.6818181818181818, 'x[9] <= -0.578\\ngini = 0.126\\nsamples = 15115\\nvalue = [14092, 1023]'),\n"," Text(0.03669241573033708, 0.5909090909090909, 'x[0] <= -1.307\\ngini = 0.074\\nsamples = 13295\\nvalue = [12782, 513]'),\n"," Text(0.016151685393258428, 0.5, 'x[6] <= -0.84\\ngini = 0.406\\nsamples = 346\\nvalue = [248, 98]'),\n"," Text(0.010533707865168539, 0.4090909090909091, 'x[0] <= -1.389\\ngini = 0.194\\nsamples = 221\\nvalue = [197, 24]'),\n"," Text(0.009129213483146067, 0.3181818181818182, 'x[5] <= 0.948\\ngini = 0.16\\nsamples = 216\\nvalue = [197, 19]'),\n"," Text(0.0056179775280898875, 0.22727272727272727, 'x[0] <= -1.863\\ngini = 0.04\\nsamples = 146\\nvalue = [143, 3]'),\n"," Text(0.0028089887640449437, 0.13636363636363635, 'x[8] <= 0.542\\ngini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.0014044943820224719, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.004213483146067416, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.008426966292134831, 0.13636363636363635, 'x[1] <= 1.517\\ngini = 0.014\\nsamples = 143\\nvalue = [142, 1]'),\n"," Text(0.007022471910112359, 0.045454545454545456, 'gini = 0.0\\nsamples = 117\\nvalue = [117, 0]'),\n"," Text(0.009831460674157303, 0.045454545454545456, 'gini = 0.074\\nsamples = 26\\nvalue = [25, 1]'),\n"," Text(0.012640449438202247, 0.22727272727272727, 'x[7] <= -0.912\\ngini = 0.353\\nsamples = 70\\nvalue = [54, 16]'),\n"," Text(0.011235955056179775, 0.13636363636363635, 'gini = 0.0\\nsamples = 44\\nvalue = [44, 0]'),\n"," Text(0.014044943820224719, 0.13636363636363635, 'x[5] <= 1.431\\ngini = 0.473\\nsamples = 26\\nvalue = [10, 16]'),\n"," Text(0.012640449438202247, 0.045454545454545456, 'gini = 0.198\\nsamples = 18\\nvalue = [2, 16]'),\n"," Text(0.01544943820224719, 0.045454545454545456, 'gini = 0.0\\nsamples = 8\\nvalue = [8, 0]'),\n"," Text(0.011938202247191011, 0.3181818181818182, 'gini = 0.0\\nsamples = 5\\nvalue = [0, 5]'),\n"," Text(0.021769662921348316, 0.4090909090909091, 'x[4] <= -0.585\\ngini = 0.483\\nsamples = 125\\nvalue = [51, 74]'),\n"," Text(0.016853932584269662, 0.3181818181818182, 'x[4] <= -1.336\\ngini = 0.056\\nsamples = 35\\nvalue = [34, 1]'),\n"," Text(0.01544943820224719, 0.22727272727272727, 'gini = 0.0\\nsamples = 32\\nvalue = [32, 0]'),\n"," Text(0.018258426966292134, 0.22727272727272727, 'x[5] <= 0.948\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n"," Text(0.016853932584269662, 0.13636363636363635, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.019662921348314606, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.026685393258426966, 0.3181818181818182, 'x[7] <= -1.005\\ngini = 0.306\\nsamples = 90\\nvalue = [17, 73]'),\n"," Text(0.023876404494382022, 0.22727272727272727, 'x[1] <= -0.311\\ngini = 0.26\\nsamples = 13\\nvalue = [11, 2]'),\n"," Text(0.02247191011235955, 0.13636363636363635, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.025280898876404494, 0.13636363636363635, 'gini = 0.0\\nsamples = 11\\nvalue = [11, 0]'),\n"," Text(0.02949438202247191, 0.22727272727272727, 'x[6] <= 0.18\\ngini = 0.144\\nsamples = 77\\nvalue = [6, 71]'),\n"," Text(0.028089887640449437, 0.13636363636363635, 'gini = 0.0\\nsamples = 48\\nvalue = [0, 48]'),\n"," Text(0.03089887640449438, 0.13636363636363635, 'x[7] <= -0.919\\ngini = 0.328\\nsamples = 29\\nvalue = [6, 23]'),\n"," Text(0.02949438202247191, 0.045454545454545456, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.032303370786516857, 0.045454545454545456, 'gini = 0.204\\nsamples = 26\\nvalue = [3, 23]'),\n"," Text(0.05723314606741573, 0.5, 'x[0] <= 1.701\\ngini = 0.062\\nsamples = 12949\\nvalue = [12534, 415]'),\n"," Text(0.047050561797752806, 0.4090909090909091, 'x[5] <= -1.408\\ngini = 0.057\\nsamples = 12876\\nvalue = [12499, 377]'),\n"," Text(0.038623595505617975, 0.3181818181818182, 'x[4] <= -0.584\\ngini = 0.316\\nsamples = 452\\nvalue = [363, 89]'),\n"," Text(0.0351123595505618, 0.22727272727272727, 'x[7] <= -0.51\\ngini = 0.006\\nsamples = 311\\nvalue = [310, 1]'),\n"," Text(0.033707865168539325, 0.13636363636363635, 'gini = 0.0\\nsamples = 310\\nvalue = [310, 0]'),\n"," Text(0.03651685393258427, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.042134831460674156, 0.22727272727272727, 'x[7] <= -0.737\\ngini = 0.469\\nsamples = 141\\nvalue = [53, 88]'),\n"," Text(0.03932584269662921, 0.13636363636363635, 'x[6] <= 0.187\\ngini = 0.475\\nsamples = 80\\nvalue = [49, 31]'),\n"," Text(0.037921348314606744, 0.045454545454545456, 'gini = 0.331\\nsamples = 62\\nvalue = [49, 13]'),\n"," Text(0.04073033707865169, 0.045454545454545456, 'gini = 0.0\\nsamples = 18\\nvalue = [0, 18]'),\n"," Text(0.0449438202247191, 0.13636363636363635, 'x[6] <= 0.519\\ngini = 0.123\\nsamples = 61\\nvalue = [4, 57]'),\n"," Text(0.04353932584269663, 0.045454545454545456, 'gini = 0.095\\nsamples = 60\\nvalue = [3, 57]'),\n"," Text(0.046348314606741575, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.05547752808988764, 0.3181818181818182, 'x[0] <= -0.877\\ngini = 0.045\\nsamples = 12424\\nvalue = [12136, 288]'),\n"," Text(0.05196629213483146, 0.22727272727272727, 'x[0] <= -0.961\\ngini = 0.16\\nsamples = 1376\\nvalue = [1255, 121]'),\n"," Text(0.05056179775280899, 0.13636363636363635, 'x[6] <= -0.829\\ngini = 0.127\\nsamples = 1347\\nvalue = [1255, 92]'),\n"," Text(0.04915730337078652, 0.045454545454545456, 'gini = 0.038\\nsamples = 940\\nvalue = [922, 18]'),\n"," Text(0.05196629213483146, 0.045454545454545456, 'gini = 0.298\\nsamples = 407\\nvalue = [333, 74]'),\n"," Text(0.05337078651685393, 0.13636363636363635, 'gini = 0.0\\nsamples = 29\\nvalue = [0, 29]'),\n"," Text(0.05898876404494382, 0.22727272727272727, 'x[7] <= -0.808\\ngini = 0.03\\nsamples = 11048\\nvalue = [10881, 167]'),\n"," Text(0.056179775280898875, 0.13636363636363635, 'x[6] <= -0.731\\ngini = 0.011\\nsamples = 7895\\nvalue = [7851, 44]'),\n"," Text(0.054775280898876406, 0.045454545454545456, 'gini = 0.001\\nsamples = 4022\\nvalue = [4020, 2]'),\n"," Text(0.05758426966292135, 0.045454545454545456, 'gini = 0.021\\nsamples = 3873\\nvalue = [3831, 42]'),\n"," Text(0.06179775280898876, 0.13636363636363635, 'x[6] <= -0.838\\ngini = 0.075\\nsamples = 3153\\nvalue = [3030, 123]'),\n"," Text(0.060393258426966294, 0.045454545454545456, 'gini = 0.012\\nsamples = 1884\\nvalue = [1873, 11]'),\n"," Text(0.06320224719101124, 0.045454545454545456, 'gini = 0.161\\nsamples = 1269\\nvalue = [1157, 112]'),\n"," Text(0.06741573033707865, 0.4090909090909091, 'x[7] <= -0.909\\ngini = 0.499\\nsamples = 73\\nvalue = [35, 38]'),\n"," Text(0.06601123595505617, 0.3181818181818182, 'gini = 0.0\\nsamples = 28\\nvalue = [28, 0]'),\n"," Text(0.06882022471910113, 0.3181818181818182, 'x[5] <= -0.677\\ngini = 0.263\\nsamples = 45\\nvalue = [7, 38]'),\n"," Text(0.06601123595505617, 0.22727272727272727, 'x[3] <= 0.483\\ngini = 0.32\\nsamples = 5\\nvalue = [4, 1]'),\n"," Text(0.06460674157303371, 0.13636363636363635, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n"," Text(0.06741573033707865, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.07162921348314606, 0.22727272727272727, 'x[7] <= -0.526\\ngini = 0.139\\nsamples = 40\\nvalue = [3, 37]'),\n"," Text(0.0702247191011236, 0.13636363636363635, 'x[7] <= -0.682\\ngini = 0.051\\nsamples = 38\\nvalue = [1, 37]'),\n"," Text(0.06882022471910113, 0.045454545454545456, 'gini = 0.0\\nsamples = 31\\nvalue = [0, 31]'),\n"," Text(0.07162921348314606, 0.045454545454545456, 'gini = 0.245\\nsamples = 7\\nvalue = [1, 6]'),\n"," Text(0.07303370786516854, 0.13636363636363635, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.10112359550561797, 0.5909090909090909, 'x[9] <= 0.532\\ngini = 0.403\\nsamples = 1820\\nvalue = [1310, 510]'),\n"," Text(0.0997191011235955, 0.5, 'gini = 0.0\\nsamples = 409\\nvalue = [0, 409]'),\n"," Text(0.10252808988764045, 0.5, 'x[6] <= -0.154\\ngini = 0.133\\nsamples = 1411\\nvalue = [1310, 101]'),\n"," Text(0.0898876404494382, 0.4090909090909091, 'x[7] <= -0.874\\ngini = 0.052\\nsamples = 1261\\nvalue = [1227, 34]'),\n"," Text(0.08216292134831461, 0.3181818181818182, 'x[0] <= 1.572\\ngini = 0.008\\nsamples = 760\\nvalue = [757, 3]'),\n"," Text(0.07865168539325842, 0.22727272727272727, 'x[1] <= 0.996\\ngini = 0.005\\nsamples = 751\\nvalue = [749, 2]'),\n"," Text(0.07584269662921349, 0.13636363636363635, 'x[7] <= -0.936\\ngini = 0.003\\nsamples = 723\\nvalue = [722, 1]'),\n"," Text(0.07443820224719101, 0.045454545454545456, 'gini = 0.0\\nsamples = 633\\nvalue = [633, 0]'),\n"," Text(0.07724719101123595, 0.045454545454545456, 'gini = 0.022\\nsamples = 90\\nvalue = [89, 1]'),\n"," Text(0.08146067415730338, 0.13636363636363635, 'x[7] <= -0.969\\ngini = 0.069\\nsamples = 28\\nvalue = [27, 1]'),\n"," Text(0.0800561797752809, 0.045454545454545456, 'gini = 0.0\\nsamples = 23\\nvalue = [23, 0]'),\n"," Text(0.08286516853932584, 0.045454545454545456, 'gini = 0.32\\nsamples = 5\\nvalue = [4, 1]'),\n"," Text(0.08567415730337079, 0.22727272727272727, 'x[6] <= -0.33\\ngini = 0.198\\nsamples = 9\\nvalue = [8, 1]'),\n"," Text(0.08426966292134831, 0.13636363636363635, 'gini = 0.0\\nsamples = 7\\nvalue = [7, 0]'),\n"," Text(0.08707865168539326, 0.13636363636363635, 'x[1] <= -0.047\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.08567415730337079, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.08848314606741572, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.0976123595505618, 0.3181818181818182, 'x[7] <= -0.866\\ngini = 0.116\\nsamples = 501\\nvalue = [470, 31]'),\n"," Text(0.09410112359550561, 0.22727272727272727, 'x[7] <= -0.871\\ngini = 0.48\\nsamples = 15\\nvalue = [9, 6]'),\n"," Text(0.09269662921348315, 0.13636363636363635, 'x[0] <= -0.661\\ngini = 0.18\\nsamples = 10\\nvalue = [9, 1]'),\n"," Text(0.09129213483146068, 0.045454545454545456, 'gini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n"," Text(0.09410112359550561, 0.045454545454545456, 'gini = 0.0\\nsamples = 7\\nvalue = [7, 0]'),\n"," Text(0.09550561797752809, 0.13636363636363635, 'gini = 0.0\\nsamples = 5\\nvalue = [0, 5]'),\n"," Text(0.10112359550561797, 0.22727272727272727, 'x[5] <= 0.888\\ngini = 0.098\\nsamples = 486\\nvalue = [461, 25]'),\n"," Text(0.09831460674157304, 0.13636363636363635, 'x[5] <= -1.584\\ngini = 0.056\\nsamples = 419\\nvalue = [407, 12]'),\n"," Text(0.09691011235955056, 0.045454545454545456, 'gini = 0.48\\nsamples = 5\\nvalue = [3, 2]'),\n"," Text(0.0997191011235955, 0.045454545454545456, 'gini = 0.047\\nsamples = 414\\nvalue = [404, 10]'),\n"," Text(0.10393258426966293, 0.13636363636363635, 'x[5] <= 1.602\\ngini = 0.313\\nsamples = 67\\nvalue = [54, 13]'),\n"," Text(0.10252808988764045, 0.045454545454545456, 'gini = 0.497\\nsamples = 26\\nvalue = [14, 12]'),\n"," Text(0.10533707865168539, 0.045454545454545456, 'gini = 0.048\\nsamples = 41\\nvalue = [40, 1]'),\n"," Text(0.1151685393258427, 0.4090909090909091, 'x[7] <= -0.804\\ngini = 0.494\\nsamples = 150\\nvalue = [83, 67]'),\n"," Text(0.10955056179775281, 0.3181818181818182, 'x[6] <= 0.172\\ngini = 0.3\\nsamples = 87\\nvalue = [71, 16]'),\n"," Text(0.10814606741573034, 0.22727272727272727, 'gini = 0.0\\nsamples = 7\\nvalue = [0, 7]'),\n"," Text(0.11095505617977527, 0.22727272727272727, 'x[5] <= -0.378\\ngini = 0.2\\nsamples = 80\\nvalue = [71, 9]'),\n"," Text(0.10955056179775281, 0.13636363636363635, 'x[7] <= -0.883\\ngini = 0.337\\nsamples = 42\\nvalue = [33, 9]'),\n"," Text(0.10814606741573034, 0.045454545454545456, 'gini = 0.251\\nsamples = 34\\nvalue = [29, 5]'),\n"," Text(0.11095505617977527, 0.045454545454545456, 'gini = 0.5\\nsamples = 8\\nvalue = [4, 4]'),\n"," Text(0.11235955056179775, 0.13636363636363635, 'gini = 0.0\\nsamples = 38\\nvalue = [38, 0]'),\n"," Text(0.12078651685393259, 0.3181818181818182, 'x[7] <= -0.559\\ngini = 0.308\\nsamples = 63\\nvalue = [12, 51]'),\n"," Text(0.11657303370786516, 0.22727272727272727, 'x[3] <= -1.149\\ngini = 0.241\\nsamples = 57\\nvalue = [8, 49]'),\n"," Text(0.1151685393258427, 0.13636363636363635, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.11797752808988764, 0.13636363636363635, 'x[8] <= 1.587\\ngini = 0.194\\nsamples = 55\\nvalue = [6, 49]'),\n"," Text(0.11657303370786516, 0.045454545454545456, 'gini = 0.14\\nsamples = 53\\nvalue = [4, 49]'),\n"," Text(0.11938202247191011, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.125, 0.22727272727272727, 'x[3] <= 0.483\\ngini = 0.444\\nsamples = 6\\nvalue = [4, 2]'),\n"," Text(0.12359550561797752, 0.13636363636363635, 'x[5] <= 0.165\\ngini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.12219101123595505, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.125, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.12640449438202248, 0.13636363636363635, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.1545382724719101, 0.6818181818181818, 'x[6] <= -1.18\\ngini = 0.461\\nsamples = 1400\\nvalue = [505, 895]'),\n"," Text(0.13974719101123595, 0.5909090909090909, 'x[5] <= 1.161\\ngini = 0.183\\nsamples = 295\\nvalue = [265, 30]'),\n"," Text(0.13342696629213482, 0.5, 'x[7] <= -0.735\\ngini = 0.045\\nsamples = 261\\nvalue = [255, 6]'),\n"," Text(0.13202247191011235, 0.4090909090909091, 'gini = 0.0\\nsamples = 211\\nvalue = [211, 0]'),\n"," Text(0.1348314606741573, 0.4090909090909091, 'x[9] <= 2.204\\ngini = 0.211\\nsamples = 50\\nvalue = [44, 6]'),\n"," Text(0.13202247191011235, 0.3181818181818182, 'x[5] <= -1.102\\ngini = 0.05\\nsamples = 39\\nvalue = [38, 1]'),\n"," Text(0.1306179775280899, 0.22727272727272727, 'x[5] <= -1.222\\ngini = 0.375\\nsamples = 4\\nvalue = [3, 1]'),\n"," Text(0.12921348314606743, 0.13636363636363635, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.13202247191011235, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.13342696629213482, 0.22727272727272727, 'gini = 0.0\\nsamples = 35\\nvalue = [35, 0]'),\n"," Text(0.13764044943820225, 0.3181818181818182, 'x[0] <= -1.176\\ngini = 0.496\\nsamples = 11\\nvalue = [6, 5]'),\n"," Text(0.13623595505617977, 0.22727272727272727, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.13904494382022473, 0.22727272727272727, 'x[5] <= -0.378\\ngini = 0.444\\nsamples = 9\\nvalue = [6, 3]'),\n"," Text(0.13764044943820225, 0.13636363636363635, 'x[8] <= -0.502\\ngini = 0.48\\nsamples = 5\\nvalue = [2, 3]'),\n"," Text(0.13623595505617977, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.13904494382022473, 0.045454545454545456, 'gini = 0.0\\nsamples = 3\\nvalue = [0, 3]'),\n"," Text(0.1404494382022472, 0.13636363636363635, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n"," Text(0.14606741573033707, 0.5, 'x[7] <= -1.078\\ngini = 0.415\\nsamples = 34\\nvalue = [10, 24]'),\n"," Text(0.1446629213483146, 0.4090909090909091, 'gini = 0.0\\nsamples = 5\\nvalue = [5, 0]'),\n"," Text(0.14747191011235955, 0.4090909090909091, 'x[9] <= 2.737\\ngini = 0.285\\nsamples = 29\\nvalue = [5, 24]'),\n"," Text(0.14325842696629212, 0.3181818181818182, 'x[7] <= -0.596\\ngini = 0.1\\nsamples = 19\\nvalue = [1, 18]'),\n"," Text(0.14185393258426968, 0.22727272727272727, 'gini = 0.0\\nsamples = 17\\nvalue = [0, 17]'),\n"," Text(0.1446629213483146, 0.22727272727272727, 'x[0] <= 0.641\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.14325842696629212, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.14606741573033707, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.15168539325842698, 0.3181818181818182, 'x[0] <= 0.112\\ngini = 0.48\\nsamples = 10\\nvalue = [4, 6]'),\n"," Text(0.1502808988764045, 0.22727272727272727, 'x[7] <= -0.854\\ngini = 0.444\\nsamples = 6\\nvalue = [4, 2]'),\n"," Text(0.14887640449438203, 0.13636363636363635, 'x[1] <= 0.301\\ngini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.14747191011235955, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.1502808988764045, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.15168539325842698, 0.13636363636363635, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.15308988764044945, 0.22727272727272727, 'gini = 0.0\\nsamples = 4\\nvalue = [0, 4]'),\n"," Text(0.16932935393258428, 0.5909090909090909, 'x[7] <= -1.081\\ngini = 0.34\\nsamples = 1105\\nvalue = [240, 865]'),\n"," Text(0.1544943820224719, 0.5, 'x[9] <= 1.615\\ngini = 0.268\\nsamples = 94\\nvalue = [79, 15]'),\n"," Text(0.15308988764044945, 0.4090909090909091, 'gini = 0.0\\nsamples = 4\\nvalue = [0, 4]'),\n"," Text(0.15589887640449437, 0.4090909090909091, 'x[9] <= 1.751\\ngini = 0.215\\nsamples = 90\\nvalue = [79, 11]'),\n"," Text(0.1544943820224719, 0.3181818181818182, 'gini = 0.0\\nsamples = 59\\nvalue = [59, 0]'),\n"," Text(0.15730337078651685, 0.3181818181818182, 'x[9] <= 2.75\\ngini = 0.458\\nsamples = 31\\nvalue = [20, 11]'),\n"," Text(0.15589887640449437, 0.22727272727272727, 'gini = 0.0\\nsamples = 8\\nvalue = [0, 8]'),\n"," Text(0.15870786516853932, 0.22727272727272727, 'x[0] <= -0.403\\ngini = 0.227\\nsamples = 23\\nvalue = [20, 3]'),\n"," Text(0.15730337078651685, 0.13636363636363635, 'x[3] <= 0.483\\ngini = 0.42\\nsamples = 10\\nvalue = [7, 3]'),\n"," Text(0.15589887640449437, 0.045454545454545456, 'gini = 0.5\\nsamples = 6\\nvalue = [3, 3]'),\n"," Text(0.15870786516853932, 0.045454545454545456, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n"," Text(0.1601123595505618, 0.13636363636363635, 'gini = 0.0\\nsamples = 13\\nvalue = [13, 0]'),\n"," Text(0.18416432584269662, 0.5, 'x[5] <= 0.043\\ngini = 0.268\\nsamples = 1011\\nvalue = [161, 850]'),\n"," Text(0.17521067415730338, 0.4090909090909091, 'x[8] <= 1.785\\ngini = 0.13\\nsamples = 713\\nvalue = [50, 663]'),\n"," Text(0.17064606741573032, 0.3181818181818182, 'x[7] <= -0.732\\ngini = 0.115\\nsamples = 705\\nvalue = [43, 662]'),\n"," Text(0.16573033707865167, 0.22727272727272727, 'x[9] <= 2.758\\ngini = 0.269\\nsamples = 243\\nvalue = [39, 204]'),\n"," Text(0.16292134831460675, 0.13636363636363635, 'x[6] <= -0.433\\ngini = 0.158\\nsamples = 162\\nvalue = [14, 148]'),\n"," Text(0.16151685393258428, 0.045454545454545456, 'gini = 0.444\\nsamples = 18\\nvalue = [6, 12]'),\n"," Text(0.16432584269662923, 0.045454545454545456, 'gini = 0.105\\nsamples = 144\\nvalue = [8, 136]'),\n"," Text(0.16853932584269662, 0.13636363636363635, 'x[0] <= -0.489\\ngini = 0.427\\nsamples = 81\\nvalue = [25, 56]'),\n"," Text(0.16713483146067415, 0.045454545454545456, 'gini = 0.444\\nsamples = 21\\nvalue = [14, 7]'),\n"," Text(0.1699438202247191, 0.045454545454545456, 'gini = 0.299\\nsamples = 60\\nvalue = [11, 49]'),\n"," Text(0.175561797752809, 0.22727272727272727, 'x[0] <= 3.028\\ngini = 0.017\\nsamples = 462\\nvalue = [4, 458]'),\n"," Text(0.17415730337078653, 0.13636363636363635, 'x[4] <= -1.74\\ngini = 0.013\\nsamples = 461\\nvalue = [3, 458]'),\n"," Text(0.17275280898876405, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.175561797752809, 0.045454545454545456, 'gini = 0.009\\nsamples = 460\\nvalue = [2, 458]'),\n"," Text(0.17696629213483145, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.1797752808988764, 0.3181818181818182, 'x[7] <= -1.037\\ngini = 0.219\\nsamples = 8\\nvalue = [7, 1]'),\n"," Text(0.17837078651685392, 0.22727272727272727, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.18117977528089887, 0.22727272727272727, 'gini = 0.0\\nsamples = 7\\nvalue = [7, 0]'),\n"," Text(0.1931179775280899, 0.4090909090909091, 'x[7] <= -0.874\\ngini = 0.467\\nsamples = 298\\nvalue = [111, 187]'),\n"," Text(0.18679775280898878, 0.3181818181818182, 'x[6] <= -0.514\\ngini = 0.301\\nsamples = 65\\nvalue = [53, 12]'),\n"," Text(0.18398876404494383, 0.22727272727272727, 'x[9] <= 2.418\\ngini = 0.426\\nsamples = 13\\nvalue = [4, 9]'),\n"," Text(0.18258426966292135, 0.13636363636363635, 'gini = 0.0\\nsamples = 9\\nvalue = [0, 9]'),\n"," Text(0.1853932584269663, 0.13636363636363635, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n"," Text(0.1896067415730337, 0.22727272727272727, 'x[7] <= -1.077\\ngini = 0.109\\nsamples = 52\\nvalue = [49, 3]'),\n"," Text(0.18820224719101122, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.19101123595505617, 0.13636363636363635, 'x[9] <= 2.204\\ngini = 0.075\\nsamples = 51\\nvalue = [49, 2]'),\n"," Text(0.1896067415730337, 0.045454545454545456, 'gini = 0.0\\nsamples = 41\\nvalue = [41, 0]'),\n"," Text(0.19241573033707865, 0.045454545454545456, 'gini = 0.32\\nsamples = 10\\nvalue = [8, 2]'),\n"," Text(0.199438202247191, 0.3181818181818182, 'x[9] <= 1.65\\ngini = 0.374\\nsamples = 233\\nvalue = [58, 175]'),\n"," Text(0.1952247191011236, 0.22727272727272727, 'x[9] <= 1.646\\ngini = 0.489\\nsamples = 106\\nvalue = [45, 61]'),\n"," Text(0.19382022471910113, 0.13636363636363635, 'gini = 0.0\\nsamples = 47\\nvalue = [0, 47]'),\n"," Text(0.19662921348314608, 0.13636363636363635, 'x[2] <= -0.681\\ngini = 0.362\\nsamples = 59\\nvalue = [45, 14]'),\n"," Text(0.1952247191011236, 0.045454545454545456, 'gini = 0.059\\nsamples = 33\\nvalue = [32, 1]'),\n"," Text(0.19803370786516855, 0.045454545454545456, 'gini = 0.5\\nsamples = 26\\nvalue = [13, 13]'),\n"," Text(0.20365168539325842, 0.22727272727272727, 'x[8] <= 2.283\\ngini = 0.184\\nsamples = 127\\nvalue = [13, 114]'),\n"," Text(0.20224719101123595, 0.13636363636363635, 'x[9] <= 2.747\\ngini = 0.161\\nsamples = 125\\nvalue = [11, 114]'),\n"," Text(0.20084269662921347, 0.045454545454545456, 'gini = 0.0\\nsamples = 62\\nvalue = [0, 62]'),\n"," Text(0.20365168539325842, 0.045454545454545456, 'gini = 0.288\\nsamples = 63\\nvalue = [11, 52]'),\n"," Text(0.2050561797752809, 0.13636363636363635, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.24181443117977527, 0.7727272727272727, 'x[7] <= -1.134\\ngini = 0.456\\nsamples = 4774\\nvalue = [1681, 3093]'),\n"," Text(0.21137640449438203, 0.6818181818181818, 'x[6] <= 0.862\\ngini = 0.106\\nsamples = 695\\nvalue = [656, 39]'),\n"," Text(0.20997191011235955, 0.5909090909090909, 'gini = 0.0\\nsamples = 13\\nvalue = [0, 13]'),\n"," Text(0.2127808988764045, 0.5909090909090909, 'x[7] <= -1.204\\ngini = 0.073\\nsamples = 682\\nvalue = [656, 26]'),\n"," Text(0.21137640449438203, 0.5, 'gini = 0.0\\nsamples = 486\\nvalue = [486, 0]'),\n"," Text(0.21418539325842698, 0.5, 'x[3] <= -0.327\\ngini = 0.23\\nsamples = 196\\nvalue = [170, 26]'),\n"," Text(0.21067415730337077, 0.4090909090909091, 'x[1] <= 1.691\\ngini = 0.031\\nsamples = 126\\nvalue = [124, 2]'),\n"," Text(0.20786516853932585, 0.3181818181818182, 'x[8] <= 0.89\\ngini = 0.016\\nsamples = 123\\nvalue = [122, 1]'),\n"," Text(0.20646067415730338, 0.22727272727272727, 'gini = 0.0\\nsamples = 105\\nvalue = [105, 0]'),\n"," Text(0.20926966292134833, 0.22727272727272727, 'x[2] <= 0.882\\ngini = 0.105\\nsamples = 18\\nvalue = [17, 1]'),\n"," Text(0.20786516853932585, 0.13636363636363635, 'gini = 0.0\\nsamples = 14\\nvalue = [14, 0]'),\n"," Text(0.21067415730337077, 0.13636363636363635, 'x[8] <= 1.935\\ngini = 0.375\\nsamples = 4\\nvalue = [3, 1]'),\n"," Text(0.20926966292134833, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.21207865168539325, 0.045454545454545456, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.21348314606741572, 0.3181818181818182, 'x[7] <= -1.156\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n"," Text(0.21207865168539325, 0.22727272727272727, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.2148876404494382, 0.22727272727272727, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.21769662921348315, 0.4090909090909091, 'x[3] <= 1.172\\ngini = 0.451\\nsamples = 70\\nvalue = [46, 24]'),\n"," Text(0.21629213483146068, 0.3181818181818182, 'gini = 0.0\\nsamples = 10\\nvalue = [0, 10]'),\n"," Text(0.21910112359550563, 0.3181818181818182, 'x[4] <= -0.776\\ngini = 0.358\\nsamples = 60\\nvalue = [46, 14]'),\n"," Text(0.21769662921348315, 0.22727272727272727, 'gini = 0.0\\nsamples = 4\\nvalue = [0, 4]'),\n"," Text(0.2205056179775281, 0.22727272727272727, 'x[7] <= -1.156\\ngini = 0.293\\nsamples = 56\\nvalue = [46, 10]'),\n"," Text(0.21910112359550563, 0.13636363636363635, 'gini = 0.0\\nsamples = 29\\nvalue = [29, 0]'),\n"," Text(0.22191011235955055, 0.13636363636363635, 'x[7] <= -1.15\\ngini = 0.466\\nsamples = 27\\nvalue = [17, 10]'),\n"," Text(0.2205056179775281, 0.045454545454545456, 'gini = 0.198\\nsamples = 9\\nvalue = [1, 8]'),\n"," Text(0.22331460674157302, 0.045454545454545456, 'gini = 0.198\\nsamples = 18\\nvalue = [16, 2]'),\n"," Text(0.27225245786516855, 0.6818181818181818, 'x[1] <= -1.608\\ngini = 0.376\\nsamples = 4079\\nvalue = [1025, 3054]'),\n"," Text(0.24051966292134833, 0.5909090909090909, 'x[9] <= 1.666\\ngini = 0.288\\nsamples = 310\\nvalue = [256, 54]'),\n"," Text(0.23384831460674158, 0.5, 'x[6] <= 0.84\\ngini = 0.221\\nsamples = 285\\nvalue = [249, 36]'),\n"," Text(0.2324438202247191, 0.4090909090909091, 'gini = 0.0\\nsamples = 8\\nvalue = [0, 8]'),\n"," Text(0.23525280898876405, 0.4090909090909091, 'x[2] <= -0.722\\ngini = 0.182\\nsamples = 277\\nvalue = [249, 28]'),\n"," Text(0.2303370786516854, 0.3181818181818182, 'x[6] <= 1.374\\ngini = 0.078\\nsamples = 198\\nvalue = [190, 8]'),\n"," Text(0.22612359550561797, 0.22727272727272727, 'x[7] <= -0.85\\ngini = 0.053\\nsamples = 183\\nvalue = [178, 5]'),\n"," Text(0.2247191011235955, 0.13636363636363635, 'gini = 0.0\\nsamples = 83\\nvalue = [83, 0]'),\n"," Text(0.22752808988764045, 0.13636363636363635, 'x[7] <= -0.845\\ngini = 0.095\\nsamples = 100\\nvalue = [95, 5]'),\n"," Text(0.22612359550561797, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.22893258426966293, 0.045454545454545456, 'gini = 0.078\\nsamples = 99\\nvalue = [95, 4]'),\n"," Text(0.2345505617977528, 0.22727272727272727, 'x[0] <= 0.67\\ngini = 0.32\\nsamples = 15\\nvalue = [12, 3]'),\n"," Text(0.23314606741573032, 0.13636363636363635, 'x[5] <= 0.466\\ngini = 0.469\\nsamples = 8\\nvalue = [5, 3]'),\n"," Text(0.23174157303370788, 0.045454545454545456, 'gini = 0.48\\nsamples = 5\\nvalue = [2, 3]'),\n"," Text(0.2345505617977528, 0.045454545454545456, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.23595505617977527, 0.13636363636363635, 'gini = 0.0\\nsamples = 7\\nvalue = [7, 0]'),\n"," Text(0.2401685393258427, 0.3181818181818182, 'x[2] <= 0.242\\ngini = 0.378\\nsamples = 79\\nvalue = [59, 20]'),\n"," Text(0.23876404494382023, 0.22727272727272727, 'gini = 0.0\\nsamples = 5\\nvalue = [0, 5]'),\n"," Text(0.24157303370786518, 0.22727272727272727, 'x[4] <= 0.518\\ngini = 0.323\\nsamples = 74\\nvalue = [59, 15]'),\n"," Text(0.23876404494382023, 0.13636363636363635, 'x[0] <= 0.541\\ngini = 0.444\\nsamples = 9\\nvalue = [3, 6]'),\n"," Text(0.23735955056179775, 0.045454545454545456, 'gini = 0.245\\nsamples = 7\\nvalue = [1, 6]'),\n"," Text(0.2401685393258427, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.2443820224719101, 0.13636363636363635, 'x[0] <= -1.348\\ngini = 0.239\\nsamples = 65\\nvalue = [56, 9]'),\n"," Text(0.24297752808988765, 0.045454545454545456, 'gini = 0.0\\nsamples = 3\\nvalue = [0, 3]'),\n"," Text(0.24578651685393257, 0.045454545454545456, 'gini = 0.175\\nsamples = 62\\nvalue = [56, 6]'),\n"," Text(0.24719101123595505, 0.5, 'x[8] <= -0.2\\ngini = 0.403\\nsamples = 25\\nvalue = [7, 18]'),\n"," Text(0.2443820224719101, 0.4090909090909091, 'x[0] <= 1.185\\ngini = 0.198\\nsamples = 18\\nvalue = [2, 16]'),\n"," Text(0.24297752808988765, 0.3181818181818182, 'gini = 0.0\\nsamples = 16\\nvalue = [0, 16]'),\n"," Text(0.24578651685393257, 0.3181818181818182, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.25, 0.4090909090909091, 'x[5] <= -0.258\\ngini = 0.408\\nsamples = 7\\nvalue = [5, 2]'),\n"," Text(0.24859550561797752, 0.3181818181818182, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n"," Text(0.25140449438202245, 0.3181818181818182, 'x[7] <= -0.888\\ngini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.25, 0.22727272727272727, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.25280898876404495, 0.22727272727272727, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.30398525280898875, 0.5909090909090909, 'x[5] <= -1.041\\ngini = 0.325\\nsamples = 3769\\nvalue = [769, 3000]'),\n"," Text(0.27615870786516855, 0.5, 'x[7] <= -0.846\\ngini = 0.484\\nsamples = 996\\nvalue = [410, 586]'),\n"," Text(0.26650280898876405, 0.4090909090909091, 'x[6] <= 1.89\\ngini = 0.444\\nsamples = 390\\nvalue = [260, 130]'),\n"," Text(0.26053370786516855, 0.3181818181818182, 'x[9] <= 1.689\\ngini = 0.311\\nsamples = 311\\nvalue = [251, 60]'),\n"," Text(0.2556179775280899, 0.22727272727272727, 'x[0] <= 2.345\\ngini = 0.229\\nsamples = 281\\nvalue = [244, 37]'),\n"," Text(0.25280898876404495, 0.13636363636363635, 'x[6] <= 0.865\\ngini = 0.184\\nsamples = 264\\nvalue = [237, 27]'),\n"," Text(0.25140449438202245, 0.045454545454545456, 'gini = 0.061\\nsamples = 191\\nvalue = [185, 6]'),\n"," Text(0.2542134831460674, 0.045454545454545456, 'gini = 0.41\\nsamples = 73\\nvalue = [52, 21]'),\n"," Text(0.25842696629213485, 0.13636363636363635, 'x[6] <= 1.159\\ngini = 0.484\\nsamples = 17\\nvalue = [7, 10]'),\n"," Text(0.25702247191011235, 0.045454545454545456, 'gini = 0.0\\nsamples = 10\\nvalue = [0, 10]'),\n"," Text(0.2598314606741573, 0.045454545454545456, 'gini = 0.0\\nsamples = 7\\nvalue = [7, 0]'),\n"," Text(0.2654494382022472, 0.22727272727272727, 'x[7] <= -0.915\\ngini = 0.358\\nsamples = 30\\nvalue = [7, 23]'),\n"," Text(0.2640449438202247, 0.13636363636363635, 'x[7] <= -1.091\\ngini = 0.204\\nsamples = 26\\nvalue = [3, 23]'),\n"," Text(0.26264044943820225, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.2654494382022472, 0.045454545454545456, 'gini = 0.147\\nsamples = 25\\nvalue = [2, 23]'),\n"," Text(0.26685393258426965, 0.13636363636363635, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n"," Text(0.27247191011235955, 0.3181818181818182, 'x[0] <= 1.674\\ngini = 0.202\\nsamples = 79\\nvalue = [9, 70]'),\n"," Text(0.2710674157303371, 0.22727272727272727, 'x[8] <= 0.89\\ngini = 0.124\\nsamples = 75\\nvalue = [5, 70]'),\n"," Text(0.2696629213483146, 0.13636363636363635, 'x[7] <= -1.113\\ngini = 0.079\\nsamples = 73\\nvalue = [3, 70]'),\n"," Text(0.26825842696629215, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.2710674157303371, 0.045454545454545456, 'gini = 0.054\\nsamples = 72\\nvalue = [2, 70]'),\n"," Text(0.27247191011235955, 0.13636363636363635, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.273876404494382, 0.22727272727272727, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n"," Text(0.28581460674157305, 0.4090909090909091, 'x[3] <= -0.331\\ngini = 0.373\\nsamples = 606\\nvalue = [150, 456]'),\n"," Text(0.2808988764044944, 0.3181818181818182, 'x[6] <= 0.87\\ngini = 0.494\\nsamples = 240\\nvalue = [107, 133]'),\n"," Text(0.27668539325842695, 0.22727272727272727, 'x[6] <= 0.852\\ngini = 0.426\\nsamples = 127\\nvalue = [88, 39]'),\n"," Text(0.2752808988764045, 0.13636363636363635, 'gini = 0.0\\nsamples = 25\\nvalue = [0, 25]'),\n"," Text(0.27808988764044945, 0.13636363636363635, 'x[0] <= 1.883\\ngini = 0.237\\nsamples = 102\\nvalue = [88, 14]'),\n"," Text(0.27668539325842695, 0.045454545454545456, 'gini = 0.153\\nsamples = 96\\nvalue = [88, 8]'),\n"," Text(0.2794943820224719, 0.045454545454545456, 'gini = 0.0\\nsamples = 6\\nvalue = [0, 6]'),\n"," Text(0.2851123595505618, 0.22727272727272727, 'x[7] <= -0.535\\ngini = 0.28\\nsamples = 113\\nvalue = [19, 94]'),\n"," Text(0.28370786516853935, 0.13636363636363635, 'x[8] <= 1.935\\ngini = 0.249\\nsamples = 110\\nvalue = [16, 94]'),\n"," Text(0.28230337078651685, 0.045454545454545456, 'gini = 0.226\\nsamples = 108\\nvalue = [14, 94]'),\n"," Text(0.2851123595505618, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.28651685393258425, 0.13636363636363635, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.2907303370786517, 0.3181818181818182, 'x[3] <= 1.297\\ngini = 0.207\\nsamples = 366\\nvalue = [43, 323]'),\n"," Text(0.2893258426966292, 0.22727272727272727, 'gini = 0.0\\nsamples = 174\\nvalue = [0, 174]'),\n"," Text(0.29213483146067415, 0.22727272727272727, 'x[8] <= 1.081\\ngini = 0.348\\nsamples = 192\\nvalue = [43, 149]'),\n"," Text(0.2893258426966292, 0.13636363636363635, 'x[5] <= -1.633\\ngini = 0.305\\nsamples = 181\\nvalue = [34, 147]'),\n"," Text(0.28792134831460675, 0.045454545454545456, 'gini = 0.499\\nsamples = 31\\nvalue = [15, 16]'),\n"," Text(0.2907303370786517, 0.045454545454545456, 'gini = 0.221\\nsamples = 150\\nvalue = [19, 131]'),\n"," Text(0.2949438202247191, 0.13636363636363635, 'x[6] <= 1.715\\ngini = 0.298\\nsamples = 11\\nvalue = [9, 2]'),\n"," Text(0.29353932584269665, 0.045454545454545456, 'gini = 0.0\\nsamples = 9\\nvalue = [9, 0]'),\n"," Text(0.29634831460674155, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.331811797752809, 0.5, 'x[8] <= 1.238\\ngini = 0.225\\nsamples = 2773\\nvalue = [359, 2414]'),\n"," Text(0.31495786516853935, 0.4090909090909091, 'x[7] <= -0.881\\ngini = 0.199\\nsamples = 2652\\nvalue = [298, 2354]'),\n"," Text(0.3068820224719101, 0.3181818181818182, 'x[5] <= 1.72\\ngini = 0.33\\nsamples = 872\\nvalue = [182, 690]'),\n"," Text(0.30337078651685395, 0.22727272727272727, 'x[3] <= -0.312\\ngini = 0.306\\nsamples = 849\\nvalue = [160, 689]'),\n"," Text(0.300561797752809, 0.13636363636363635, 'x[7] <= -1.062\\ngini = 0.435\\nsamples = 306\\nvalue = [98, 208]'),\n"," Text(0.2991573033707865, 0.045454545454545456, 'gini = 0.423\\nsamples = 46\\nvalue = [32, 14]'),\n"," Text(0.30196629213483145, 0.045454545454545456, 'gini = 0.379\\nsamples = 260\\nvalue = [66, 194]'),\n"," Text(0.3061797752808989, 0.13636363636363635, 'x[3] <= 1.298\\ngini = 0.202\\nsamples = 543\\nvalue = [62, 481]'),\n"," Text(0.3047752808988764, 0.045454545454545456, 'gini = 0.0\\nsamples = 281\\nvalue = [0, 281]'),\n"," Text(0.30758426966292135, 0.045454545454545456, 'gini = 0.361\\nsamples = 262\\nvalue = [62, 200]'),\n"," Text(0.3103932584269663, 0.22727272727272727, 'x[4] <= -1.336\\ngini = 0.083\\nsamples = 23\\nvalue = [22, 1]'),\n"," Text(0.3089887640449438, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.31179775280898875, 0.13636363636363635, 'gini = 0.0\\nsamples = 22\\nvalue = [22, 0]'),\n"," Text(0.32303370786516855, 0.3181818181818182, 'x[6] <= 1.204\\ngini = 0.122\\nsamples = 1780\\nvalue = [116, 1664]'),\n"," Text(0.31741573033707865, 0.22727272727272727, 'x[5] <= -0.794\\ngini = 0.016\\nsamples = 738\\nvalue = [6, 732]'),\n"," Text(0.3146067415730337, 0.13636363636363635, 'x[5] <= -0.801\\ngini = 0.116\\nsamples = 65\\nvalue = [4, 61]'),\n"," Text(0.31320224719101125, 0.045454545454545456, 'gini = 0.0\\nsamples = 58\\nvalue = [0, 58]'),\n"," Text(0.3160112359550562, 0.045454545454545456, 'gini = 0.49\\nsamples = 7\\nvalue = [4, 3]'),\n"," Text(0.3202247191011236, 0.13636363636363635, 'x[1] <= -0.911\\ngini = 0.006\\nsamples = 673\\nvalue = [2, 671]'),\n"," Text(0.3188202247191011, 0.045454545454545456, 'gini = 0.049\\nsamples = 40\\nvalue = [1, 39]'),\n"," Text(0.32162921348314605, 0.045454545454545456, 'gini = 0.003\\nsamples = 633\\nvalue = [1, 632]'),\n"," Text(0.32865168539325845, 0.22727272727272727, 'x[6] <= 1.204\\ngini = 0.189\\nsamples = 1042\\nvalue = [110, 932]'),\n"," Text(0.3258426966292135, 0.13636363636363635, 'x[2] <= -0.87\\ngini = 0.499\\nsamples = 174\\nvalue = [84, 90]'),\n"," Text(0.324438202247191, 0.045454545454545456, 'gini = 0.437\\nsamples = 65\\nvalue = [44, 21]'),\n"," Text(0.32724719101123595, 0.045454545454545456, 'gini = 0.465\\nsamples = 109\\nvalue = [40, 69]'),\n"," Text(0.33146067415730335, 0.13636363636363635, 'x[8] <= -0.155\\ngini = 0.058\\nsamples = 868\\nvalue = [26, 842]'),\n"," Text(0.3300561797752809, 0.045454545454545456, 'gini = 0.034\\nsamples = 703\\nvalue = [12, 691]'),\n"," Text(0.33286516853932585, 0.045454545454545456, 'gini = 0.155\\nsamples = 165\\nvalue = [14, 151]'),\n"," Text(0.34866573033707865, 0.4090909090909091, 'x[5] <= 0.497\\ngini = 0.5\\nsamples = 121\\nvalue = [61, 60]'),\n"," Text(0.3433988764044944, 0.3181818181818182, 'x[8] <= 2.574\\ngini = 0.467\\nsamples = 89\\nvalue = [33, 56]'),\n"," Text(0.3398876404494382, 0.22727272727272727, 'x[3] <= -0.183\\ngini = 0.382\\nsamples = 70\\nvalue = [18, 52]'),\n"," Text(0.33707865168539325, 0.13636363636363635, 'x[8] <= 1.272\\ngini = 0.473\\nsamples = 39\\nvalue = [15, 24]'),\n"," Text(0.3356741573033708, 0.045454545454545456, 'gini = 0.408\\nsamples = 14\\nvalue = [10, 4]'),\n"," Text(0.33848314606741575, 0.045454545454545456, 'gini = 0.32\\nsamples = 25\\nvalue = [5, 20]'),\n"," Text(0.34269662921348315, 0.13636363636363635, 'x[1] <= 0.152\\ngini = 0.175\\nsamples = 31\\nvalue = [3, 28]'),\n"," Text(0.34129213483146065, 0.045454545454545456, 'gini = 0.5\\nsamples = 6\\nvalue = [3, 3]'),\n"," Text(0.3441011235955056, 0.045454545454545456, 'gini = 0.0\\nsamples = 25\\nvalue = [0, 25]'),\n"," Text(0.34691011235955055, 0.22727272727272727, 'x[7] <= -1.087\\ngini = 0.332\\nsamples = 19\\nvalue = [15, 4]'),\n"," Text(0.3455056179775281, 0.13636363636363635, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.34831460674157305, 0.13636363636363635, 'x[5] <= 0.225\\ngini = 0.208\\nsamples = 17\\nvalue = [15, 2]'),\n"," Text(0.34691011235955055, 0.045454545454545456, 'gini = 0.117\\nsamples = 16\\nvalue = [15, 1]'),\n"," Text(0.3497191011235955, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.3539325842696629, 0.3181818181818182, 'x[1] <= 1.663\\ngini = 0.219\\nsamples = 32\\nvalue = [28, 4]'),\n"," Text(0.35252808988764045, 0.22727272727272727, 'x[0] <= -1.262\\ngini = 0.124\\nsamples = 30\\nvalue = [28, 2]'),\n"," Text(0.351123595505618, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.3539325842696629, 0.13636363636363635, 'x[0] <= 3.886\\ngini = 0.067\\nsamples = 29\\nvalue = [28, 1]'),\n"," Text(0.35252808988764045, 0.045454545454545456, 'gini = 0.0\\nsamples = 28\\nvalue = [28, 0]'),\n"," Text(0.3553370786516854, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.3553370786516854, 0.22727272727272727, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.6122169066011236, 0.8636363636363636, 'x[4] <= -1.98\\ngini = 0.333\\nsamples = 30222\\nvalue = [6382, 23840]'),\n"," Text(0.4494601474719101, 0.7727272727272727, 'x[7] <= 0.969\\ngini = 0.443\\nsamples = 3569\\nvalue = [2387, 1182]'),\n"," Text(0.41099016853932585, 0.6818181818181818, 'x[6] <= 0.352\\ngini = 0.045\\nsamples = 2314\\nvalue = [2261, 53]'),\n"," Text(0.3964185393258427, 0.5909090909090909, 'x[7] <= 0.811\\ngini = 0.033\\nsamples = 2298\\nvalue = [2260, 38]'),\n"," Text(0.3785112359550562, 0.5, 'x[7] <= 0.39\\ngini = 0.02\\nsamples = 2227\\nvalue = [2205, 22]'),\n"," Text(0.3648174157303371, 0.4090909090909091, 'x[6] <= -0.5\\ngini = 0.007\\nsamples = 1932\\nvalue = [1925, 7]'),\n"," Text(0.3595505617977528, 0.3181818181818182, 'x[5] <= 1.672\\ngini = 0.001\\nsamples = 1455\\nvalue = [1454, 1]'),\n"," Text(0.35814606741573035, 0.22727272727272727, 'gini = 0.0\\nsamples = 1387\\nvalue = [1387, 0]'),\n"," Text(0.3609550561797753, 0.22727272727272727, 'x[0] <= -1.262\\ngini = 0.029\\nsamples = 68\\nvalue = [67, 1]'),\n"," Text(0.3595505617977528, 0.13636363636363635, 'x[3] <= 0.483\\ngini = 0.375\\nsamples = 4\\nvalue = [3, 1]'),\n"," Text(0.35814606741573035, 0.045454545454545456, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.3609550561797753, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.36235955056179775, 0.13636363636363635, 'gini = 0.0\\nsamples = 64\\nvalue = [64, 0]'),\n"," Text(0.37008426966292135, 0.3181818181818182, 'x[6] <= 0.011\\ngini = 0.025\\nsamples = 477\\nvalue = [471, 6]'),\n"," Text(0.36657303370786515, 0.22727272727272727, 'x[5] <= -0.077\\ngini = 0.48\\nsamples = 5\\nvalue = [3, 2]'),\n"," Text(0.3651685393258427, 0.13636363636363635, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.36797752808988765, 0.13636363636363635, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.37359550561797755, 0.22727272727272727, 'x[7] <= 0.28\\ngini = 0.017\\nsamples = 472\\nvalue = [468, 4]'),\n"," Text(0.3707865168539326, 0.13636363636363635, 'x[3] <= 0.483\\ngini = 0.009\\nsamples = 446\\nvalue = [444, 2]'),\n"," Text(0.3693820224719101, 0.045454545454545456, 'gini = 0.0\\nsamples = 360\\nvalue = [360, 0]'),\n"," Text(0.37219101123595505, 0.045454545454545456, 'gini = 0.045\\nsamples = 86\\nvalue = [84, 2]'),\n"," Text(0.37640449438202245, 0.13636363636363635, 'x[7] <= 0.287\\ngini = 0.142\\nsamples = 26\\nvalue = [24, 2]'),\n"," Text(0.375, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.37780898876404495, 0.045454545454545456, 'gini = 0.077\\nsamples = 25\\nvalue = [24, 1]'),\n"," Text(0.3922050561797753, 0.4090909090909091, 'x[0] <= -0.918\\ngini = 0.097\\nsamples = 295\\nvalue = [280, 15]'),\n"," Text(0.3862359550561798, 0.3181818181818182, 'x[7] <= 0.512\\ngini = 0.282\\nsamples = 53\\nvalue = [44, 9]'),\n"," Text(0.38342696629213485, 0.22727272727272727, 'x[7] <= 0.474\\ngini = 0.472\\nsamples = 21\\nvalue = [13, 8]'),\n"," Text(0.38202247191011235, 0.13636363636363635, 'x[0] <= -1.519\\ngini = 0.133\\nsamples = 14\\nvalue = [13, 1]'),\n"," Text(0.3806179775280899, 0.045454545454545456, 'gini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.38342696629213485, 0.045454545454545456, 'gini = 0.0\\nsamples = 12\\nvalue = [12, 0]'),\n"," Text(0.3848314606741573, 0.13636363636363635, 'gini = 0.0\\nsamples = 7\\nvalue = [0, 7]'),\n"," Text(0.3890449438202247, 0.22727272727272727, 'x[5] <= -0.861\\ngini = 0.061\\nsamples = 32\\nvalue = [31, 1]'),\n"," Text(0.38764044943820225, 0.13636363636363635, 'x[5] <= -0.981\\ngini = 0.219\\nsamples = 8\\nvalue = [7, 1]'),\n"," Text(0.3862359550561798, 0.045454545454545456, 'gini = 0.0\\nsamples = 6\\nvalue = [6, 0]'),\n"," Text(0.3890449438202247, 0.045454545454545456, 'gini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.3904494382022472, 0.13636363636363635, 'gini = 0.0\\nsamples = 24\\nvalue = [24, 0]'),\n"," Text(0.3981741573033708, 0.3181818181818182, 'x[5] <= -1.584\\ngini = 0.048\\nsamples = 242\\nvalue = [236, 6]'),\n"," Text(0.3946629213483146, 0.22727272727272727, 'x[7] <= 0.467\\ngini = 0.375\\nsamples = 4\\nvalue = [3, 1]'),\n"," Text(0.39325842696629215, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.3960674157303371, 0.13636363636363635, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.40168539325842695, 0.22727272727272727, 'x[8] <= 1.587\\ngini = 0.041\\nsamples = 238\\nvalue = [233, 5]'),\n"," Text(0.398876404494382, 0.13636363636363635, 'x[2] <= -0.287\\ngini = 0.028\\nsamples = 214\\nvalue = [211, 3]'),\n"," Text(0.39747191011235955, 0.045454545454545456, 'gini = 0.0\\nsamples = 149\\nvalue = [149, 0]'),\n"," Text(0.4002808988764045, 0.045454545454545456, 'gini = 0.088\\nsamples = 65\\nvalue = [62, 3]'),\n"," Text(0.4044943820224719, 0.13636363636363635, 'x[7] <= 0.591\\ngini = 0.153\\nsamples = 24\\nvalue = [22, 2]'),\n"," Text(0.40308988764044945, 0.045454545454545456, 'gini = 0.0\\nsamples = 15\\nvalue = [15, 0]'),\n"," Text(0.4058988764044944, 0.045454545454545456, 'gini = 0.346\\nsamples = 9\\nvalue = [7, 2]'),\n"," Text(0.4143258426966292, 0.5, 'x[6] <= -1.133\\ngini = 0.349\\nsamples = 71\\nvalue = [55, 16]'),\n"," Text(0.40870786516853935, 0.4090909090909091, 'x[7] <= 0.823\\ngini = 0.156\\nsamples = 47\\nvalue = [43, 4]'),\n"," Text(0.4058988764044944, 0.3181818181818182, 'x[0] <= 0.928\\ngini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.4044943820224719, 0.22727272727272727, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.40730337078651685, 0.22727272727272727, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.41151685393258425, 0.3181818181818182, 'x[3] <= -1.149\\ngini = 0.087\\nsamples = 44\\nvalue = [42, 2]'),\n"," Text(0.4101123595505618, 0.22727272727272727, 'x[7] <= 0.883\\ngini = 0.444\\nsamples = 6\\nvalue = [4, 2]'),\n"," Text(0.40870786516853935, 0.13636363636363635, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n"," Text(0.41151685393258425, 0.13636363636363635, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.41292134831460675, 0.22727272727272727, 'gini = 0.0\\nsamples = 38\\nvalue = [38, 0]'),\n"," Text(0.4199438202247191, 0.4090909090909091, 'x[0] <= 0.327\\ngini = 0.5\\nsamples = 24\\nvalue = [12, 12]'),\n"," Text(0.41713483146067415, 0.3181818181818182, 'x[7] <= 0.833\\ngini = 0.375\\nsamples = 12\\nvalue = [9, 3]'),\n"," Text(0.4157303370786517, 0.22727272727272727, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.41853932584269665, 0.22727272727272727, 'x[8] <= 1.587\\ngini = 0.18\\nsamples = 10\\nvalue = [9, 1]'),\n"," Text(0.41713483146067415, 0.13636363636363635, 'gini = 0.0\\nsamples = 8\\nvalue = [8, 0]'),\n"," Text(0.4199438202247191, 0.13636363636363635, 'x[7] <= 0.874\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.41853932584269665, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.42134831460674155, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.42275280898876405, 0.3181818181818182, 'x[5] <= 0.466\\ngini = 0.375\\nsamples = 12\\nvalue = [3, 9]'),\n"," Text(0.42134831460674155, 0.22727272727272727, 'gini = 0.0\\nsamples = 9\\nvalue = [0, 9]'),\n"," Text(0.4241573033707865, 0.22727272727272727, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.425561797752809, 0.5909090909090909, 'x[1] <= -1.436\\ngini = 0.117\\nsamples = 16\\nvalue = [1, 15]'),\n"," Text(0.4241573033707865, 0.5, 'x[6] <= 1.885\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.42275280898876405, 0.4090909090909091, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.425561797752809, 0.4090909090909091, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.42696629213483145, 0.5, 'gini = 0.0\\nsamples = 14\\nvalue = [0, 14]'),\n"," Text(0.4879301264044944, 0.6818181818181818, 'x[7] <= 1.57\\ngini = 0.181\\nsamples = 1255\\nvalue = [126, 1129]'),\n"," Text(0.46014747191011235, 0.5909090909090909, 'x[7] <= 1.335\\ngini = 0.471\\nsamples = 208\\nvalue = [79, 129]'),\n"," Text(0.4476825842696629, 0.5, 'x[6] <= -1.139\\ngini = 0.412\\nsamples = 162\\nvalue = [47, 115]'),\n"," Text(0.4371488764044944, 0.4090909090909091, 'x[0] <= -0.403\\ngini = 0.499\\nsamples = 76\\nvalue = [36, 40]'),\n"," Text(0.4318820224719101, 0.3181818181818182, 'x[7] <= 1.108\\ngini = 0.395\\nsamples = 48\\nvalue = [13, 35]'),\n"," Text(0.42837078651685395, 0.22727272727272727, 'x[7] <= 1.077\\ngini = 0.157\\nsamples = 35\\nvalue = [3, 32]'),\n"," Text(0.425561797752809, 0.13636363636363635, 'x[0] <= -0.747\\ngini = 0.5\\nsamples = 4\\nvalue = [2, 2]'),\n"," Text(0.4241573033707865, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.42696629213483145, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.4311797752808989, 0.13636363636363635, 'x[0] <= -0.489\\ngini = 0.062\\nsamples = 31\\nvalue = [1, 30]'),\n"," Text(0.4297752808988764, 0.045454545454545456, 'gini = 0.0\\nsamples = 30\\nvalue = [0, 30]'),\n"," Text(0.43258426966292135, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.4353932584269663, 0.22727272727272727, 'x[7] <= 1.204\\ngini = 0.355\\nsamples = 13\\nvalue = [10, 3]'),\n"," Text(0.4339887640449438, 0.13636363636363635, 'gini = 0.0\\nsamples = 7\\nvalue = [7, 0]'),\n"," Text(0.43679775280898875, 0.13636363636363635, 'x[5] <= 1.612\\ngini = 0.5\\nsamples = 6\\nvalue = [3, 3]'),\n"," Text(0.4353932584269663, 0.045454545454545456, 'gini = 0.375\\nsamples = 4\\nvalue = [1, 3]'),\n"," Text(0.43820224719101125, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.44241573033707865, 0.3181818181818182, 'x[0] <= -0.103\\ngini = 0.293\\nsamples = 28\\nvalue = [23, 5]'),\n"," Text(0.4410112359550562, 0.22727272727272727, 'gini = 0.0\\nsamples = 7\\nvalue = [7, 0]'),\n"," Text(0.4438202247191011, 0.22727272727272727, 'x[7] <= 1.266\\ngini = 0.363\\nsamples = 21\\nvalue = [16, 5]'),\n"," Text(0.44241573033707865, 0.13636363636363635, 'x[8] <= -0.502\\ngini = 0.32\\nsamples = 20\\nvalue = [16, 4]'),\n"," Text(0.4410112359550562, 0.045454545454545456, 'gini = 0.0\\nsamples = 5\\nvalue = [5, 0]'),\n"," Text(0.4438202247191011, 0.045454545454545456, 'gini = 0.391\\nsamples = 15\\nvalue = [11, 4]'),\n"," Text(0.4452247191011236, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.45821629213483145, 0.4090909090909091, 'x[0] <= 1.137\\ngini = 0.223\\nsamples = 86\\nvalue = [11, 75]'),\n"," Text(0.45435393258426965, 0.3181818181818182, 'x[7] <= 1.156\\ngini = 0.176\\nsamples = 82\\nvalue = [8, 74]'),\n"," Text(0.4508426966292135, 0.22727272727272727, 'x[7] <= 1.099\\ngini = 0.403\\nsamples = 25\\nvalue = [7, 18]'),\n"," Text(0.44803370786516855, 0.13636363636363635, 'x[8] <= 0.112\\ngini = 0.255\\nsamples = 20\\nvalue = [3, 17]'),\n"," Text(0.44662921348314605, 0.045454545454545456, 'gini = 0.444\\nsamples = 9\\nvalue = [3, 6]'),\n"," Text(0.449438202247191, 0.045454545454545456, 'gini = 0.0\\nsamples = 11\\nvalue = [0, 11]'),\n"," Text(0.45365168539325845, 0.13636363636363635, 'x[6] <= -0.386\\ngini = 0.32\\nsamples = 5\\nvalue = [4, 1]'),\n"," Text(0.45224719101123595, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.4550561797752809, 0.045454545454545456, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n"," Text(0.45786516853932585, 0.22727272727272727, 'x[6] <= 0.863\\ngini = 0.034\\nsamples = 57\\nvalue = [1, 56]'),\n"," Text(0.45646067415730335, 0.13636363636363635, 'gini = 0.0\\nsamples = 56\\nvalue = [0, 56]'),\n"," Text(0.4592696629213483, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.46207865168539325, 0.3181818181818182, 'x[7] <= 1.003\\ngini = 0.375\\nsamples = 4\\nvalue = [3, 1]'),\n"," Text(0.4606741573033708, 0.22727272727272727, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.46348314606741575, 0.22727272727272727, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.4726123595505618, 0.5, 'x[1] <= -0.821\\ngini = 0.423\\nsamples = 46\\nvalue = [32, 14]'),\n"," Text(0.46629213483146065, 0.4090909090909091, 'x[7] <= 1.424\\ngini = 0.198\\nsamples = 18\\nvalue = [16, 2]'),\n"," Text(0.4648876404494382, 0.3181818181818182, 'gini = 0.0\\nsamples = 13\\nvalue = [13, 0]'),\n"," Text(0.46769662921348315, 0.3181818181818182, 'x[5] <= -0.619\\ngini = 0.48\\nsamples = 5\\nvalue = [3, 2]'),\n"," Text(0.46629213483146065, 0.22727272727272727, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.4691011235955056, 0.22727272727272727, 'x[0] <= 0.37\\ngini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.46769662921348315, 0.13636363636363635, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.4705056179775281, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.4789325842696629, 0.4090909090909091, 'x[2] <= 1.016\\ngini = 0.49\\nsamples = 28\\nvalue = [16, 12]'),\n"," Text(0.47752808988764045, 0.3181818181818182, 'x[0] <= 0.413\\ngini = 0.496\\nsamples = 22\\nvalue = [10, 12]'),\n"," Text(0.4747191011235955, 0.22727272727272727, 'x[2] <= -0.287\\ngini = 0.391\\nsamples = 15\\nvalue = [4, 11]'),\n"," Text(0.47331460674157305, 0.13636363636363635, 'x[0] <= -0.36\\ngini = 0.49\\nsamples = 7\\nvalue = [4, 3]'),\n"," Text(0.47191011235955055, 0.045454545454545456, 'gini = 0.0\\nsamples = 3\\nvalue = [0, 3]'),\n"," Text(0.4747191011235955, 0.045454545454545456, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n"," Text(0.476123595505618, 0.13636363636363635, 'gini = 0.0\\nsamples = 8\\nvalue = [0, 8]'),\n"," Text(0.4803370786516854, 0.22727272727272727, 'x[1] <= -0.394\\ngini = 0.245\\nsamples = 7\\nvalue = [6, 1]'),\n"," Text(0.4789325842696629, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.48174157303370785, 0.13636363636363635, 'gini = 0.0\\nsamples = 6\\nvalue = [6, 0]'),\n"," Text(0.4803370786516854, 0.3181818181818182, 'gini = 0.0\\nsamples = 6\\nvalue = [6, 0]'),\n"," Text(0.5157127808988764, 0.5909090909090909, 'x[2] <= -0.869\\ngini = 0.086\\nsamples = 1047\\nvalue = [47, 1000]'),\n"," Text(0.49912219101123595, 0.5, 'x[6] <= -1.116\\ngini = 0.195\\nsamples = 348\\nvalue = [38, 310]'),\n"," Text(0.4898174157303371, 0.4090909090909091, 'x[1] <= -0.583\\ngini = 0.28\\nsamples = 202\\nvalue = [34, 168]'),\n"," Text(0.4845505617977528, 0.3181818181818182, 'x[5] <= -1.102\\ngini = 0.104\\nsamples = 127\\nvalue = [7, 120]'),\n"," Text(0.48314606741573035, 0.22727272727272727, 'gini = 0.0\\nsamples = 5\\nvalue = [5, 0]'),\n"," Text(0.4859550561797753, 0.22727272727272727, 'x[5] <= -0.559\\ngini = 0.032\\nsamples = 122\\nvalue = [2, 120]'),\n"," Text(0.4845505617977528, 0.13636363636363635, 'x[8] <= 0.194\\ngini = 0.375\\nsamples = 8\\nvalue = [2, 6]'),\n"," Text(0.48314606741573035, 0.045454545454545456, 'gini = 0.0\\nsamples = 6\\nvalue = [0, 6]'),\n"," Text(0.4859550561797753, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.48735955056179775, 0.13636363636363635, 'gini = 0.0\\nsamples = 114\\nvalue = [0, 114]'),\n"," Text(0.49508426966292135, 0.3181818181818182, 'x[3] <= -0.456\\ngini = 0.461\\nsamples = 75\\nvalue = [27, 48]'),\n"," Text(0.49157303370786515, 0.22727272727272727, 'x[8] <= 0.61\\ngini = 0.142\\nsamples = 13\\nvalue = [1, 12]'),\n"," Text(0.4901685393258427, 0.13636363636363635, 'gini = 0.0\\nsamples = 12\\nvalue = [0, 12]'),\n"," Text(0.49297752808988765, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.49859550561797755, 0.22727272727272727, 'x[0] <= 0.928\\ngini = 0.487\\nsamples = 62\\nvalue = [26, 36]'),\n"," Text(0.4957865168539326, 0.13636363636363635, 'x[8] <= -0.093\\ngini = 0.499\\nsamples = 50\\nvalue = [24, 26]'),\n"," Text(0.4943820224719101, 0.045454545454545456, 'gini = 0.489\\nsamples = 40\\nvalue = [23, 17]'),\n"," Text(0.49719101123595505, 0.045454545454545456, 'gini = 0.18\\nsamples = 10\\nvalue = [1, 9]'),\n"," Text(0.5014044943820225, 0.13636363636363635, 'x[1] <= -0.394\\ngini = 0.278\\nsamples = 12\\nvalue = [2, 10]'),\n"," Text(0.5, 0.045454545454545456, 'gini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n"," Text(0.5028089887640449, 0.045454545454545456, 'gini = 0.0\\nsamples = 9\\nvalue = [0, 9]'),\n"," Text(0.5084269662921348, 0.4090909090909091, 'x[8] <= 2.626\\ngini = 0.053\\nsamples = 146\\nvalue = [4, 142]'),\n"," Text(0.5042134831460674, 0.3181818181818182, 'x[0] <= 1.438\\ngini = 0.029\\nsamples = 138\\nvalue = [2, 136]'),\n"," Text(0.5028089887640449, 0.22727272727272727, 'gini = 0.0\\nsamples = 126\\nvalue = [0, 126]'),\n"," Text(0.5056179775280899, 0.22727272727272727, 'x[3] <= -1.149\\ngini = 0.278\\nsamples = 12\\nvalue = [2, 10]'),\n"," Text(0.5042134831460674, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.5070224719101124, 0.13636363636363635, 'x[1] <= -0.394\\ngini = 0.165\\nsamples = 11\\nvalue = [1, 10]'),\n"," Text(0.5056179775280899, 0.045454545454545456, 'gini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.5084269662921348, 0.045454545454545456, 'gini = 0.0\\nsamples = 9\\nvalue = [0, 9]'),\n"," Text(0.5126404494382022, 0.3181818181818182, 'x[5] <= -1.222\\ngini = 0.375\\nsamples = 8\\nvalue = [2, 6]'),\n"," Text(0.5112359550561798, 0.22727272727272727, 'x[3] <= 0.483\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n"," Text(0.5098314606741573, 0.13636363636363635, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.5126404494382022, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.5140449438202247, 0.22727272727272727, 'gini = 0.0\\nsamples = 5\\nvalue = [0, 5]'),\n"," Text(0.5323033707865169, 0.5, 'x[8] <= 2.627\\ngini = 0.025\\nsamples = 699\\nvalue = [9, 690]'),\n"," Text(0.5252808988764045, 0.4090909090909091, 'x[0] <= 1.526\\ngini = 0.02\\nsamples = 681\\nvalue = [7, 674]'),\n"," Text(0.5210674157303371, 0.3181818181818182, 'x[3] <= 1.293\\ngini = 0.018\\nsamples = 671\\nvalue = [6, 665]'),\n"," Text(0.5168539325842697, 0.22727272727272727, 'x[0] <= -0.192\\ngini = 0.01\\nsamples = 599\\nvalue = [3, 596]'),\n"," Text(0.5154494382022472, 0.13636363636363635, 'gini = 0.0\\nsamples = 357\\nvalue = [0, 357]'),\n"," Text(0.5182584269662921, 0.13636363636363635, 'x[0] <= -0.174\\ngini = 0.024\\nsamples = 242\\nvalue = [3, 239]'),\n"," Text(0.5168539325842697, 0.045454545454545456, 'gini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.5196629213483146, 0.045454545454545456, 'gini = 0.017\\nsamples = 240\\nvalue = [2, 238]'),\n"," Text(0.5252808988764045, 0.22727272727272727, 'x[0] <= -0.529\\ngini = 0.08\\nsamples = 72\\nvalue = [3, 69]'),\n"," Text(0.523876404494382, 0.13636363636363635, 'x[5] <= -1.524\\ngini = 0.219\\nsamples = 24\\nvalue = [3, 21]'),\n"," Text(0.5224719101123596, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.5252808988764045, 0.045454545454545456, 'gini = 0.159\\nsamples = 23\\nvalue = [2, 21]'),\n"," Text(0.526685393258427, 0.13636363636363635, 'gini = 0.0\\nsamples = 48\\nvalue = [0, 48]'),\n"," Text(0.5294943820224719, 0.3181818181818182, 'x[6] <= 0.152\\ngini = 0.18\\nsamples = 10\\nvalue = [1, 9]'),\n"," Text(0.5280898876404494, 0.22727272727272727, 'gini = 0.0\\nsamples = 8\\nvalue = [0, 8]'),\n"," Text(0.5308988764044944, 0.22727272727272727, 'x[5] <= -0.559\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.5294943820224719, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.5323033707865169, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.5393258426966292, 0.4090909090909091, 'x[6] <= -0.5\\ngini = 0.198\\nsamples = 18\\nvalue = [2, 16]'),\n"," Text(0.5379213483146067, 0.3181818181818182, 'x[5] <= 0.888\\ngini = 0.444\\nsamples = 6\\nvalue = [2, 4]'),\n"," Text(0.5365168539325843, 0.22727272727272727, 'x[0] <= 0.026\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n"," Text(0.5351123595505618, 0.13636363636363635, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.5379213483146067, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.5393258426966292, 0.22727272727272727, 'gini = 0.0\\nsamples = 3\\nvalue = [0, 3]'),\n"," Text(0.5407303370786517, 0.3181818181818182, 'gini = 0.0\\nsamples = 12\\nvalue = [0, 12]'),\n"," Text(0.7749736657303371, 0.7727272727272727, 'x[7] <= 0.46\\ngini = 0.255\\nsamples = 26653\\nvalue = [3995, 22658]'),\n"," Text(0.6530898876404494, 0.6818181818181818, 'x[6] <= -0.84\\ngini = 0.405\\nsamples = 12044\\nvalue = [3401, 8643]'),\n"," Text(0.5944522471910112, 0.5909090909090909, 'x[9] <= -0.573\\ngini = 0.449\\nsamples = 2658\\nvalue = [1752, 906]'),\n"," Text(0.5665379213483146, 0.5, 'x[5] <= -1.286\\ngini = 0.285\\nsamples = 1661\\nvalue = [1375, 286]'),\n"," Text(0.5530196629213483, 0.4090909090909091, 'x[6] <= -1.182\\ngini = 0.33\\nsamples = 91\\nvalue = [19, 72]'),\n"," Text(0.5463483146067416, 0.3181818181818182, 'x[8] <= 0.622\\ngini = 0.497\\nsamples = 26\\nvalue = [14, 12]'),\n"," Text(0.5421348314606742, 0.22727272727272727, 'x[8] <= -0.502\\ngini = 0.391\\nsamples = 15\\nvalue = [11, 4]'),\n"," Text(0.5407303370786517, 0.13636363636363635, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.5435393258426966, 0.13636363636363635, 'x[7] <= 0.33\\ngini = 0.26\\nsamples = 13\\nvalue = [11, 2]'),\n"," Text(0.5421348314606742, 0.045454545454545456, 'gini = 0.153\\nsamples = 12\\nvalue = [11, 1]'),\n"," Text(0.5449438202247191, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.550561797752809, 0.22727272727272727, 'x[1] <= 0.301\\ngini = 0.397\\nsamples = 11\\nvalue = [3, 8]'),\n"," Text(0.5491573033707865, 0.13636363636363635, 'x[0] <= -0.747\\ngini = 0.375\\nsamples = 4\\nvalue = [3, 1]'),\n"," Text(0.547752808988764, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.550561797752809, 0.045454545454545456, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.5519662921348315, 0.13636363636363635, 'gini = 0.0\\nsamples = 7\\nvalue = [0, 7]'),\n"," Text(0.5596910112359551, 0.3181818181818182, 'x[3] <= -1.793\\ngini = 0.142\\nsamples = 65\\nvalue = [5, 60]'),\n"," Text(0.5561797752808989, 0.22727272727272727, 'x[0] <= 1.829\\ngini = 0.48\\nsamples = 5\\nvalue = [3, 2]'),\n"," Text(0.5547752808988764, 0.13636363636363635, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.5575842696629213, 0.13636363636363635, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.5632022471910112, 0.22727272727272727, 'x[1] <= -1.55\\ngini = 0.064\\nsamples = 60\\nvalue = [2, 58]'),\n"," Text(0.5603932584269663, 0.13636363636363635, 'x[3] <= 0.483\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.5589887640449438, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.5617977528089888, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.5660112359550562, 0.13636363636363635, 'x[7] <= -0.369\\ngini = 0.034\\nsamples = 58\\nvalue = [1, 57]'),\n"," Text(0.5646067415730337, 0.045454545454545456, 'gini = 0.142\\nsamples = 13\\nvalue = [1, 12]'),\n"," Text(0.5674157303370787, 0.045454545454545456, 'gini = 0.0\\nsamples = 45\\nvalue = [0, 45]'),\n"," Text(0.5800561797752809, 0.4090909090909091, 'x[7] <= 0.23\\ngini = 0.235\\nsamples = 1570\\nvalue = [1356, 214]'),\n"," Text(0.5758426966292135, 0.3181818181818182, 'x[0] <= 1.915\\ngini = 0.153\\nsamples = 1306\\nvalue = [1197, 109]'),\n"," Text(0.574438202247191, 0.22727272727272727, 'x[1] <= 1.52\\ngini = 0.136\\nsamples = 1292\\nvalue = [1197, 95]'),\n"," Text(0.5716292134831461, 0.13636363636363635, 'x[4] <= -0.874\\ngini = 0.121\\nsamples = 1268\\nvalue = [1186, 82]'),\n"," Text(0.5702247191011236, 0.045454545454545456, 'gini = 0.0\\nsamples = 4\\nvalue = [0, 4]'),\n"," Text(0.5730337078651685, 0.045454545454545456, 'gini = 0.116\\nsamples = 1264\\nvalue = [1186, 78]'),\n"," Text(0.577247191011236, 0.13636363636363635, 'x[1] <= 1.856\\ngini = 0.497\\nsamples = 24\\nvalue = [11, 13]'),\n"," Text(0.5758426966292135, 0.045454545454545456, 'gini = 0.0\\nsamples = 9\\nvalue = [0, 9]'),\n"," Text(0.5786516853932584, 0.045454545454545456, 'gini = 0.391\\nsamples = 15\\nvalue = [11, 4]'),\n"," Text(0.577247191011236, 0.22727272727272727, 'gini = 0.0\\nsamples = 14\\nvalue = [0, 14]'),\n"," Text(0.5842696629213483, 0.3181818181818182, 'x[1] <= -1.208\\ngini = 0.479\\nsamples = 264\\nvalue = [159, 105]'),\n"," Text(0.5828651685393258, 0.22727272727272727, 'gini = 0.0\\nsamples = 54\\nvalue = [54, 0]'),\n"," Text(0.5856741573033708, 0.22727272727272727, 'x[6] <= -0.847\\ngini = 0.5\\nsamples = 210\\nvalue = [105, 105]'),\n"," Text(0.5828651685393258, 0.13636363636363635, 'x[5] <= -0.911\\ngini = 0.378\\nsamples = 95\\nvalue = [24, 71]'),\n"," Text(0.5814606741573034, 0.045454545454545456, 'gini = 0.43\\nsamples = 16\\nvalue = [11, 5]'),\n"," Text(0.5842696629213483, 0.045454545454545456, 'gini = 0.275\\nsamples = 79\\nvalue = [13, 66]'),\n"," Text(0.5884831460674157, 0.13636363636363635, 'x[7] <= 0.263\\ngini = 0.416\\nsamples = 115\\nvalue = [81, 34]'),\n"," Text(0.5870786516853933, 0.045454545454545456, 'gini = 0.431\\nsamples = 35\\nvalue = [11, 24]'),\n"," Text(0.5898876404494382, 0.045454545454545456, 'gini = 0.219\\nsamples = 80\\nvalue = [70, 10]'),\n"," Text(0.6223665730337079, 0.5, 'x[6] <= -1.181\\ngini = 0.47\\nsamples = 997\\nvalue = [377, 620]'),\n"," Text(0.6081460674157303, 0.4090909090909091, 'x[5] <= -0.047\\ngini = 0.461\\nsamples = 570\\nvalue = [365, 205]'),\n"," Text(0.5976123595505618, 0.3181818181818182, 'x[9] <= 1.693\\ngini = 0.319\\nsamples = 406\\nvalue = [325, 81]'),\n"," Text(0.5926966292134831, 0.22727272727272727, 'x[9] <= 0.362\\ngini = 0.218\\nsamples = 354\\nvalue = [310, 44]'),\n"," Text(0.5912921348314607, 0.13636363636363635, 'gini = 0.0\\nsamples = 9\\nvalue = [0, 9]'),\n"," Text(0.5941011235955056, 0.13636363636363635, 'x[5] <= -1.307\\ngini = 0.182\\nsamples = 345\\nvalue = [310, 35]'),\n"," Text(0.5926966292134831, 0.045454545454545456, 'gini = 0.496\\nsamples = 11\\nvalue = [5, 6]'),\n"," Text(0.5955056179775281, 0.045454545454545456, 'gini = 0.159\\nsamples = 334\\nvalue = [305, 29]'),\n"," Text(0.6025280898876404, 0.22727272727272727, 'x[1] <= -1.574\\ngini = 0.411\\nsamples = 52\\nvalue = [15, 37]'),\n"," Text(0.5997191011235955, 0.13636363636363635, 'x[0] <= 0.37\\ngini = 0.48\\nsamples = 15\\nvalue = [9, 6]'),\n"," Text(0.598314606741573, 0.045454545454545456, 'gini = 0.198\\nsamples = 9\\nvalue = [8, 1]'),\n"," Text(0.601123595505618, 0.045454545454545456, 'gini = 0.278\\nsamples = 6\\nvalue = [1, 5]'),\n"," Text(0.6053370786516854, 0.13636363636363635, 'x[8] <= 1.587\\ngini = 0.272\\nsamples = 37\\nvalue = [6, 31]'),\n"," Text(0.6039325842696629, 0.045454545454545456, 'gini = 0.202\\nsamples = 35\\nvalue = [4, 31]'),\n"," Text(0.6067415730337079, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.6186797752808989, 0.3181818181818182, 'x[8] <= 1.18\\ngini = 0.369\\nsamples = 164\\nvalue = [40, 124]'),\n"," Text(0.6137640449438202, 0.22727272727272727, 'x[5] <= 0.306\\ngini = 0.328\\nsamples = 155\\nvalue = [32, 123]'),\n"," Text(0.6109550561797753, 0.13636363636363635, 'x[5] <= 0.282\\ngini = 0.485\\nsamples = 41\\nvalue = [17, 24]'),\n"," Text(0.6095505617977528, 0.045454545454545456, 'gini = 0.159\\nsamples = 23\\nvalue = [2, 21]'),\n"," Text(0.6123595505617978, 0.045454545454545456, 'gini = 0.278\\nsamples = 18\\nvalue = [15, 3]'),\n"," Text(0.6165730337078652, 0.13636363636363635, 'x[5] <= 1.247\\ngini = 0.229\\nsamples = 114\\nvalue = [15, 99]'),\n"," Text(0.6151685393258427, 0.045454545454545456, 'gini = 0.115\\nsamples = 82\\nvalue = [5, 77]'),\n"," Text(0.6179775280898876, 0.045454545454545456, 'gini = 0.43\\nsamples = 32\\nvalue = [10, 22]'),\n"," Text(0.6235955056179775, 0.22727272727272727, 'x[1] <= -1.089\\ngini = 0.198\\nsamples = 9\\nvalue = [8, 1]'),\n"," Text(0.6221910112359551, 0.13636363636363635, 'x[5] <= 0.828\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.6207865168539326, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.6235955056179775, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.625, 0.13636363636363635, 'gini = 0.0\\nsamples = 7\\nvalue = [7, 0]'),\n"," Text(0.6365870786516854, 0.4090909090909091, 'x[8] <= 1.219\\ngini = 0.055\\nsamples = 427\\nvalue = [12, 415]'),\n"," Text(0.6327247191011236, 0.3181818181818182, 'x[3] <= -1.91\\ngini = 0.038\\nsamples = 415\\nvalue = [8, 407]'),\n"," Text(0.6292134831460674, 0.22727272727272727, 'x[7] <= -0.237\\ngini = 0.375\\nsamples = 8\\nvalue = [2, 6]'),\n"," Text(0.6278089887640449, 0.13636363636363635, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.6306179775280899, 0.13636363636363635, 'gini = 0.0\\nsamples = 6\\nvalue = [0, 6]'),\n"," Text(0.6362359550561798, 0.22727272727272727, 'x[5] <= -1.63\\ngini = 0.029\\nsamples = 407\\nvalue = [6, 401]'),\n"," Text(0.6334269662921348, 0.13636363636363635, 'x[5] <= -1.655\\ngini = 0.375\\nsamples = 4\\nvalue = [1, 3]'),\n"," Text(0.6320224719101124, 0.045454545454545456, 'gini = 0.0\\nsamples = 3\\nvalue = [0, 3]'),\n"," Text(0.6348314606741573, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.6390449438202247, 0.13636363636363635, 'x[6] <= -0.841\\ngini = 0.025\\nsamples = 403\\nvalue = [5, 398]'),\n"," Text(0.6376404494382022, 0.045454545454545456, 'gini = 0.0\\nsamples = 290\\nvalue = [0, 290]'),\n"," Text(0.6404494382022472, 0.045454545454545456, 'gini = 0.085\\nsamples = 113\\nvalue = [5, 108]'),\n"," Text(0.6404494382022472, 0.3181818181818182, 'x[3] <= 1.29\\ngini = 0.444\\nsamples = 12\\nvalue = [4, 8]'),\n"," Text(0.6390449438202247, 0.22727272727272727, 'gini = 0.0\\nsamples = 8\\nvalue = [0, 8]'),\n"," Text(0.6418539325842697, 0.22727272727272727, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n"," Text(0.7117275280898876, 0.5909090909090909, 'x[9] <= -0.579\\ngini = 0.29\\nsamples = 9386\\nvalue = [1649, 7737]'),\n"," Text(0.680126404494382, 0.5, 'x[1] <= -0.22\\ngini = 0.456\\nsamples = 3624\\nvalue = [1276, 2348]'),\n"," Text(0.6622191011235955, 0.4090909090909091, 'x[6] <= 1.217\\ngini = 0.486\\nsamples = 1274\\nvalue = [742, 532]'),\n"," Text(0.6530898876404494, 0.3181818181818182, 'x[1] <= -1.608\\ngini = 0.452\\nsamples = 1122\\nvalue = [735, 387]'),\n"," Text(0.6474719101123596, 0.22727272727272727, 'x[5] <= -1.649\\ngini = 0.198\\nsamples = 297\\nvalue = [264, 33]'),\n"," Text(0.6446629213483146, 0.13636363636363635, 'x[6] <= 0.823\\ngini = 0.198\\nsamples = 9\\nvalue = [1, 8]'),\n"," Text(0.6432584269662921, 0.045454545454545456, 'gini = 0.0\\nsamples = 8\\nvalue = [0, 8]'),\n"," Text(0.6460674157303371, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.6502808988764045, 0.13636363636363635, 'x[0] <= 1.786\\ngini = 0.159\\nsamples = 288\\nvalue = [263, 25]'),\n"," Text(0.648876404494382, 0.045454545454545456, 'gini = 0.131\\nsamples = 283\\nvalue = [263, 20]'),\n"," Text(0.651685393258427, 0.045454545454545456, 'gini = 0.0\\nsamples = 5\\nvalue = [0, 5]'),\n"," Text(0.6587078651685393, 0.22727272727272727, 'x[6] <= 0.524\\ngini = 0.49\\nsamples = 825\\nvalue = [471, 354]'),\n"," Text(0.6558988764044944, 0.13636363636363635, 'x[5] <= 0.164\\ngini = 0.452\\nsamples = 573\\nvalue = [375, 198]'),\n"," Text(0.6544943820224719, 0.045454545454545456, 'gini = 0.475\\nsamples = 219\\nvalue = [85, 134]'),\n"," Text(0.6573033707865169, 0.045454545454545456, 'gini = 0.296\\nsamples = 354\\nvalue = [290, 64]'),\n"," Text(0.6615168539325843, 0.13636363636363635, 'x[5] <= -1.028\\ngini = 0.472\\nsamples = 252\\nvalue = [96, 156]'),\n"," Text(0.6601123595505618, 0.045454545454545456, 'gini = 0.259\\nsamples = 72\\nvalue = [61, 11]'),\n"," Text(0.6629213483146067, 0.045454545454545456, 'gini = 0.313\\nsamples = 180\\nvalue = [35, 145]'),\n"," Text(0.6713483146067416, 0.3181818181818182, 'x[8] <= 1.932\\ngini = 0.088\\nsamples = 152\\nvalue = [7, 145]'),\n"," Text(0.6699438202247191, 0.22727272727272727, 'x[1] <= -1.59\\ngini = 0.076\\nsamples = 151\\nvalue = [6, 145]'),\n"," Text(0.6671348314606742, 0.13636363636363635, 'x[5] <= -1.584\\ngini = 0.375\\nsamples = 12\\nvalue = [3, 9]'),\n"," Text(0.6657303370786517, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.6685393258426966, 0.045454545454545456, 'gini = 0.298\\nsamples = 11\\nvalue = [2, 9]'),\n"," Text(0.672752808988764, 0.13636363636363635, 'x[3] <= -1.908\\ngini = 0.042\\nsamples = 139\\nvalue = [3, 136]'),\n"," Text(0.6713483146067416, 0.045454545454545456, 'gini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.6741573033707865, 0.045454545454545456, 'gini = 0.029\\nsamples = 136\\nvalue = [2, 134]'),\n"," Text(0.672752808988764, 0.22727272727272727, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.6980337078651685, 0.4090909090909091, 'x[6] <= 0.524\\ngini = 0.351\\nsamples = 2350\\nvalue = [534, 1816]'),\n"," Text(0.6867977528089888, 0.3181818181818182, 'x[5] <= 0.164\\ngini = 0.472\\nsamples = 1098\\nvalue = [418, 680]'),\n"," Text(0.6811797752808989, 0.22727272727272727, 'x[6] <= 0.516\\ngini = 0.293\\nsamples = 607\\nvalue = [108, 499]'),\n"," Text(0.6783707865168539, 0.13636363636363635, 'x[7] <= -0.392\\ngini = 0.065\\nsamples = 449\\nvalue = [15, 434]'),\n"," Text(0.6769662921348315, 0.045454545454545456, 'gini = 0.283\\nsamples = 41\\nvalue = [7, 34]'),\n"," Text(0.6797752808988764, 0.045454545454545456, 'gini = 0.038\\nsamples = 408\\nvalue = [8, 400]'),\n"," Text(0.6839887640449438, 0.13636363636363635, 'x[0] <= 1.62\\ngini = 0.484\\nsamples = 158\\nvalue = [93, 65]'),\n"," Text(0.6825842696629213, 0.045454545454545456, 'gini = 0.449\\nsamples = 141\\nvalue = [93, 48]'),\n"," Text(0.6853932584269663, 0.045454545454545456, 'gini = 0.0\\nsamples = 17\\nvalue = [0, 17]'),\n"," Text(0.6924157303370787, 0.22727272727272727, 'x[7] <= 0.13\\ngini = 0.465\\nsamples = 491\\nvalue = [310, 181]'),\n"," Text(0.6896067415730337, 0.13636363636363635, 'x[0] <= -1.141\\ngini = 0.37\\nsamples = 339\\nvalue = [256, 83]'),\n"," Text(0.6882022471910112, 0.045454545454545456, 'gini = 0.358\\nsamples = 30\\nvalue = [7, 23]'),\n"," Text(0.6910112359550562, 0.045454545454545456, 'gini = 0.313\\nsamples = 309\\nvalue = [249, 60]'),\n"," Text(0.6952247191011236, 0.13636363636363635, 'x[2] <= -0.778\\ngini = 0.458\\nsamples = 152\\nvalue = [54, 98]'),\n"," Text(0.6938202247191011, 0.045454545454545456, 'gini = 0.449\\nsamples = 47\\nvalue = [31, 16]'),\n"," Text(0.6966292134831461, 0.045454545454545456, 'gini = 0.342\\nsamples = 105\\nvalue = [23, 82]'),\n"," Text(0.7092696629213483, 0.3181818181818182, 'x[5] <= -1.402\\ngini = 0.168\\nsamples = 1252\\nvalue = [116, 1136]'),\n"," Text(0.7036516853932584, 0.22727272727272727, 'x[6] <= 0.863\\ngini = 0.39\\nsamples = 173\\nvalue = [46, 127]'),\n"," Text(0.7008426966292135, 0.13636363636363635, 'x[6] <= 0.859\\ngini = 0.499\\nsamples = 81\\nvalue = [39, 42]'),\n"," Text(0.699438202247191, 0.045454545454545456, 'gini = 0.0\\nsamples = 26\\nvalue = [0, 26]'),\n"," Text(0.702247191011236, 0.045454545454545456, 'gini = 0.413\\nsamples = 55\\nvalue = [39, 16]'),\n"," Text(0.7064606741573034, 0.13636363636363635, 'x[7] <= -0.407\\ngini = 0.141\\nsamples = 92\\nvalue = [7, 85]'),\n"," Text(0.7050561797752809, 0.045454545454545456, 'gini = 0.48\\nsamples = 5\\nvalue = [3, 2]'),\n"," Text(0.7078651685393258, 0.045454545454545456, 'gini = 0.088\\nsamples = 87\\nvalue = [4, 83]'),\n"," Text(0.7148876404494382, 0.22727272727272727, 'x[6] <= 1.204\\ngini = 0.121\\nsamples = 1079\\nvalue = [70, 1009]'),\n"," Text(0.7120786516853933, 0.13636363636363635, 'x[6] <= 1.203\\ngini = 0.19\\nsamples = 563\\nvalue = [60, 503]'),\n"," Text(0.7106741573033708, 0.045454545454545456, 'gini = 0.073\\nsamples = 398\\nvalue = [15, 383]'),\n"," Text(0.7134831460674157, 0.045454545454545456, 'gini = 0.397\\nsamples = 165\\nvalue = [45, 120]'),\n"," Text(0.7176966292134831, 0.13636363636363635, 'x[3] <= 1.286\\ngini = 0.038\\nsamples = 516\\nvalue = [10, 506]'),\n"," Text(0.7162921348314607, 0.045454545454545456, 'gini = 0.02\\nsamples = 394\\nvalue = [4, 390]'),\n"," Text(0.7191011235955056, 0.045454545454545456, 'gini = 0.094\\nsamples = 122\\nvalue = [6, 116]'),\n"," Text(0.7433286516853933, 0.5, 'x[1] <= -1.61\\ngini = 0.121\\nsamples = 5762\\nvalue = [373, 5389]'),\n"," Text(0.7296348314606742, 0.4090909090909091, 'x[9] <= 1.659\\ngini = 0.48\\nsamples = 255\\nvalue = [102, 153]'),\n"," Text(0.7247191011235955, 0.3181818181818182, 'x[6] <= 1.22\\ngini = 0.489\\nsamples = 176\\nvalue = [101, 75]'),\n"," Text(0.7219101123595506, 0.22727272727272727, 'x[9] <= 0.506\\ngini = 0.428\\nsamples = 145\\nvalue = [100, 45]'),\n"," Text(0.7205056179775281, 0.13636363636363635, 'gini = 0.0\\nsamples = 13\\nvalue = [0, 13]'),\n"," Text(0.723314606741573, 0.13636363636363635, 'x[9] <= 0.568\\ngini = 0.367\\nsamples = 132\\nvalue = [100, 32]'),\n"," Text(0.7219101123595506, 0.045454545454545456, 'gini = 0.171\\nsamples = 85\\nvalue = [77, 8]'),\n"," Text(0.7247191011235955, 0.045454545454545456, 'gini = 0.5\\nsamples = 47\\nvalue = [23, 24]'),\n"," Text(0.7275280898876404, 0.22727272727272727, 'x[5] <= -1.473\\ngini = 0.062\\nsamples = 31\\nvalue = [1, 30]'),\n"," Text(0.726123595505618, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.7289325842696629, 0.13636363636363635, 'gini = 0.0\\nsamples = 30\\nvalue = [0, 30]'),\n"," Text(0.7345505617977528, 0.3181818181818182, 'x[7] <= -0.342\\ngini = 0.025\\nsamples = 79\\nvalue = [1, 78]'),\n"," Text(0.7331460674157303, 0.22727272727272727, 'x[7] <= -0.349\\ngini = 0.198\\nsamples = 9\\nvalue = [1, 8]'),\n"," Text(0.7317415730337079, 0.13636363636363635, 'gini = 0.0\\nsamples = 8\\nvalue = [0, 8]'),\n"," Text(0.7345505617977528, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.7359550561797753, 0.22727272727272727, 'gini = 0.0\\nsamples = 70\\nvalue = [0, 70]'),\n"," Text(0.7570224719101124, 0.4090909090909091, 'x[6] <= -0.159\\ngini = 0.094\\nsamples = 5507\\nvalue = [271, 5236]'),\n"," Text(0.7457865168539326, 0.3181818181818182, 'x[6] <= -0.161\\ngini = 0.266\\nsamples = 885\\nvalue = [140, 745]'),\n"," Text(0.7401685393258427, 0.22727272727272727, 'x[5] <= 1.491\\ngini = 0.122\\nsamples = 704\\nvalue = [46, 658]'),\n"," Text(0.7373595505617978, 0.13636363636363635, 'x[7] <= -0.402\\ngini = 0.007\\nsamples = 600\\nvalue = [2, 598]'),\n"," Text(0.7359550561797753, 0.045454545454545456, 'gini = 0.051\\nsamples = 77\\nvalue = [2, 75]'),\n"," Text(0.7387640449438202, 0.045454545454545456, 'gini = 0.0\\nsamples = 523\\nvalue = [0, 523]'),\n"," Text(0.7429775280898876, 0.13636363636363635, 'x[6] <= -0.498\\ngini = 0.488\\nsamples = 104\\nvalue = [44, 60]'),\n"," Text(0.7415730337078652, 0.045454545454545456, 'gini = 0.467\\nsamples = 70\\nvalue = [44, 26]'),\n"," Text(0.7443820224719101, 0.045454545454545456, 'gini = 0.0\\nsamples = 34\\nvalue = [0, 34]'),\n"," Text(0.7514044943820225, 0.22727272727272727, 'x[5] <= 0.108\\ngini = 0.499\\nsamples = 181\\nvalue = [94, 87]'),\n"," Text(0.7485955056179775, 0.13636363636363635, 'x[8] <= 0.518\\ngini = 0.173\\nsamples = 73\\nvalue = [7, 66]'),\n"," Text(0.7471910112359551, 0.045454545454545456, 'gini = 0.114\\nsamples = 66\\nvalue = [4, 62]'),\n"," Text(0.75, 0.045454545454545456, 'gini = 0.49\\nsamples = 7\\nvalue = [3, 4]'),\n"," Text(0.7542134831460674, 0.13636363636363635, 'x[9] <= 0.529\\ngini = 0.313\\nsamples = 108\\nvalue = [87, 21]'),\n"," Text(0.7528089887640449, 0.045454545454545456, 'gini = 0.0\\nsamples = 6\\nvalue = [0, 6]'),\n"," Text(0.7556179775280899, 0.045454545454545456, 'gini = 0.251\\nsamples = 102\\nvalue = [87, 15]'),\n"," Text(0.7682584269662921, 0.3181818181818182, 'x[8] <= 2.62\\ngini = 0.055\\nsamples = 4622\\nvalue = [131, 4491]'),\n"," Text(0.7626404494382022, 0.22727272727272727, 'x[9] <= 1.648\\ngini = 0.053\\nsamples = 4608\\nvalue = [125, 4483]'),\n"," Text(0.7598314606741573, 0.13636363636363635, 'x[9] <= 1.648\\ngini = 0.082\\nsamples = 2745\\nvalue = [118, 2627]'),\n"," Text(0.7584269662921348, 0.045454545454545456, 'gini = 0.063\\nsamples = 2651\\nvalue = [86, 2565]'),\n"," Text(0.7612359550561798, 0.045454545454545456, 'gini = 0.449\\nsamples = 94\\nvalue = [32, 62]'),\n"," Text(0.7654494382022472, 0.13636363636363635, 'x[1] <= -1.26\\ngini = 0.007\\nsamples = 1863\\nvalue = [7, 1856]'),\n"," Text(0.7640449438202247, 0.045454545454545456, 'gini = 0.077\\nsamples = 50\\nvalue = [2, 48]'),\n"," Text(0.7668539325842697, 0.045454545454545456, 'gini = 0.006\\nsamples = 1813\\nvalue = [5, 1808]'),\n"," Text(0.773876404494382, 0.22727272727272727, 'x[9] <= 1.091\\ngini = 0.49\\nsamples = 14\\nvalue = [6, 8]'),\n"," Text(0.7710674157303371, 0.13636363636363635, 'x[5] <= 1.25\\ngini = 0.32\\nsamples = 5\\nvalue = [4, 1]'),\n"," Text(0.7696629213483146, 0.045454545454545456, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n"," Text(0.7724719101123596, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.776685393258427, 0.13636363636363635, 'x[7] <= -0.345\\ngini = 0.346\\nsamples = 9\\nvalue = [2, 7]'),\n"," Text(0.7752808988764045, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.7780898876404494, 0.045454545454545456, 'gini = 0.0\\nsamples = 7\\nvalue = [0, 7]'),\n"," Text(0.8968574438202247, 0.6818181818181818, 'x[7] <= 0.996\\ngini = 0.078\\nsamples = 14609\\nvalue = [594, 14015]'),\n"," Text(0.8376931179775281, 0.5909090909090909, 'x[1] <= -1.606\\ngini = 0.209\\nsamples = 3400\\nvalue = [403, 2997]'),\n"," Text(0.8031952247191011, 0.5, 'x[7] <= 0.648\\ngini = 0.498\\nsamples = 225\\nvalue = [106, 119]'),\n"," Text(0.7900280898876404, 0.4090909090909091, 'x[7] <= 0.522\\ngini = 0.378\\nsamples = 75\\nvalue = [56, 19]'),\n"," Text(0.7837078651685393, 0.3181818181818182, 'x[4] <= 0.403\\ngini = 0.48\\nsamples = 25\\nvalue = [10, 15]'),\n"," Text(0.7823033707865169, 0.22727272727272727, 'gini = 0.0\\nsamples = 8\\nvalue = [0, 8]'),\n"," Text(0.7851123595505618, 0.22727272727272727, 'x[7] <= 0.5\\ngini = 0.484\\nsamples = 17\\nvalue = [10, 7]'),\n"," Text(0.7823033707865169, 0.13636363636363635, 'x[9] <= 2.204\\ngini = 0.32\\nsamples = 10\\nvalue = [8, 2]'),\n"," Text(0.7808988764044944, 0.045454545454545456, 'gini = 0.0\\nsamples = 8\\nvalue = [8, 0]'),\n"," Text(0.7837078651685393, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.7879213483146067, 0.13636363636363635, 'x[9] <= 0.442\\ngini = 0.408\\nsamples = 7\\nvalue = [2, 5]'),\n"," Text(0.7865168539325843, 0.045454545454545456, 'gini = 0.278\\nsamples = 6\\nvalue = [1, 5]'),\n"," Text(0.7893258426966292, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.7963483146067416, 0.3181818181818182, 'x[6] <= 1.374\\ngini = 0.147\\nsamples = 50\\nvalue = [46, 4]'),\n"," Text(0.7949438202247191, 0.22727272727272727, 'x[5] <= -0.981\\ngini = 0.042\\nsamples = 47\\nvalue = [46, 1]'),\n"," Text(0.7935393258426966, 0.13636363636363635, 'x[7] <= 0.572\\ngini = 0.219\\nsamples = 8\\nvalue = [7, 1]'),\n"," Text(0.7921348314606742, 0.045454545454545456, 'gini = 0.0\\nsamples = 6\\nvalue = [6, 0]'),\n"," Text(0.7949438202247191, 0.045454545454545456, 'gini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.7963483146067416, 0.13636363636363635, 'gini = 0.0\\nsamples = 39\\nvalue = [39, 0]'),\n"," Text(0.797752808988764, 0.22727272727272727, 'gini = 0.0\\nsamples = 3\\nvalue = [0, 3]'),\n"," Text(0.8163623595505618, 0.4090909090909091, 'x[9] <= -0.578\\ngini = 0.444\\nsamples = 150\\nvalue = [50, 100]'),\n"," Text(0.8075842696629213, 0.3181818181818182, 'x[7] <= 0.784\\ngini = 0.5\\nsamples = 80\\nvalue = [40, 40]'),\n"," Text(0.8019662921348315, 0.22727272727272727, 'x[5] <= -0.981\\ngini = 0.269\\nsamples = 25\\nvalue = [21, 4]'),\n"," Text(0.7991573033707865, 0.13636363636363635, 'x[6] <= 1.033\\ngini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.797752808988764, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.800561797752809, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.8047752808988764, 0.13636363636363635, 'x[0] <= 0.928\\ngini = 0.165\\nsamples = 22\\nvalue = [20, 2]'),\n"," Text(0.8033707865168539, 0.045454545454545456, 'gini = 0.095\\nsamples = 20\\nvalue = [19, 1]'),\n"," Text(0.8061797752808989, 0.045454545454545456, 'gini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.8132022471910112, 0.22727272727272727, 'x[8] <= 0.031\\ngini = 0.452\\nsamples = 55\\nvalue = [19, 36]'),\n"," Text(0.8103932584269663, 0.13636363636363635, 'x[6] <= -0.769\\ngini = 0.498\\nsamples = 34\\nvalue = [16, 18]'),\n"," Text(0.8089887640449438, 0.045454545454545456, 'gini = 0.401\\nsamples = 18\\nvalue = [13, 5]'),\n"," Text(0.8117977528089888, 0.045454545454545456, 'gini = 0.305\\nsamples = 16\\nvalue = [3, 13]'),\n"," Text(0.8160112359550562, 0.13636363636363635, 'x[3] <= -1.934\\ngini = 0.245\\nsamples = 21\\nvalue = [3, 18]'),\n"," Text(0.8146067415730337, 0.045454545454545456, 'gini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n"," Text(0.8174157303370787, 0.045454545454545456, 'gini = 0.105\\nsamples = 18\\nvalue = [1, 17]'),\n"," Text(0.8251404494382022, 0.3181818181818182, 'x[3] <= -1.914\\ngini = 0.245\\nsamples = 70\\nvalue = [10, 60]'),\n"," Text(0.8202247191011236, 0.22727272727272727, 'x[0] <= -0.575\\ngini = 0.375\\nsamples = 8\\nvalue = [6, 2]'),\n"," Text(0.8188202247191011, 0.13636363636363635, 'gini = 0.0\\nsamples = 5\\nvalue = [5, 0]'),\n"," Text(0.8216292134831461, 0.13636363636363635, 'x[7] <= 0.867\\ngini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.8202247191011236, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.8230337078651685, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.8300561797752809, 0.22727272727272727, 'x[6] <= 1.198\\ngini = 0.121\\nsamples = 62\\nvalue = [4, 58]'),\n"," Text(0.827247191011236, 0.13636363636363635, 'x[5] <= 1.608\\ngini = 0.036\\nsamples = 54\\nvalue = [1, 53]'),\n"," Text(0.8258426966292135, 0.045454545454545456, 'gini = 0.0\\nsamples = 50\\nvalue = [0, 50]'),\n"," Text(0.8286516853932584, 0.045454545454545456, 'gini = 0.375\\nsamples = 4\\nvalue = [1, 3]'),\n"," Text(0.8328651685393258, 0.13636363636363635, 'x[5] <= 0.345\\ngini = 0.469\\nsamples = 8\\nvalue = [3, 5]'),\n"," Text(0.8314606741573034, 0.045454545454545456, 'gini = 0.375\\nsamples = 4\\nvalue = [3, 1]'),\n"," Text(0.8342696629213483, 0.045454545454545456, 'gini = 0.0\\nsamples = 4\\nvalue = [0, 4]'),\n"," Text(0.8721910112359551, 0.5, 'x[9] <= -0.578\\ngini = 0.17\\nsamples = 3175\\nvalue = [297, 2878]'),\n"," Text(0.8535814606741573, 0.4090909090909091, 'x[6] <= -0.84\\ngini = 0.268\\nsamples = 1474\\nvalue = [235, 1239]'),\n"," Text(0.8433988764044944, 0.3181818181818182, 'x[6] <= -0.843\\ngini = 0.453\\nsamples = 326\\nvalue = [113, 213]'),\n"," Text(0.8398876404494382, 0.22727272727272727, 'x[6] <= -1.181\\ngini = 0.243\\nsamples = 184\\nvalue = [26, 158]'),\n"," Text(0.8384831460674157, 0.13636363636363635, 'x[5] <= -0.076\\ngini = 0.453\\nsamples = 75\\nvalue = [26, 49]'),\n"," Text(0.8370786516853933, 0.045454545454545456, 'gini = 0.496\\nsamples = 44\\nvalue = [24, 20]'),\n"," Text(0.8398876404494382, 0.045454545454545456, 'gini = 0.121\\nsamples = 31\\nvalue = [2, 29]'),\n"," Text(0.8412921348314607, 0.13636363636363635, 'gini = 0.0\\nsamples = 109\\nvalue = [0, 109]'),\n"," Text(0.8469101123595506, 0.22727272727272727, 'x[0] <= -0.832\\ngini = 0.475\\nsamples = 142\\nvalue = [87, 55]'),\n"," Text(0.8441011235955056, 0.13636363636363635, 'x[7] <= 0.89\\ngini = 0.403\\nsamples = 50\\nvalue = [14, 36]'),\n"," Text(0.8426966292134831, 0.045454545454545456, 'gini = 0.346\\nsamples = 45\\nvalue = [10, 35]'),\n"," Text(0.8455056179775281, 0.045454545454545456, 'gini = 0.32\\nsamples = 5\\nvalue = [4, 1]'),\n"," Text(0.8497191011235955, 0.13636363636363635, 'x[1] <= -0.583\\ngini = 0.328\\nsamples = 92\\nvalue = [73, 19]'),\n"," Text(0.848314606741573, 0.045454545454545456, 'gini = 0.492\\nsamples = 16\\nvalue = [7, 9]'),\n"," Text(0.851123595505618, 0.045454545454545456, 'gini = 0.229\\nsamples = 76\\nvalue = [66, 10]'),\n"," Text(0.8637640449438202, 0.3181818181818182, 'x[2] <= -0.868\\ngini = 0.19\\nsamples = 1148\\nvalue = [122, 1026]'),\n"," Text(0.8581460674157303, 0.22727272727272727, 'x[0] <= -0.185\\ngini = 0.318\\nsamples = 398\\nvalue = [79, 319]'),\n"," Text(0.8553370786516854, 0.13636363636363635, 'x[7] <= 0.596\\ngini = 0.488\\nsamples = 97\\nvalue = [41, 56]'),\n"," Text(0.8539325842696629, 0.045454545454545456, 'gini = 0.091\\nsamples = 21\\nvalue = [20, 1]'),\n"," Text(0.8567415730337079, 0.045454545454545456, 'gini = 0.4\\nsamples = 76\\nvalue = [21, 55]'),\n"," Text(0.8609550561797753, 0.13636363636363635, 'x[8] <= 1.219\\ngini = 0.221\\nsamples = 301\\nvalue = [38, 263]'),\n"," Text(0.8595505617977528, 0.045454545454545456, 'gini = 0.189\\nsamples = 284\\nvalue = [30, 254]'),\n"," Text(0.8623595505617978, 0.045454545454545456, 'gini = 0.498\\nsamples = 17\\nvalue = [8, 9]'),\n"," Text(0.8693820224719101, 0.22727272727272727, 'x[2] <= 1.465\\ngini = 0.108\\nsamples = 750\\nvalue = [43, 707]'),\n"," Text(0.8665730337078652, 0.13636363636363635, 'x[2] <= 0.297\\ngini = 0.05\\nsamples = 503\\nvalue = [13, 490]'),\n"," Text(0.8651685393258427, 0.045454545454545456, 'gini = 0.0\\nsamples = 283\\nvalue = [0, 283]'),\n"," Text(0.8679775280898876, 0.045454545454545456, 'gini = 0.111\\nsamples = 220\\nvalue = [13, 207]'),\n"," Text(0.8721910112359551, 0.13636363636363635, 'x[0] <= -0.45\\ngini = 0.213\\nsamples = 247\\nvalue = [30, 217]'),\n"," Text(0.8707865168539326, 0.045454545454545456, 'gini = 0.121\\nsamples = 216\\nvalue = [14, 202]'),\n"," Text(0.8735955056179775, 0.045454545454545456, 'gini = 0.499\\nsamples = 31\\nvalue = [16, 15]'),\n"," Text(0.8908005617977528, 0.4090909090909091, 'x[6] <= -1.181\\ngini = 0.07\\nsamples = 1701\\nvalue = [62, 1639]'),\n"," Text(0.8855337078651685, 0.3181818181818182, 'x[8] <= 0.528\\ngini = 0.249\\nsamples = 158\\nvalue = [23, 135]'),\n"," Text(0.8806179775280899, 0.22727272727272727, 'x[0] <= -0.02\\ngini = 0.172\\nsamples = 137\\nvalue = [13, 124]'),\n"," Text(0.8778089887640449, 0.13636363636363635, 'x[5] <= -1.266\\ngini = 0.021\\nsamples = 96\\nvalue = [1, 95]'),\n"," Text(0.8764044943820225, 0.045454545454545456, 'gini = 0.278\\nsamples = 6\\nvalue = [1, 5]'),\n"," Text(0.8792134831460674, 0.045454545454545456, 'gini = 0.0\\nsamples = 90\\nvalue = [0, 90]'),\n"," Text(0.8834269662921348, 0.13636363636363635, 'x[5] <= -0.499\\ngini = 0.414\\nsamples = 41\\nvalue = [12, 29]'),\n"," Text(0.8820224719101124, 0.045454545454545456, 'gini = 0.5\\nsamples = 22\\nvalue = [11, 11]'),\n"," Text(0.8848314606741573, 0.045454545454545456, 'gini = 0.1\\nsamples = 19\\nvalue = [1, 18]'),\n"," Text(0.8904494382022472, 0.22727272727272727, 'x[3] <= 0.221\\ngini = 0.499\\nsamples = 21\\nvalue = [10, 11]'),\n"," Text(0.8890449438202247, 0.13636363636363635, 'x[1] <= -1.089\\ngini = 0.408\\nsamples = 14\\nvalue = [10, 4]'),\n"," Text(0.8876404494382022, 0.045454545454545456, 'gini = 0.375\\nsamples = 4\\nvalue = [1, 3]'),\n"," Text(0.8904494382022472, 0.045454545454545456, 'gini = 0.18\\nsamples = 10\\nvalue = [9, 1]'),\n"," Text(0.8918539325842697, 0.13636363636363635, 'gini = 0.0\\nsamples = 7\\nvalue = [0, 7]'),\n"," Text(0.8960674157303371, 0.3181818181818182, 'x[9] <= 0.534\\ngini = 0.049\\nsamples = 1543\\nvalue = [39, 1504]'),\n"," Text(0.8946629213483146, 0.22727272727272727, 'gini = 0.0\\nsamples = 599\\nvalue = [0, 599]'),\n"," Text(0.8974719101123596, 0.22727272727272727, 'x[9] <= 0.538\\ngini = 0.079\\nsamples = 944\\nvalue = [39, 905]'),\n"," Text(0.8946629213483146, 0.13636363636363635, 'x[6] <= 1.333\\ngini = 0.478\\nsamples = 76\\nvalue = [30, 46]'),\n"," Text(0.8932584269662921, 0.045454545454545456, 'gini = 0.499\\nsamples = 58\\nvalue = [30, 28]'),\n"," Text(0.8960674157303371, 0.045454545454545456, 'gini = 0.0\\nsamples = 18\\nvalue = [0, 18]'),\n"," Text(0.9002808988764045, 0.13636363636363635, 'x[8] <= 2.611\\ngini = 0.021\\nsamples = 868\\nvalue = [9, 859]'),\n"," Text(0.898876404494382, 0.045454545454545456, 'gini = 0.018\\nsamples = 866\\nvalue = [8, 858]'),\n"," Text(0.901685393258427, 0.045454545454545456, 'gini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.9560217696629213, 0.5909090909090909, 'x[7] <= 1.562\\ngini = 0.033\\nsamples = 11209\\nvalue = [191, 11018]'),\n"," Text(0.9369733146067416, 0.5, 'x[1] <= -1.609\\ngini = 0.089\\nsamples = 2945\\nvalue = [137, 2808]'),\n"," Text(0.9220505617977528, 0.4090909090909091, 'x[5] <= 1.474\\ngini = 0.312\\nsamples = 202\\nvalue = [39, 163]'),\n"," Text(0.9143258426966292, 0.3181818181818182, 'x[6] <= 0.756\\ngini = 0.25\\nsamples = 184\\nvalue = [27, 157]'),\n"," Text(0.9087078651685393, 0.22727272727272727, 'x[2] <= -0.84\\ngini = 0.194\\nsamples = 165\\nvalue = [18, 147]'),\n"," Text(0.9058988764044944, 0.13636363636363635, 'x[7] <= 1.156\\ngini = 0.302\\nsamples = 81\\nvalue = [15, 66]'),\n"," Text(0.9044943820224719, 0.045454545454545456, 'gini = 0.375\\nsamples = 8\\nvalue = [6, 2]'),\n"," Text(0.9073033707865169, 0.045454545454545456, 'gini = 0.216\\nsamples = 73\\nvalue = [9, 64]'),\n"," Text(0.9115168539325843, 0.13636363636363635, 'x[0] <= -1.434\\ngini = 0.069\\nsamples = 84\\nvalue = [3, 81]'),\n"," Text(0.9101123595505618, 0.045454545454545456, 'gini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.9129213483146067, 0.045454545454545456, 'gini = 0.048\\nsamples = 82\\nvalue = [2, 80]'),\n"," Text(0.9199438202247191, 0.22727272727272727, 'x[0] <= -0.747\\ngini = 0.499\\nsamples = 19\\nvalue = [9, 10]'),\n"," Text(0.9171348314606742, 0.13636363636363635, 'x[7] <= 1.066\\ngini = 0.245\\nsamples = 7\\nvalue = [1, 6]'),\n"," Text(0.9157303370786517, 0.045454545454545456, 'gini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.9185393258426966, 0.045454545454545456, 'gini = 0.0\\nsamples = 5\\nvalue = [0, 5]'),\n"," Text(0.922752808988764, 0.13636363636363635, 'x[0] <= 0.02\\ngini = 0.444\\nsamples = 12\\nvalue = [8, 4]'),\n"," Text(0.9213483146067416, 0.045454545454545456, 'gini = 0.0\\nsamples = 6\\nvalue = [6, 0]'),\n"," Text(0.9241573033707865, 0.045454545454545456, 'gini = 0.444\\nsamples = 6\\nvalue = [2, 4]'),\n"," Text(0.9297752808988764, 0.3181818181818182, 'x[0] <= -0.444\\ngini = 0.444\\nsamples = 18\\nvalue = [12, 6]'),\n"," Text(0.9269662921348315, 0.22727272727272727, 'x[7] <= 1.393\\ngini = 0.278\\nsamples = 6\\nvalue = [1, 5]'),\n"," Text(0.925561797752809, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.9283707865168539, 0.13636363636363635, 'gini = 0.0\\nsamples = 5\\nvalue = [0, 5]'),\n"," Text(0.9325842696629213, 0.22727272727272727, 'x[0] <= 0.756\\ngini = 0.153\\nsamples = 12\\nvalue = [11, 1]'),\n"," Text(0.9311797752808989, 0.13636363636363635, 'gini = 0.0\\nsamples = 9\\nvalue = [9, 0]'),\n"," Text(0.9339887640449438, 0.13636363636363635, 'x[0] <= 0.971\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n"," Text(0.9325842696629213, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.9353932584269663, 0.045454545454545456, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.9518960674157303, 0.4090909090909091, 'x[8] <= 2.624\\ngini = 0.069\\nsamples = 2743\\nvalue = [98, 2645]'),\n"," Text(0.9459269662921348, 0.3181818181818182, 'x[2] <= -0.871\\ngini = 0.063\\nsamples = 2707\\nvalue = [88, 2619]'),\n"," Text(0.9424157303370787, 0.22727272727272727, 'x[1] <= 0.822\\ngini = 0.127\\nsamples = 852\\nvalue = [58, 794]'),\n"," Text(0.9396067415730337, 0.13636363636363635, 'x[0] <= -1.114\\ngini = 0.082\\nsamples = 631\\nvalue = [27, 604]'),\n"," Text(0.9382022471910112, 0.045454545454545456, 'gini = 0.494\\nsamples = 9\\nvalue = [4, 5]'),\n"," Text(0.9410112359550562, 0.045454545454545456, 'gini = 0.071\\nsamples = 622\\nvalue = [23, 599]'),\n"," Text(0.9452247191011236, 0.13636363636363635, 'x[7] <= 1.297\\ngini = 0.241\\nsamples = 221\\nvalue = [31, 190]'),\n"," Text(0.9438202247191011, 0.045454545454545456, 'gini = 0.149\\nsamples = 160\\nvalue = [13, 147]'),\n"," Text(0.9466292134831461, 0.045454545454545456, 'gini = 0.416\\nsamples = 61\\nvalue = [18, 43]'),\n"," Text(0.949438202247191, 0.22727272727272727, 'x[0] <= -1.734\\ngini = 0.032\\nsamples = 1855\\nvalue = [30, 1825]'),\n"," Text(0.9480337078651685, 0.13636363636363635, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.9508426966292135, 0.13636363636363635, 'x[9] <= -0.578\\ngini = 0.031\\nsamples = 1854\\nvalue = [29, 1825]'),\n"," Text(0.949438202247191, 0.045454545454545456, 'gini = 0.052\\nsamples = 1054\\nvalue = [28, 1026]'),\n"," Text(0.952247191011236, 0.045454545454545456, 'gini = 0.002\\nsamples = 800\\nvalue = [1, 799]'),\n"," Text(0.9578651685393258, 0.3181818181818182, 'x[7] <= 1.159\\ngini = 0.401\\nsamples = 36\\nvalue = [10, 26]'),\n"," Text(0.9564606741573034, 0.22727272727272727, 'gini = 0.0\\nsamples = 7\\nvalue = [7, 0]'),\n"," Text(0.9592696629213483, 0.22727272727272727, 'x[5] <= 1.49\\ngini = 0.185\\nsamples = 29\\nvalue = [3, 26]'),\n"," Text(0.9564606741573034, 0.13636363636363635, 'x[2] <= 1.456\\ngini = 0.077\\nsamples = 25\\nvalue = [1, 24]'),\n"," Text(0.9550561797752809, 0.045454545454545456, 'gini = 0.0\\nsamples = 21\\nvalue = [0, 21]'),\n"," Text(0.9578651685393258, 0.045454545454545456, 'gini = 0.375\\nsamples = 4\\nvalue = [1, 3]'),\n"," Text(0.9620786516853933, 0.13636363636363635, 'x[6] <= -1.012\\ngini = 0.5\\nsamples = 4\\nvalue = [2, 2]'),\n"," Text(0.9606741573033708, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.9634831460674157, 0.045454545454545456, 'gini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.9750702247191011, 0.5, 'x[5] <= -1.765\\ngini = 0.013\\nsamples = 8264\\nvalue = [54, 8210]'),\n"," Text(0.9648876404494382, 0.4090909090909091, 'x[9] <= 0.534\\ngini = 0.26\\nsamples = 13\\nvalue = [2, 11]'),\n"," Text(0.9634831460674157, 0.3181818181818182, 'gini = 0.0\\nsamples = 10\\nvalue = [0, 10]'),\n"," Text(0.9662921348314607, 0.3181818181818182, 'x[9] <= 2.204\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n"," Text(0.9648876404494382, 0.22727272727272727, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.9676966292134831, 0.22727272727272727, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.985252808988764, 0.4090909090909091, 'x[6] <= 1.202\\ngini = 0.013\\nsamples = 8251\\nvalue = [52, 8199]'),\n"," Text(0.976123595505618, 0.3181818181818182, 'x[1] <= 1.169\\ngini = 0.009\\nsamples = 7302\\nvalue = [33, 7269]'),\n"," Text(0.9705056179775281, 0.22727272727272727, 'x[5] <= 1.853\\ngini = 0.007\\nsamples = 6662\\nvalue = [24, 6638]'),\n"," Text(0.9676966292134831, 0.13636363636363635, 'x[8] <= 2.629\\ngini = 0.007\\nsamples = 6643\\nvalue = [23, 6620]'),\n"," Text(0.9662921348314607, 0.045454545454545456, 'gini = 0.006\\nsamples = 6395\\nvalue = [19, 6376]'),\n"," Text(0.9691011235955056, 0.045454545454545456, 'gini = 0.032\\nsamples = 248\\nvalue = [4, 244]'),\n"," Text(0.973314606741573, 0.13636363636363635, 'x[8] <= -0.502\\ngini = 0.1\\nsamples = 19\\nvalue = [1, 18]'),\n"," Text(0.9719101123595506, 0.045454545454545456, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.9747191011235955, 0.045454545454545456, 'gini = 0.0\\nsamples = 18\\nvalue = [0, 18]'),\n"," Text(0.9817415730337079, 0.22727272727272727, 'x[5] <= 1.729\\ngini = 0.028\\nsamples = 640\\nvalue = [9, 631]'),\n"," Text(0.9789325842696629, 0.13636363636363635, 'x[5] <= -1.4\\ngini = 0.022\\nsamples = 624\\nvalue = [7, 617]'),\n"," Text(0.9775280898876404, 0.045454545454545456, 'gini = 0.117\\nsamples = 48\\nvalue = [3, 45]'),\n"," Text(0.9803370786516854, 0.045454545454545456, 'gini = 0.014\\nsamples = 576\\nvalue = [4, 572]'),\n"," Text(0.9845505617977528, 0.13636363636363635, 'x[0] <= -0.146\\ngini = 0.219\\nsamples = 16\\nvalue = [2, 14]'),\n"," Text(0.9831460674157303, 0.045454545454545456, 'gini = 0.5\\nsamples = 4\\nvalue = [2, 2]'),\n"," Text(0.9859550561797753, 0.045454545454545456, 'gini = 0.0\\nsamples = 12\\nvalue = [0, 12]'),\n"," Text(0.9943820224719101, 0.3181818181818182, 'x[3] <= -1.962\\ngini = 0.039\\nsamples = 949\\nvalue = [19, 930]'),\n"," Text(0.9915730337078652, 0.22727272727272727, 'x[0] <= 0.67\\ngini = 0.245\\nsamples = 49\\nvalue = [7, 42]'),\n"," Text(0.9901685393258427, 0.13636363636363635, 'x[5] <= 0.257\\ngini = 0.492\\nsamples = 16\\nvalue = [7, 9]'),\n"," Text(0.9887640449438202, 0.045454545454545456, 'gini = 0.245\\nsamples = 7\\nvalue = [6, 1]'),\n"," Text(0.9915730337078652, 0.045454545454545456, 'gini = 0.198\\nsamples = 9\\nvalue = [1, 8]'),\n"," Text(0.9929775280898876, 0.13636363636363635, 'gini = 0.0\\nsamples = 33\\nvalue = [0, 33]'),\n"," Text(0.9971910112359551, 0.22727272727272727, 'x[6] <= 1.204\\ngini = 0.026\\nsamples = 900\\nvalue = [12, 888]'),\n"," Text(0.9957865168539326, 0.13636363636363635, 'x[7] <= 1.582\\ngini = 0.059\\nsamples = 396\\nvalue = [12, 384]'),\n"," Text(0.9943820224719101, 0.045454545454545456, 'gini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.9971910112359551, 0.045454545454545456, 'gini = 0.054\\nsamples = 393\\nvalue = [11, 382]'),\n"," Text(0.9985955056179775, 0.13636363636363635, 'gini = 0.0\\nsamples = 504\\nvalue = [0, 504]')]"]},"metadata":{},"execution_count":292},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["**RANDOM FOREST**"],"metadata":{"id":"MQ0P6csZqn5l"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","rf = RandomForestClassifier(n_estimators= 100, max_depth = 4, max_features='sqrt')\n","rf.fit(X_train_scaled, y_smt)\n","rf.score(X_train_scaled, y_smt)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sq809qJArfLS","executionInfo":{"status":"ok","timestamp":1678877834268,"user_tz":-330,"elapsed":3174,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"81df54c3-adbb-4b19-9fab-bac74738ed65"},"execution_count":293,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9219584166488711"]},"metadata":{},"execution_count":293}]},{"cell_type":"code","source":["r = roc_auc_score(y_test, rf.predict_proba(X_test_scaled)[:,1])\n","r"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iH_QKx6ZsPrk","executionInfo":{"status":"ok","timestamp":1678877834269,"user_tz":-330,"elapsed":46,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"20584faa-0987-48a5-8921-fa5f6b4edb33"},"execution_count":294,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8876113646945031"]},"metadata":{},"execution_count":294}]},{"cell_type":"markdown","source":["**XGBOOST**"],"metadata":{"id":"JMD46337xSgg"}},{"cell_type":"code","source":["import xgboost as xgb\n","from sklearn.model_selection import cross_val_score\n","import numpy as np\n","for lr in [0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.2,0.21,0.22,0.23,0.24,0.25,0.5,0.7,1]:\n","  model = xgb.XGBClassifier(learning_rate = lr, n_estimators=100, verbosity = 0) # initialise the model\n","  model.fit(X_train_scaled,y_smt) #train the model\n","  model.score(X_test_scaled, y_test) # scoring the model \n","  print(\"Learning rate : \", lr, \" Train score : \", model.score(X_train_scaled,y_smt), \" Cross-Val score : \", np.mean(cross_val_score(model, X_train_scaled, y_smt, cv=10)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FoPrbkBMxY4u","executionInfo":{"status":"ok","timestamp":1678879595249,"user_tz":-330,"elapsed":1761021,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"6ef12ee4-c1b5-4f37-a71e-f8f1d8172c50"},"execution_count":295,"outputs":[{"output_type":"stream","name":"stdout","text":["Learning rate :  0.01  Train score :  0.9410999592320087  Cross-Val score :  0.9377423321890099\n","Learning rate :  0.02  Train score :  0.9509231038030712  Cross-Val score :  0.9470803361163664\n","Learning rate :  0.03  Train score :  0.9596785152685834  Cross-Val score :  0.9541083426482949\n","Learning rate :  0.04  Train score :  0.9654636873677467  Cross-Val score :  0.958961999026903\n","Learning rate :  0.05  Train score :  0.9690357399390421  Cross-Val score :  0.9615831394977274\n","Learning rate :  0.06  Train score :  0.9725883791811458  Cross-Val score :  0.9635245628600128\n","Learning rate :  0.07  Train score :  0.9742385121624507  Cross-Val score :  0.9648449398054529\n","Learning rate :  0.08  Train score :  0.9758498184853721  Cross-Val score :  0.9655633449031787\n","Learning rate :  0.09  Train score :  0.9772475781871833  Cross-Val score :  0.9658934268929267\n","Learning rate :  0.1  Train score :  0.9777717380753626  Cross-Val score :  0.9657188090475106\n","Learning rate :  0.11  Train score :  0.9795189377026267  Cross-Val score :  0.9662430620117182\n","Learning rate :  0.12  Train score :  0.9794606977150512  Cross-Val score :  0.9662625133996775\n","Learning rate :  0.13  Train score :  0.9796548310069694  Cross-Val score :  0.9666508214349021\n","Learning rate :  0.14  Train score :  0.9808002174292869  Cross-Val score :  0.9665343881848909\n","Learning rate :  0.15  Train score :  0.9811884840131234  Cross-Val score :  0.9663985676061213\n","Learning rate :  0.2  Train score :  0.9845664032925007  Cross-Val score :  0.9665538659501683\n","Learning rate :  0.21  Train score :  0.9850129098639125  Cross-Val score :  0.9663403490970216\n","Learning rate :  0.22  Train score :  0.9853623497893654  Cross-Val score :  0.9669616178369754\n","Learning rate :  0.23  Train score :  0.9853623497893654  Cross-Val score :  0.9664374741502284\n","Learning rate :  0.24  Train score :  0.9859253363359283  Cross-Val score :  0.9668063119565516\n","Learning rate :  0.25  Train score :  0.9864300828949156  Cross-Val score :  0.967078081232493\n","Learning rate :  0.5  Train score :  0.9952243210188115  Cross-Val score :  0.9669227866566341\n","Learning rate :  0.7  Train score :  0.997806293801324  Cross-Val score :  0.9658939016846515\n","Learning rate :  1  Train score :  0.9998058667080818  Cross-Val score :  0.9665344371713387\n"]}]},{"cell_type":"code","source":["model = xgb.XGBClassifier(learning_rate = 0.25, n_estimators=100)\n","model.fit(X_train_scaled,y_smt) #train the model\n","model.score(X_train_scaled,y_smt) # scoring the model "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pluX1XKRAvsi","executionInfo":{"status":"ok","timestamp":1678879603557,"user_tz":-330,"elapsed":8320,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"a566a32c-90c9-407e-b7fe-8bf3fc7d46a9"},"execution_count":296,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9853623497893654"]},"metadata":{},"execution_count":296}]},{"cell_type":"code","source":["xg = roc_auc_score(y_test, model.predict_proba(X_test_scaled)[:,1])\n","xg"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IV6y2MeLB-eS","executionInfo":{"status":"ok","timestamp":1678879603559,"user_tz":-330,"elapsed":51,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"da688fb5-f155-49f4-c872-16dbcc53220c"},"execution_count":297,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.922990888659167"]},"metadata":{},"execution_count":297}]},{"cell_type":"code","source":["pd.DataFrame({'Model':['Logistic Regression', 'KNN', 'Decision Tree', 'Random Forest', 'XGBoost'], 'Auroc':[log, K, d, r, xg]})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"DU8C_zy7CjX9","executionInfo":{"status":"ok","timestamp":1678879603564,"user_tz":-330,"elapsed":51,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"9418467d-2a3b-4f85-bfc5-eef07d97a75f"},"execution_count":298,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Model     Auroc\n","0  Logistic Regression  0.893669\n","1                  KNN  0.879495\n","2        Decision Tree  0.867369\n","3        Random Forest  0.887611\n","4              XGBoost  0.922991"],"text/html":["\n","  <div id=\"df-ff54c50e-25a8-4346-9f97-6b5c1db99110\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Auroc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Logistic Regression</td>\n","      <td>0.893669</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>KNN</td>\n","      <td>0.879495</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Decision Tree</td>\n","      <td>0.867369</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Random Forest</td>\n","      <td>0.887611</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>XGBoost</td>\n","      <td>0.922991</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff54c50e-25a8-4346-9f97-6b5c1db99110')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ff54c50e-25a8-4346-9f97-6b5c1db99110 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ff54c50e-25a8-4346-9f97-6b5c1db99110');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":298}]},{"cell_type":"markdown","source":["**FEATURE IMPORTANCE**"],"metadata":{"id":"bbbDsWLxzeT8"}},{"cell_type":"code","source":["imp_ft = pd.DataFrame({'ft':['age', 'job', 'marital', 'education_qual', 'call_type', 'day', 'mon','dur', 'num_calls', 'prev_outcome'],\n","                       'imp':model.feature_importances_})\n","imp_ft.sort_values('imp', ascending=False, inplace=True)"],"metadata":{"id":"Tf9TfEkODtib"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["imp_ft.iloc[0:5,0].values"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aKfQa1SZI1vR","executionInfo":{"status":"ok","timestamp":1678879603576,"user_tz":-330,"elapsed":58,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"b7c1bcdb-9fd1-4c2e-ba64-78d98fd2882f"},"execution_count":300,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['prev_outcome', 'call_type', 'dur', 'mon', 'education_qual'],\n","      dtype=object)"]},"metadata":{},"execution_count":300}]},{"cell_type":"code","source":["X_imp= dataset.loc[:, imp_ft.iloc[0:5,0]].values\n","y = dataset['conversion'].values"],"metadata":{"id":"RvUySKbBKItl","executionInfo":{"status":"ok","timestamp":1678879603580,"user_tz":-330,"elapsed":54,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":301,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train_imp,X_test_imp,y_train,y_test = train_test_split(X_imp,y,test_size=0.25,random_state=0) # train- test split"],"metadata":{"id":"ZcQGOb-qK2st","executionInfo":{"status":"ok","timestamp":1678879603580,"user_tz":-330,"elapsed":53,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":302,"outputs":[]},{"cell_type":"code","source":["from imblearn.combine import SMOTEENN\n","smt = SMOTEENN(sampling_strategy='all')\n","X_smt_imp, y_smt = smt.fit_resample(X_train_imp, y_train)"],"metadata":{"id":"aL16gEBGMu52","executionInfo":{"status":"ok","timestamp":1678879604233,"user_tz":-330,"elapsed":705,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":303,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler ## standrard scalig  \n","scaler = StandardScaler() #initialise to a variable\n","scaler.fit(X_smt_imp) # we are finding the values of mean and sd from the td\n","X_train_imp_scaled = scaler.transform(X_smt_imp) # fit (mean, sd) and then transform the training data\n","X_test_imp_scaled = scaler.transform(X_test_imp) # transform the test data "],"metadata":{"id":"i6I3g230NfWa","executionInfo":{"status":"ok","timestamp":1678879604234,"user_tz":-330,"elapsed":6,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}}},"execution_count":304,"outputs":[]},{"cell_type":"code","source":["import xgboost as xgb\n","from sklearn.model_selection import cross_val_score\n","import numpy as np\n","for lr in [0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.2,0.21,0.22,0.23,0.24,0.25,0.5,0.7,1]:\n","  model_imp = xgb.XGBClassifier(learning_rate = lr, n_estimators=100, verbosity = 0) # initialise the model\n","  model_imp.fit(X_train_imp_scaled,y_smt) #train the model\n","  model_imp.score(X_test_imp_scaled, y_test) # scoring the model \n","  print(\"Learning rate : \", lr, \" Train score : \", model_imp.score(X_train_imp_scaled,y_smt), \" Cross-Val score : \", np.mean(cross_val_score(model_imp, X_train_imp_scaled, y_smt, cv=10)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yjjiEh0EiIiV","executionInfo":{"status":"ok","timestamp":1678880338146,"user_tz":-330,"elapsed":733917,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"3b463986-f0ec-466e-e3ab-1dc880d907d7"},"execution_count":305,"outputs":[{"output_type":"stream","name":"stdout","text":["Learning rate :  0.01  Train score :  0.9299571801066909  Cross-Val score :  0.9288335646905745\n","Learning rate :  0.02  Train score :  0.9441666866014401  Cross-Val score :  0.9434261451611242\n","Learning rate :  0.03  Train score :  0.9538549864842236  Cross-Val score :  0.9509378207864468\n","Learning rate :  0.04  Train score :  0.9613664091093941  Cross-Val score :  0.958066812843245\n","Learning rate :  0.05  Train score :  0.9656244767121976  Cross-Val score :  0.9606984947855931\n","Learning rate :  0.06  Train score :  0.9683993971724517  Cross-Val score :  0.9626840949430611\n","Learning rate :  0.07  Train score :  0.9699064660431069  Cross-Val score :  0.9646696493249822\n","Learning rate :  0.08  Train score :  0.972681386503361  Cross-Val score :  0.9656267530603813\n","Learning rate :  0.09  Train score :  0.9746190464799177  Cross-Val score :  0.9666793388637822\n","Learning rate :  0.1  Train score :  0.9749061072171854  Cross-Val score :  0.9678037865532044\n","Learning rate :  0.11  Train score :  0.9766045499126856  Cross-Val score :  0.9680670073893177\n","Learning rate :  0.12  Train score :  0.9786139750735593  Cross-Val score :  0.969143447974375\n","Learning rate :  0.13  Train score :  0.9786618185297706  Cross-Val score :  0.9697893752667858\n","Learning rate :  0.14  Train score :  0.9792837834605171  Cross-Val score :  0.9702437776727482\n","Learning rate :  0.15  Train score :  0.9793316269167285  Cross-Val score :  0.9699807628265944\n","Learning rate :  0.2  Train score :  0.9828241992201516  Cross-Val score :  0.9714160951398959\n","Learning rate :  0.21  Train score :  0.9828481209482574  Cross-Val score :  0.9717270770368115\n","Learning rate :  0.22  Train score :  0.9839006769849054  Cross-Val score :  0.9722294636593658\n","Learning rate :  0.23  Train score :  0.9838289118005885  Cross-Val score :  0.9717270884806982\n","Learning rate :  0.24  Train score :  0.9838528335286941  Cross-Val score :  0.9726599597861825\n","Learning rate :  0.25  Train score :  0.9857187283209339  Cross-Val score :  0.9725165049454756\n","Learning rate :  0.5  Train score :  0.9909336650479631  Cross-Val score :  0.9747651886124175\n","Learning rate :  0.7  Train score :  0.9930387771212592  Cross-Val score :  0.9756262953049166\n","Learning rate :  1  Train score :  0.9961246800468866  Cross-Val score :  0.9753632461271028\n"]}]},{"cell_type":"code","source":["model_imp = xgb.XGBClassifier(learning_rate = 0.24, n_estimators=100)\n","model_imp.fit(X_train_imp_scaled,y_smt) #train the model\n","model_imp.score(X_train_imp_scaled,y_smt) # scoring the model "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"znWbFC18wVXe","executionInfo":{"status":"ok","timestamp":1678880417296,"user_tz":-330,"elapsed":5139,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"555b2587-2384-4ea8-c4b7-d9cf11a3725f"},"execution_count":308,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9838528335286941"]},"metadata":{},"execution_count":308}]},{"cell_type":"code","source":["xg = roc_auc_score(y_test, model_imp.predict_proba(X_test_imp_scaled)[:,1])\n","xg"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JEMNB-qNwvnQ","executionInfo":{"status":"ok","timestamp":1678880340636,"user_tz":-330,"elapsed":499,"user":{"displayName":"sandeep kumar","userId":"02732328756667794825"}},"outputId":"1455c8d9-5d95-41ab-a04b-2c7f40b090d1"},"execution_count":307,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8761224400070795"]},"metadata":{},"execution_count":307}]},{"cell_type":"markdown","source":["#Conclusion \n","- After applying all the models, XG boost has a higher score of 0.92, which is an excellent Auroc score."],"metadata":{"id":"OBxufy7k23Ws"}}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOoVqE3PxNtn61SNySAxcuS"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}